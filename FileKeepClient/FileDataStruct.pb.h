// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FileDataStruct.proto

#ifndef PROTOBUF_FileDataStruct_2eproto__INCLUDED
#define PROTOBUF_FileDataStruct_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace qiuwanli {
class Block;
class BlockDefaultTypeInternal;
extern BlockDefaultTypeInternal _Block_default_instance_;
class BlockCheck;
class BlockCheckDefaultTypeInternal;
extern BlockCheckDefaultTypeInternal _BlockCheck_default_instance_;
class BlockInfo;
class BlockInfoDefaultTypeInternal;
extern BlockInfoDefaultTypeInternal _BlockInfo_default_instance_;
class BlockInfo2Server;
class BlockInfo2ServerDefaultTypeInternal;
extern BlockInfo2ServerDefaultTypeInternal _BlockInfo2Server_default_instance_;
class BlockInfo2ServerTable;
class BlockInfo2ServerTableDefaultTypeInternal;
extern BlockInfo2ServerTableDefaultTypeInternal _BlockInfo2ServerTable_default_instance_;
class BlockInfoTable;
class BlockInfoTableDefaultTypeInternal;
extern BlockInfoTableDefaultTypeInternal _BlockInfoTable_default_instance_;
class BlockListForDown;
class BlockListForDownDefaultTypeInternal;
extern BlockListForDownDefaultTypeInternal _BlockListForDown_default_instance_;
class BlockListForDownCheck;
class BlockListForDownCheckDefaultTypeInternal;
extern BlockListForDownCheckDefaultTypeInternal _BlockListForDownCheck_default_instance_;
class BlockListForDownCheckTable;
class BlockListForDownCheckTableDefaultTypeInternal;
extern BlockListForDownCheckTableDefaultTypeInternal _BlockListForDownCheckTable_default_instance_;
class BlockListForDownTable;
class BlockListForDownTableDefaultTypeInternal;
extern BlockListForDownTableDefaultTypeInternal _BlockListForDownTable_default_instance_;
class ConfigFile;
class ConfigFileDefaultTypeInternal;
extern ConfigFileDefaultTypeInternal _ConfigFile_default_instance_;
class LogTable;
class LogTableDefaultTypeInternal;
extern LogTableDefaultTypeInternal _LogTable_default_instance_;
class Logs;
class LogsDefaultTypeInternal;
extern LogsDefaultTypeInternal _Logs_default_instance_;
}  // namespace qiuwanli

namespace qiuwanli {

namespace protobuf_FileDataStruct_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_FileDataStruct_2eproto

// ===================================================================

class ConfigFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.ConfigFile) */ {
 public:
  ConfigFile();
  virtual ~ConfigFile();

  ConfigFile(const ConfigFile& from);

  inline ConfigFile& operator=(const ConfigFile& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigFile& default_instance();

  static inline const ConfigFile* internal_default_instance() {
    return reinterpret_cast<const ConfigFile*>(
               &_ConfigFile_default_instance_);
  }

  void Swap(ConfigFile* other);

  // implements Message ----------------------------------------------

  inline ConfigFile* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfigFile& from);
  void MergeFrom(const ConfigFile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfigFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string IP = 2;
  void clear_ip();
  static const int kIPFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // string PriKey = 3;
  void clear_prikey();
  static const int kPriKeyFieldNumber = 3;
  const ::std::string& prikey() const;
  void set_prikey(const ::std::string& value);
  #if LANG_CXX11
  void set_prikey(::std::string&& value);
  #endif
  void set_prikey(const char* value);
  void set_prikey(const char* value, size_t size);
  ::std::string* mutable_prikey();
  ::std::string* release_prikey();
  void set_allocated_prikey(::std::string* prikey);

  // string PriKeyMD5 = 4;
  void clear_prikeymd5();
  static const int kPriKeyMD5FieldNumber = 4;
  const ::std::string& prikeymd5() const;
  void set_prikeymd5(const ::std::string& value);
  #if LANG_CXX11
  void set_prikeymd5(::std::string&& value);
  #endif
  void set_prikeymd5(const char* value);
  void set_prikeymd5(const char* value, size_t size);
  ::std::string* mutable_prikeymd5();
  ::std::string* release_prikeymd5();
  void set_allocated_prikeymd5(::std::string* prikeymd5);

  // string ServersIP = 7;
  void clear_serversip();
  static const int kServersIPFieldNumber = 7;
  const ::std::string& serversip() const;
  void set_serversip(const ::std::string& value);
  #if LANG_CXX11
  void set_serversip(::std::string&& value);
  #endif
  void set_serversip(const char* value);
  void set_serversip(const char* value, size_t size);
  ::std::string* mutable_serversip();
  ::std::string* release_serversip();
  void set_allocated_serversip(::std::string* serversip);

  // string ServersPort = 8;
  void clear_serversport();
  static const int kServersPortFieldNumber = 8;
  const ::std::string& serversport() const;
  void set_serversport(const ::std::string& value);
  #if LANG_CXX11
  void set_serversport(::std::string&& value);
  #endif
  void set_serversport(const char* value);
  void set_serversport(const char* value, size_t size);
  ::std::string* mutable_serversport();
  ::std::string* release_serversport();
  void set_allocated_serversport(::std::string* serversport);

  // uint64 TotalSize = 5;
  void clear_totalsize();
  static const int kTotalSizeFieldNumber = 5;
  ::google::protobuf::uint64 totalsize() const;
  void set_totalsize(::google::protobuf::uint64 value);

  // uint64 RemainSize = 6;
  void clear_remainsize();
  static const int kRemainSizeFieldNumber = 6;
  ::google::protobuf::uint64 remainsize() const;
  void set_remainsize(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.ConfigFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr prikey_;
  ::google::protobuf::internal::ArenaStringPtr prikeymd5_;
  ::google::protobuf::internal::ArenaStringPtr serversip_;
  ::google::protobuf::internal::ArenaStringPtr serversport_;
  ::google::protobuf::uint64 totalsize_;
  ::google::protobuf::uint64 remainsize_;
  mutable int _cached_size_;
  friend struct  protobuf_FileDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockInfo) */ {
 public:
  BlockInfo();
  virtual ~BlockInfo();

  BlockInfo(const BlockInfo& from);

  inline BlockInfo& operator=(const BlockInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockInfo& default_instance();

  static inline const BlockInfo* internal_default_instance() {
    return reinterpret_cast<const BlockInfo*>(
               &_BlockInfo_default_instance_);
  }

  void Swap(BlockInfo* other);

  // implements Message ----------------------------------------------

  inline BlockInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockInfo& from);
  void MergeFrom(const BlockInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string FileSHA512 = 1;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 1;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // string BlockMD5 = 2;
  void clear_blockmd5();
  static const int kBlockMD5FieldNumber = 2;
  const ::std::string& blockmd5() const;
  void set_blockmd5(const ::std::string& value);
  #if LANG_CXX11
  void set_blockmd5(::std::string&& value);
  #endif
  void set_blockmd5(const char* value);
  void set_blockmd5(const char* value, size_t size);
  ::std::string* mutable_blockmd5();
  ::std::string* release_blockmd5();
  void set_allocated_blockmd5(::std::string* blockmd5);

  // string SaveFileName = 3;
  void clear_savefilename();
  static const int kSaveFileNameFieldNumber = 3;
  const ::std::string& savefilename() const;
  void set_savefilename(const ::std::string& value);
  #if LANG_CXX11
  void set_savefilename(::std::string&& value);
  #endif
  void set_savefilename(const char* value);
  void set_savefilename(const char* value, size_t size);
  ::std::string* mutable_savefilename();
  ::std::string* release_savefilename();
  void set_allocated_savefilename(::std::string* savefilename);

  // uint64 BlockNumer = 4;
  void clear_blocknumer();
  static const int kBlockNumerFieldNumber = 4;
  ::google::protobuf::uint64 blocknumer() const;
  void set_blocknumer(::google::protobuf::uint64 value);

  // uint64 CurSize = 5;
  void clear_cursize();
  static const int kCurSizeFieldNumber = 5;
  ::google::protobuf::uint64 cursize() const;
  void set_cursize(::google::protobuf::uint64 value);

  // uint64 FileBlockOffset = 6;
  void clear_fileblockoffset();
  static const int kFileBlockOffsetFieldNumber = 6;
  ::google::protobuf::uint64 fileblockoffset() const;
  void set_fileblockoffset(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  ::google::protobuf::internal::ArenaStringPtr blockmd5_;
  ::google::protobuf::internal::ArenaStringPtr savefilename_;
  ::google::protobuf::uint64 blocknumer_;
  ::google::protobuf::uint64 cursize_;
  ::google::protobuf::uint64 fileblockoffset_;
  mutable int _cached_size_;
  friend struct  protobuf_FileDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockInfoTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockInfoTable) */ {
 public:
  BlockInfoTable();
  virtual ~BlockInfoTable();

  BlockInfoTable(const BlockInfoTable& from);

  inline BlockInfoTable& operator=(const BlockInfoTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockInfoTable& default_instance();

  static inline const BlockInfoTable* internal_default_instance() {
    return reinterpret_cast<const BlockInfoTable*>(
               &_BlockInfoTable_default_instance_);
  }

  void Swap(BlockInfoTable* other);

  // implements Message ----------------------------------------------

  inline BlockInfoTable* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockInfoTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockInfoTable& from);
  void MergeFrom(const BlockInfoTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockInfoTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.BlockInfo Block = 1;
  int block_size() const;
  void clear_block();
  static const int kBlockFieldNumber = 1;
  const ::qiuwanli::BlockInfo& block(int index) const;
  ::qiuwanli::BlockInfo* mutable_block(int index);
  ::qiuwanli::BlockInfo* add_block();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo >*
      mutable_block();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo >&
      block() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockInfoTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo > block_;
  mutable int _cached_size_;
  friend struct  protobuf_FileDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Logs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.Logs) */ {
 public:
  Logs();
  virtual ~Logs();

  Logs(const Logs& from);

  inline Logs& operator=(const Logs& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Logs& default_instance();

  static inline const Logs* internal_default_instance() {
    return reinterpret_cast<const Logs*>(
               &_Logs_default_instance_);
  }

  void Swap(Logs* other);

  // implements Message ----------------------------------------------

  inline Logs* New() const PROTOBUF_FINAL { return New(NULL); }

  Logs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Logs& from);
  void MergeFrom(const Logs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Logs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string log_info = 3;
  void clear_log_info();
  static const int kLogInfoFieldNumber = 3;
  const ::std::string& log_info() const;
  void set_log_info(const ::std::string& value);
  #if LANG_CXX11
  void set_log_info(::std::string&& value);
  #endif
  void set_log_info(const char* value);
  void set_log_info(const char* value, size_t size);
  ::std::string* mutable_log_info();
  ::std::string* release_log_info();
  void set_allocated_log_info(::std::string* log_info);

  // bytes log_type = 4;
  void clear_log_type();
  static const int kLogTypeFieldNumber = 4;
  const ::std::string& log_type() const;
  void set_log_type(const ::std::string& value);
  #if LANG_CXX11
  void set_log_type(::std::string&& value);
  #endif
  void set_log_type(const char* value);
  void set_log_type(const void* value, size_t size);
  ::std::string* mutable_log_type();
  ::std::string* release_log_type();
  void set_allocated_log_type(::std::string* log_type);

  // string user_client_UUID = 5;
  void clear_user_client_uuid();
  static const int kUserClientUUIDFieldNumber = 5;
  const ::std::string& user_client_uuid() const;
  void set_user_client_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_user_client_uuid(::std::string&& value);
  #endif
  void set_user_client_uuid(const char* value);
  void set_user_client_uuid(const char* value, size_t size);
  ::std::string* mutable_user_client_uuid();
  ::std::string* release_user_client_uuid();
  void set_allocated_user_client_uuid(::std::string* user_client_uuid);

  // uint64 log_date = 2;
  void clear_log_date();
  static const int kLogDateFieldNumber = 2;
  ::google::protobuf::uint64 log_date() const;
  void set_log_date(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.Logs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr log_info_;
  ::google::protobuf::internal::ArenaStringPtr log_type_;
  ::google::protobuf::internal::ArenaStringPtr user_client_uuid_;
  ::google::protobuf::uint64 log_date_;
  mutable int _cached_size_;
  friend struct  protobuf_FileDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.LogTable) */ {
 public:
  LogTable();
  virtual ~LogTable();

  LogTable(const LogTable& from);

  inline LogTable& operator=(const LogTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogTable& default_instance();

  static inline const LogTable* internal_default_instance() {
    return reinterpret_cast<const LogTable*>(
               &_LogTable_default_instance_);
  }

  void Swap(LogTable* other);

  // implements Message ----------------------------------------------

  inline LogTable* New() const PROTOBUF_FINAL { return New(NULL); }

  LogTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LogTable& from);
  void MergeFrom(const LogTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LogTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.Logs log = 2;
  int log_size() const;
  void clear_log();
  static const int kLogFieldNumber = 2;
  const ::qiuwanli::Logs& log(int index) const;
  ::qiuwanli::Logs* mutable_log(int index);
  ::qiuwanli::Logs* add_log();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >*
      mutable_log();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >&
      log() const;

  // string logdate = 1;
  void clear_logdate();
  static const int kLogdateFieldNumber = 1;
  const ::std::string& logdate() const;
  void set_logdate(const ::std::string& value);
  #if LANG_CXX11
  void set_logdate(::std::string&& value);
  #endif
  void set_logdate(const char* value);
  void set_logdate(const char* value, size_t size);
  ::std::string* mutable_logdate();
  ::std::string* release_logdate();
  void set_allocated_logdate(::std::string* logdate);

  // @@protoc_insertion_point(class_scope:qiuwanli.LogTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs > log_;
  ::google::protobuf::internal::ArenaStringPtr logdate_;
  mutable int _cached_size_;
  friend struct  protobuf_FileDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Block : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.Block) */ {
 public:
  Block();
  virtual ~Block();

  Block(const Block& from);

  inline Block& operator=(const Block& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Block& default_instance();

  static inline const Block* internal_default_instance() {
    return reinterpret_cast<const Block*>(
               &_Block_default_instance_);
  }

  void Swap(Block* other);

  // implements Message ----------------------------------------------

  inline Block* New() const PROTOBUF_FINAL { return New(NULL); }

  Block* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Block& from);
  void MergeFrom(const Block& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Block* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 BlockItem = 1;
  void clear_blockitem();
  static const int kBlockItemFieldNumber = 1;
  ::google::protobuf::uint32 blockitem() const;
  void set_blockitem(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.Block)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 blockitem_;
  mutable int _cached_size_;
  friend struct  protobuf_FileDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockListForDown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockListForDown) */ {
 public:
  BlockListForDown();
  virtual ~BlockListForDown();

  BlockListForDown(const BlockListForDown& from);

  inline BlockListForDown& operator=(const BlockListForDown& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockListForDown& default_instance();

  static inline const BlockListForDown* internal_default_instance() {
    return reinterpret_cast<const BlockListForDown*>(
               &_BlockListForDown_default_instance_);
  }

  void Swap(BlockListForDown* other);

  // implements Message ----------------------------------------------

  inline BlockListForDown* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockListForDown* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockListForDown& from);
  void MergeFrom(const BlockListForDown& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockListForDown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.Block Blocks = 4;
  int blocks_size() const;
  void clear_blocks();
  static const int kBlocksFieldNumber = 4;
  const ::qiuwanli::Block& blocks(int index) const;
  ::qiuwanli::Block* mutable_blocks(int index);
  ::qiuwanli::Block* add_blocks();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Block >*
      mutable_blocks();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Block >&
      blocks() const;

  // string FileSHA512 = 1;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 1;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // string SaveServersIP = 2;
  void clear_saveserversip();
  static const int kSaveServersIPFieldNumber = 2;
  const ::std::string& saveserversip() const;
  void set_saveserversip(const ::std::string& value);
  #if LANG_CXX11
  void set_saveserversip(::std::string&& value);
  #endif
  void set_saveserversip(const char* value);
  void set_saveserversip(const char* value, size_t size);
  ::std::string* mutable_saveserversip();
  ::std::string* release_saveserversip();
  void set_allocated_saveserversip(::std::string* saveserversip);

  // string FileMD5 = 3;
  void clear_filemd5();
  static const int kFileMD5FieldNumber = 3;
  const ::std::string& filemd5() const;
  void set_filemd5(const ::std::string& value);
  #if LANG_CXX11
  void set_filemd5(::std::string&& value);
  #endif
  void set_filemd5(const char* value);
  void set_filemd5(const char* value, size_t size);
  ::std::string* mutable_filemd5();
  ::std::string* release_filemd5();
  void set_allocated_filemd5(::std::string* filemd5);

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockListForDown)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Block > blocks_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  ::google::protobuf::internal::ArenaStringPtr saveserversip_;
  ::google::protobuf::internal::ArenaStringPtr filemd5_;
  mutable int _cached_size_;
  friend struct  protobuf_FileDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockListForDownTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockListForDownTable) */ {
 public:
  BlockListForDownTable();
  virtual ~BlockListForDownTable();

  BlockListForDownTable(const BlockListForDownTable& from);

  inline BlockListForDownTable& operator=(const BlockListForDownTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockListForDownTable& default_instance();

  static inline const BlockListForDownTable* internal_default_instance() {
    return reinterpret_cast<const BlockListForDownTable*>(
               &_BlockListForDownTable_default_instance_);
  }

  void Swap(BlockListForDownTable* other);

  // implements Message ----------------------------------------------

  inline BlockListForDownTable* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockListForDownTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockListForDownTable& from);
  void MergeFrom(const BlockListForDownTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockListForDownTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.BlockListForDown BlockListForDown = 2;
  int blocklistfordown_size() const;
  void clear_blocklistfordown();
  static const int kBlockListForDownFieldNumber = 2;
  const ::qiuwanli::BlockListForDown& blocklistfordown(int index) const;
  ::qiuwanli::BlockListForDown* mutable_blocklistfordown(int index);
  ::qiuwanli::BlockListForDown* add_blocklistfordown();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockListForDown >*
      mutable_blocklistfordown();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockListForDown >&
      blocklistfordown() const;

  // string PrikeyMd5 = 1;
  void clear_prikeymd5();
  static const int kPrikeyMd5FieldNumber = 1;
  const ::std::string& prikeymd5() const;
  void set_prikeymd5(const ::std::string& value);
  #if LANG_CXX11
  void set_prikeymd5(::std::string&& value);
  #endif
  void set_prikeymd5(const char* value);
  void set_prikeymd5(const char* value, size_t size);
  ::std::string* mutable_prikeymd5();
  ::std::string* release_prikeymd5();
  void set_allocated_prikeymd5(::std::string* prikeymd5);

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockListForDownTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockListForDown > blocklistfordown_;
  ::google::protobuf::internal::ArenaStringPtr prikeymd5_;
  mutable int _cached_size_;
  friend struct  protobuf_FileDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockCheck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockCheck) */ {
 public:
  BlockCheck();
  virtual ~BlockCheck();

  BlockCheck(const BlockCheck& from);

  inline BlockCheck& operator=(const BlockCheck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockCheck& default_instance();

  static inline const BlockCheck* internal_default_instance() {
    return reinterpret_cast<const BlockCheck*>(
               &_BlockCheck_default_instance_);
  }

  void Swap(BlockCheck* other);

  // implements Message ----------------------------------------------

  inline BlockCheck* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockCheck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockCheck& from);
  void MergeFrom(const BlockCheck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockCheck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string BlockMD5 = 2;
  void clear_blockmd5();
  static const int kBlockMD5FieldNumber = 2;
  const ::std::string& blockmd5() const;
  void set_blockmd5(const ::std::string& value);
  #if LANG_CXX11
  void set_blockmd5(::std::string&& value);
  #endif
  void set_blockmd5(const char* value);
  void set_blockmd5(const char* value, size_t size);
  ::std::string* mutable_blockmd5();
  ::std::string* release_blockmd5();
  void set_allocated_blockmd5(::std::string* blockmd5);

  // uint32 BlockItem = 1;
  void clear_blockitem();
  static const int kBlockItemFieldNumber = 1;
  ::google::protobuf::uint32 blockitem() const;
  void set_blockitem(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockCheck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr blockmd5_;
  ::google::protobuf::uint32 blockitem_;
  mutable int _cached_size_;
  friend struct  protobuf_FileDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockListForDownCheck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockListForDownCheck) */ {
 public:
  BlockListForDownCheck();
  virtual ~BlockListForDownCheck();

  BlockListForDownCheck(const BlockListForDownCheck& from);

  inline BlockListForDownCheck& operator=(const BlockListForDownCheck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockListForDownCheck& default_instance();

  static inline const BlockListForDownCheck* internal_default_instance() {
    return reinterpret_cast<const BlockListForDownCheck*>(
               &_BlockListForDownCheck_default_instance_);
  }

  void Swap(BlockListForDownCheck* other);

  // implements Message ----------------------------------------------

  inline BlockListForDownCheck* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockListForDownCheck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockListForDownCheck& from);
  void MergeFrom(const BlockListForDownCheck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockListForDownCheck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.BlockCheck Blocks = 4;
  int blocks_size() const;
  void clear_blocks();
  static const int kBlocksFieldNumber = 4;
  const ::qiuwanli::BlockCheck& blocks(int index) const;
  ::qiuwanli::BlockCheck* mutable_blocks(int index);
  ::qiuwanli::BlockCheck* add_blocks();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockCheck >*
      mutable_blocks();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockCheck >&
      blocks() const;

  // string FileSHA512 = 1;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 1;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // string SaveServersIP = 2;
  void clear_saveserversip();
  static const int kSaveServersIPFieldNumber = 2;
  const ::std::string& saveserversip() const;
  void set_saveserversip(const ::std::string& value);
  #if LANG_CXX11
  void set_saveserversip(::std::string&& value);
  #endif
  void set_saveserversip(const char* value);
  void set_saveserversip(const char* value, size_t size);
  ::std::string* mutable_saveserversip();
  ::std::string* release_saveserversip();
  void set_allocated_saveserversip(::std::string* saveserversip);

  // string FileMD5 = 3;
  void clear_filemd5();
  static const int kFileMD5FieldNumber = 3;
  const ::std::string& filemd5() const;
  void set_filemd5(const ::std::string& value);
  #if LANG_CXX11
  void set_filemd5(::std::string&& value);
  #endif
  void set_filemd5(const char* value);
  void set_filemd5(const char* value, size_t size);
  ::std::string* mutable_filemd5();
  ::std::string* release_filemd5();
  void set_allocated_filemd5(::std::string* filemd5);

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockListForDownCheck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockCheck > blocks_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  ::google::protobuf::internal::ArenaStringPtr saveserversip_;
  ::google::protobuf::internal::ArenaStringPtr filemd5_;
  mutable int _cached_size_;
  friend struct  protobuf_FileDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockListForDownCheckTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockListForDownCheckTable) */ {
 public:
  BlockListForDownCheckTable();
  virtual ~BlockListForDownCheckTable();

  BlockListForDownCheckTable(const BlockListForDownCheckTable& from);

  inline BlockListForDownCheckTable& operator=(const BlockListForDownCheckTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockListForDownCheckTable& default_instance();

  static inline const BlockListForDownCheckTable* internal_default_instance() {
    return reinterpret_cast<const BlockListForDownCheckTable*>(
               &_BlockListForDownCheckTable_default_instance_);
  }

  void Swap(BlockListForDownCheckTable* other);

  // implements Message ----------------------------------------------

  inline BlockListForDownCheckTable* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockListForDownCheckTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockListForDownCheckTable& from);
  void MergeFrom(const BlockListForDownCheckTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockListForDownCheckTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.BlockListForDown BlockListForDown = 1;
  int blocklistfordown_size() const;
  void clear_blocklistfordown();
  static const int kBlockListForDownFieldNumber = 1;
  const ::qiuwanli::BlockListForDown& blocklistfordown(int index) const;
  ::qiuwanli::BlockListForDown* mutable_blocklistfordown(int index);
  ::qiuwanli::BlockListForDown* add_blocklistfordown();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockListForDown >*
      mutable_blocklistfordown();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockListForDown >&
      blocklistfordown() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockListForDownCheckTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockListForDown > blocklistfordown_;
  mutable int _cached_size_;
  friend struct  protobuf_FileDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockInfo2Server : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockInfo2Server) */ {
 public:
  BlockInfo2Server();
  virtual ~BlockInfo2Server();

  BlockInfo2Server(const BlockInfo2Server& from);

  inline BlockInfo2Server& operator=(const BlockInfo2Server& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockInfo2Server& default_instance();

  static inline const BlockInfo2Server* internal_default_instance() {
    return reinterpret_cast<const BlockInfo2Server*>(
               &_BlockInfo2Server_default_instance_);
  }

  void Swap(BlockInfo2Server* other);

  // implements Message ----------------------------------------------

  inline BlockInfo2Server* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockInfo2Server* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockInfo2Server& from);
  void MergeFrom(const BlockInfo2Server& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockInfo2Server* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.Block BlockNumer = 2;
  int blocknumer_size() const;
  void clear_blocknumer();
  static const int kBlockNumerFieldNumber = 2;
  const ::qiuwanli::Block& blocknumer(int index) const;
  ::qiuwanli::Block* mutable_blocknumer(int index);
  ::qiuwanli::Block* add_blocknumer();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Block >*
      mutable_blocknumer();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Block >&
      blocknumer() const;

  // string FileSHA512 = 1;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 1;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockInfo2Server)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Block > blocknumer_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  mutable int _cached_size_;
  friend struct  protobuf_FileDataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockInfo2ServerTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockInfo2ServerTable) */ {
 public:
  BlockInfo2ServerTable();
  virtual ~BlockInfo2ServerTable();

  BlockInfo2ServerTable(const BlockInfo2ServerTable& from);

  inline BlockInfo2ServerTable& operator=(const BlockInfo2ServerTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockInfo2ServerTable& default_instance();

  static inline const BlockInfo2ServerTable* internal_default_instance() {
    return reinterpret_cast<const BlockInfo2ServerTable*>(
               &_BlockInfo2ServerTable_default_instance_);
  }

  void Swap(BlockInfo2ServerTable* other);

  // implements Message ----------------------------------------------

  inline BlockInfo2ServerTable* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockInfo2ServerTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockInfo2ServerTable& from);
  void MergeFrom(const BlockInfo2ServerTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockInfo2ServerTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.BlockInfo2Server BlockInfo = 2;
  int blockinfo_size() const;
  void clear_blockinfo();
  static const int kBlockInfoFieldNumber = 2;
  const ::qiuwanli::BlockInfo2Server& blockinfo(int index) const;
  ::qiuwanli::BlockInfo2Server* mutable_blockinfo(int index);
  ::qiuwanli::BlockInfo2Server* add_blockinfo();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo2Server >*
      mutable_blockinfo();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo2Server >&
      blockinfo() const;

  // string ClientIP = 1;
  void clear_clientip();
  static const int kClientIPFieldNumber = 1;
  const ::std::string& clientip() const;
  void set_clientip(const ::std::string& value);
  #if LANG_CXX11
  void set_clientip(::std::string&& value);
  #endif
  void set_clientip(const char* value);
  void set_clientip(const char* value, size_t size);
  ::std::string* mutable_clientip();
  ::std::string* release_clientip();
  void set_allocated_clientip(::std::string* clientip);

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockInfo2ServerTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo2Server > blockinfo_;
  ::google::protobuf::internal::ArenaStringPtr clientip_;
  mutable int _cached_size_;
  friend struct  protobuf_FileDataStruct_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigFile

// string ID = 1;
inline void ConfigFile::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigFile::id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ConfigFile.ID)
  return id_.GetNoArena();
}
inline void ConfigFile::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ConfigFile.ID)
}
#if LANG_CXX11
inline void ConfigFile::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ConfigFile.ID)
}
#endif
inline void ConfigFile::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ConfigFile.ID)
}
inline void ConfigFile::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ConfigFile.ID)
}
inline ::std::string* ConfigFile::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ConfigFile.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigFile::release_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.ConfigFile.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigFile::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ConfigFile.ID)
}

// string IP = 2;
inline void ConfigFile::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigFile::ip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ConfigFile.IP)
  return ip_.GetNoArena();
}
inline void ConfigFile::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ConfigFile.IP)
}
#if LANG_CXX11
inline void ConfigFile::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ConfigFile.IP)
}
#endif
inline void ConfigFile::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ConfigFile.IP)
}
inline void ConfigFile::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ConfigFile.IP)
}
inline ::std::string* ConfigFile::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ConfigFile.IP)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigFile::release_ip() {
  // @@protoc_insertion_point(field_release:qiuwanli.ConfigFile.IP)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigFile::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ConfigFile.IP)
}

// string PriKey = 3;
inline void ConfigFile::clear_prikey() {
  prikey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigFile::prikey() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ConfigFile.PriKey)
  return prikey_.GetNoArena();
}
inline void ConfigFile::set_prikey(const ::std::string& value) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ConfigFile.PriKey)
}
#if LANG_CXX11
inline void ConfigFile::set_prikey(::std::string&& value) {
  
  prikey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ConfigFile.PriKey)
}
#endif
inline void ConfigFile::set_prikey(const char* value) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ConfigFile.PriKey)
}
inline void ConfigFile::set_prikey(const char* value, size_t size) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ConfigFile.PriKey)
}
inline ::std::string* ConfigFile::mutable_prikey() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ConfigFile.PriKey)
  return prikey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigFile::release_prikey() {
  // @@protoc_insertion_point(field_release:qiuwanli.ConfigFile.PriKey)
  
  return prikey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigFile::set_allocated_prikey(::std::string* prikey) {
  if (prikey != NULL) {
    
  } else {
    
  }
  prikey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prikey);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ConfigFile.PriKey)
}

// string PriKeyMD5 = 4;
inline void ConfigFile::clear_prikeymd5() {
  prikeymd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigFile::prikeymd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ConfigFile.PriKeyMD5)
  return prikeymd5_.GetNoArena();
}
inline void ConfigFile::set_prikeymd5(const ::std::string& value) {
  
  prikeymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ConfigFile.PriKeyMD5)
}
#if LANG_CXX11
inline void ConfigFile::set_prikeymd5(::std::string&& value) {
  
  prikeymd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ConfigFile.PriKeyMD5)
}
#endif
inline void ConfigFile::set_prikeymd5(const char* value) {
  
  prikeymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ConfigFile.PriKeyMD5)
}
inline void ConfigFile::set_prikeymd5(const char* value, size_t size) {
  
  prikeymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ConfigFile.PriKeyMD5)
}
inline ::std::string* ConfigFile::mutable_prikeymd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ConfigFile.PriKeyMD5)
  return prikeymd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigFile::release_prikeymd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.ConfigFile.PriKeyMD5)
  
  return prikeymd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigFile::set_allocated_prikeymd5(::std::string* prikeymd5) {
  if (prikeymd5 != NULL) {
    
  } else {
    
  }
  prikeymd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prikeymd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ConfigFile.PriKeyMD5)
}

// uint64 TotalSize = 5;
inline void ConfigFile::clear_totalsize() {
  totalsize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ConfigFile::totalsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ConfigFile.TotalSize)
  return totalsize_;
}
inline void ConfigFile::set_totalsize(::google::protobuf::uint64 value) {
  
  totalsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.ConfigFile.TotalSize)
}

// uint64 RemainSize = 6;
inline void ConfigFile::clear_remainsize() {
  remainsize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ConfigFile::remainsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ConfigFile.RemainSize)
  return remainsize_;
}
inline void ConfigFile::set_remainsize(::google::protobuf::uint64 value) {
  
  remainsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.ConfigFile.RemainSize)
}

// string ServersIP = 7;
inline void ConfigFile::clear_serversip() {
  serversip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigFile::serversip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ConfigFile.ServersIP)
  return serversip_.GetNoArena();
}
inline void ConfigFile::set_serversip(const ::std::string& value) {
  
  serversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ConfigFile.ServersIP)
}
#if LANG_CXX11
inline void ConfigFile::set_serversip(::std::string&& value) {
  
  serversip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ConfigFile.ServersIP)
}
#endif
inline void ConfigFile::set_serversip(const char* value) {
  
  serversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ConfigFile.ServersIP)
}
inline void ConfigFile::set_serversip(const char* value, size_t size) {
  
  serversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ConfigFile.ServersIP)
}
inline ::std::string* ConfigFile::mutable_serversip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ConfigFile.ServersIP)
  return serversip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigFile::release_serversip() {
  // @@protoc_insertion_point(field_release:qiuwanli.ConfigFile.ServersIP)
  
  return serversip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigFile::set_allocated_serversip(::std::string* serversip) {
  if (serversip != NULL) {
    
  } else {
    
  }
  serversip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serversip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ConfigFile.ServersIP)
}

// string ServersPort = 8;
inline void ConfigFile::clear_serversport() {
  serversport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigFile::serversport() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ConfigFile.ServersPort)
  return serversport_.GetNoArena();
}
inline void ConfigFile::set_serversport(const ::std::string& value) {
  
  serversport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ConfigFile.ServersPort)
}
#if LANG_CXX11
inline void ConfigFile::set_serversport(::std::string&& value) {
  
  serversport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ConfigFile.ServersPort)
}
#endif
inline void ConfigFile::set_serversport(const char* value) {
  
  serversport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ConfigFile.ServersPort)
}
inline void ConfigFile::set_serversport(const char* value, size_t size) {
  
  serversport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ConfigFile.ServersPort)
}
inline ::std::string* ConfigFile::mutable_serversport() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ConfigFile.ServersPort)
  return serversport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigFile::release_serversport() {
  // @@protoc_insertion_point(field_release:qiuwanli.ConfigFile.ServersPort)
  
  return serversport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigFile::set_allocated_serversport(::std::string* serversport) {
  if (serversport != NULL) {
    
  } else {
    
  }
  serversport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serversport);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ConfigFile.ServersPort)
}

// -------------------------------------------------------------------

// BlockInfo

// string FileSHA512 = 1;
inline void BlockInfo::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockInfo::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void BlockInfo::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo.FileSHA512)
}
#if LANG_CXX11
inline void BlockInfo::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockInfo.FileSHA512)
}
#endif
inline void BlockInfo::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockInfo.FileSHA512)
}
inline void BlockInfo::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockInfo.FileSHA512)
}
inline ::std::string* BlockInfo::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfo.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockInfo::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockInfo.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockInfo::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockInfo.FileSHA512)
}

// string BlockMD5 = 2;
inline void BlockInfo::clear_blockmd5() {
  blockmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockInfo::blockmd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo.BlockMD5)
  return blockmd5_.GetNoArena();
}
inline void BlockInfo::set_blockmd5(const ::std::string& value) {
  
  blockmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo.BlockMD5)
}
#if LANG_CXX11
inline void BlockInfo::set_blockmd5(::std::string&& value) {
  
  blockmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockInfo.BlockMD5)
}
#endif
inline void BlockInfo::set_blockmd5(const char* value) {
  
  blockmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockInfo.BlockMD5)
}
inline void BlockInfo::set_blockmd5(const char* value, size_t size) {
  
  blockmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockInfo.BlockMD5)
}
inline ::std::string* BlockInfo::mutable_blockmd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfo.BlockMD5)
  return blockmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockInfo::release_blockmd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockInfo.BlockMD5)
  
  return blockmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockInfo::set_allocated_blockmd5(::std::string* blockmd5) {
  if (blockmd5 != NULL) {
    
  } else {
    
  }
  blockmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blockmd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockInfo.BlockMD5)
}

// string SaveFileName = 3;
inline void BlockInfo::clear_savefilename() {
  savefilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockInfo::savefilename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo.SaveFileName)
  return savefilename_.GetNoArena();
}
inline void BlockInfo::set_savefilename(const ::std::string& value) {
  
  savefilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo.SaveFileName)
}
#if LANG_CXX11
inline void BlockInfo::set_savefilename(::std::string&& value) {
  
  savefilename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockInfo.SaveFileName)
}
#endif
inline void BlockInfo::set_savefilename(const char* value) {
  
  savefilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockInfo.SaveFileName)
}
inline void BlockInfo::set_savefilename(const char* value, size_t size) {
  
  savefilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockInfo.SaveFileName)
}
inline ::std::string* BlockInfo::mutable_savefilename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfo.SaveFileName)
  return savefilename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockInfo::release_savefilename() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockInfo.SaveFileName)
  
  return savefilename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockInfo::set_allocated_savefilename(::std::string* savefilename) {
  if (savefilename != NULL) {
    
  } else {
    
  }
  savefilename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), savefilename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockInfo.SaveFileName)
}

// uint64 BlockNumer = 4;
inline void BlockInfo::clear_blocknumer() {
  blocknumer_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BlockInfo::blocknumer() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo.BlockNumer)
  return blocknumer_;
}
inline void BlockInfo::set_blocknumer(::google::protobuf::uint64 value) {
  
  blocknumer_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo.BlockNumer)
}

// uint64 CurSize = 5;
inline void BlockInfo::clear_cursize() {
  cursize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BlockInfo::cursize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo.CurSize)
  return cursize_;
}
inline void BlockInfo::set_cursize(::google::protobuf::uint64 value) {
  
  cursize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo.CurSize)
}

// uint64 FileBlockOffset = 6;
inline void BlockInfo::clear_fileblockoffset() {
  fileblockoffset_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BlockInfo::fileblockoffset() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo.FileBlockOffset)
  return fileblockoffset_;
}
inline void BlockInfo::set_fileblockoffset(::google::protobuf::uint64 value) {
  
  fileblockoffset_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo.FileBlockOffset)
}

// -------------------------------------------------------------------

// BlockInfoTable

// repeated .qiuwanli.BlockInfo Block = 1;
inline int BlockInfoTable::block_size() const {
  return block_.size();
}
inline void BlockInfoTable::clear_block() {
  block_.Clear();
}
inline const ::qiuwanli::BlockInfo& BlockInfoTable::block(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfoTable.Block)
  return block_.Get(index);
}
inline ::qiuwanli::BlockInfo* BlockInfoTable::mutable_block(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfoTable.Block)
  return block_.Mutable(index);
}
inline ::qiuwanli::BlockInfo* BlockInfoTable::add_block() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockInfoTable.Block)
  return block_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo >*
BlockInfoTable::mutable_block() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockInfoTable.Block)
  return &block_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo >&
BlockInfoTable::block() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockInfoTable.Block)
  return block_;
}

// -------------------------------------------------------------------

// Logs

// string user_id = 1;
inline void Logs::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.user_id)
  return user_id_.GetNoArena();
}
inline void Logs::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.user_id)
}
#if LANG_CXX11
inline void Logs::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.user_id)
}
#endif
inline void Logs::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.user_id)
}
inline void Logs::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.user_id)
}
inline ::std::string* Logs::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.user_id)
}

// uint64 log_date = 2;
inline void Logs::clear_log_date() {
  log_date_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Logs::log_date() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_date)
  return log_date_;
}
inline void Logs::set_log_date(::google::protobuf::uint64 value) {
  
  log_date_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_date)
}

// string log_info = 3;
inline void Logs::clear_log_info() {
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::log_info() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_info)
  return log_info_.GetNoArena();
}
inline void Logs::set_log_info(const ::std::string& value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_info)
}
#if LANG_CXX11
inline void Logs::set_log_info(::std::string&& value) {
  
  log_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_info)
}
#endif
inline void Logs::set_log_info(const char* value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_info)
}
inline void Logs::set_log_info(const char* value, size_t size) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_info)
}
inline ::std::string* Logs::mutable_log_info() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_info)
  return log_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_log_info() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_info)
  
  return log_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_log_info(::std::string* log_info) {
  if (log_info != NULL) {
    
  } else {
    
  }
  log_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_info);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_info)
}

// bytes log_type = 4;
inline void Logs::clear_log_type() {
  log_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::log_type() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_type)
  return log_type_.GetNoArena();
}
inline void Logs::set_log_type(const ::std::string& value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_type)
}
#if LANG_CXX11
inline void Logs::set_log_type(::std::string&& value) {
  
  log_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_type)
}
#endif
inline void Logs::set_log_type(const char* value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_type)
}
inline void Logs::set_log_type(const void* value, size_t size) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_type)
}
inline ::std::string* Logs::mutable_log_type() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_type)
  return log_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_log_type() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_type)
  
  return log_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_log_type(::std::string* log_type) {
  if (log_type != NULL) {
    
  } else {
    
  }
  log_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_type);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_type)
}

// string user_client_UUID = 5;
inline void Logs::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
inline void Logs::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.user_client_UUID)
}
#if LANG_CXX11
inline void Logs::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.user_client_UUID)
}
#endif
inline void Logs::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.user_client_UUID)
}
inline void Logs::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.user_client_UUID)
}
inline ::std::string* Logs::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.user_client_UUID)
}

// -------------------------------------------------------------------

// LogTable

// string logdate = 1;
inline void LogTable::clear_logdate() {
  logdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogTable::logdate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.LogTable.logdate)
  return logdate_.GetNoArena();
}
inline void LogTable::set_logdate(const ::std::string& value) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.LogTable.logdate)
}
#if LANG_CXX11
inline void LogTable::set_logdate(::std::string&& value) {
  
  logdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.LogTable.logdate)
}
#endif
inline void LogTable::set_logdate(const char* value) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.LogTable.logdate)
}
inline void LogTable::set_logdate(const char* value, size_t size) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.LogTable.logdate)
}
inline ::std::string* LogTable::mutable_logdate() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.LogTable.logdate)
  return logdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogTable::release_logdate() {
  // @@protoc_insertion_point(field_release:qiuwanli.LogTable.logdate)
  
  return logdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogTable::set_allocated_logdate(::std::string* logdate) {
  if (logdate != NULL) {
    
  } else {
    
  }
  logdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logdate);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.LogTable.logdate)
}

// repeated .qiuwanli.Logs log = 2;
inline int LogTable::log_size() const {
  return log_.size();
}
inline void LogTable::clear_log() {
  log_.Clear();
}
inline const ::qiuwanli::Logs& LogTable::log(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.LogTable.log)
  return log_.Get(index);
}
inline ::qiuwanli::Logs* LogTable::mutable_log(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.LogTable.log)
  return log_.Mutable(index);
}
inline ::qiuwanli::Logs* LogTable::add_log() {
  // @@protoc_insertion_point(field_add:qiuwanli.LogTable.log)
  return log_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >*
LogTable::mutable_log() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.LogTable.log)
  return &log_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >&
LogTable::log() const {
  // @@protoc_insertion_point(field_list:qiuwanli.LogTable.log)
  return log_;
}

// -------------------------------------------------------------------

// Block

// uint32 BlockItem = 1;
inline void Block::clear_blockitem() {
  blockitem_ = 0u;
}
inline ::google::protobuf::uint32 Block::blockitem() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Block.BlockItem)
  return blockitem_;
}
inline void Block::set_blockitem(::google::protobuf::uint32 value) {
  
  blockitem_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.Block.BlockItem)
}

// -------------------------------------------------------------------

// BlockListForDown

// string FileSHA512 = 1;
inline void BlockListForDown::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockListForDown::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListForDown.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void BlockListForDown::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockListForDown.FileSHA512)
}
#if LANG_CXX11
inline void BlockListForDown::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockListForDown.FileSHA512)
}
#endif
inline void BlockListForDown::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockListForDown.FileSHA512)
}
inline void BlockListForDown::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockListForDown.FileSHA512)
}
inline ::std::string* BlockListForDown::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListForDown.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockListForDown::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockListForDown.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockListForDown::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockListForDown.FileSHA512)
}

// string SaveServersIP = 2;
inline void BlockListForDown::clear_saveserversip() {
  saveserversip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockListForDown::saveserversip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListForDown.SaveServersIP)
  return saveserversip_.GetNoArena();
}
inline void BlockListForDown::set_saveserversip(const ::std::string& value) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockListForDown.SaveServersIP)
}
#if LANG_CXX11
inline void BlockListForDown::set_saveserversip(::std::string&& value) {
  
  saveserversip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockListForDown.SaveServersIP)
}
#endif
inline void BlockListForDown::set_saveserversip(const char* value) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockListForDown.SaveServersIP)
}
inline void BlockListForDown::set_saveserversip(const char* value, size_t size) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockListForDown.SaveServersIP)
}
inline ::std::string* BlockListForDown::mutable_saveserversip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListForDown.SaveServersIP)
  return saveserversip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockListForDown::release_saveserversip() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockListForDown.SaveServersIP)
  
  return saveserversip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockListForDown::set_allocated_saveserversip(::std::string* saveserversip) {
  if (saveserversip != NULL) {
    
  } else {
    
  }
  saveserversip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), saveserversip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockListForDown.SaveServersIP)
}

// string FileMD5 = 3;
inline void BlockListForDown::clear_filemd5() {
  filemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockListForDown::filemd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListForDown.FileMD5)
  return filemd5_.GetNoArena();
}
inline void BlockListForDown::set_filemd5(const ::std::string& value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockListForDown.FileMD5)
}
#if LANG_CXX11
inline void BlockListForDown::set_filemd5(::std::string&& value) {
  
  filemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockListForDown.FileMD5)
}
#endif
inline void BlockListForDown::set_filemd5(const char* value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockListForDown.FileMD5)
}
inline void BlockListForDown::set_filemd5(const char* value, size_t size) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockListForDown.FileMD5)
}
inline ::std::string* BlockListForDown::mutable_filemd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListForDown.FileMD5)
  return filemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockListForDown::release_filemd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockListForDown.FileMD5)
  
  return filemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockListForDown::set_allocated_filemd5(::std::string* filemd5) {
  if (filemd5 != NULL) {
    
  } else {
    
  }
  filemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockListForDown.FileMD5)
}

// repeated .qiuwanli.Block Blocks = 4;
inline int BlockListForDown::blocks_size() const {
  return blocks_.size();
}
inline void BlockListForDown::clear_blocks() {
  blocks_.Clear();
}
inline const ::qiuwanli::Block& BlockListForDown::blocks(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListForDown.Blocks)
  return blocks_.Get(index);
}
inline ::qiuwanli::Block* BlockListForDown::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListForDown.Blocks)
  return blocks_.Mutable(index);
}
inline ::qiuwanli::Block* BlockListForDown::add_blocks() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockListForDown.Blocks)
  return blocks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::Block >*
BlockListForDown::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockListForDown.Blocks)
  return &blocks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Block >&
BlockListForDown::blocks() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockListForDown.Blocks)
  return blocks_;
}

// -------------------------------------------------------------------

// BlockListForDownTable

// string PrikeyMd5 = 1;
inline void BlockListForDownTable::clear_prikeymd5() {
  prikeymd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockListForDownTable::prikeymd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListForDownTable.PrikeyMd5)
  return prikeymd5_.GetNoArena();
}
inline void BlockListForDownTable::set_prikeymd5(const ::std::string& value) {
  
  prikeymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockListForDownTable.PrikeyMd5)
}
#if LANG_CXX11
inline void BlockListForDownTable::set_prikeymd5(::std::string&& value) {
  
  prikeymd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockListForDownTable.PrikeyMd5)
}
#endif
inline void BlockListForDownTable::set_prikeymd5(const char* value) {
  
  prikeymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockListForDownTable.PrikeyMd5)
}
inline void BlockListForDownTable::set_prikeymd5(const char* value, size_t size) {
  
  prikeymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockListForDownTable.PrikeyMd5)
}
inline ::std::string* BlockListForDownTable::mutable_prikeymd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListForDownTable.PrikeyMd5)
  return prikeymd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockListForDownTable::release_prikeymd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockListForDownTable.PrikeyMd5)
  
  return prikeymd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockListForDownTable::set_allocated_prikeymd5(::std::string* prikeymd5) {
  if (prikeymd5 != NULL) {
    
  } else {
    
  }
  prikeymd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prikeymd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockListForDownTable.PrikeyMd5)
}

// repeated .qiuwanli.BlockListForDown BlockListForDown = 2;
inline int BlockListForDownTable::blocklistfordown_size() const {
  return blocklistfordown_.size();
}
inline void BlockListForDownTable::clear_blocklistfordown() {
  blocklistfordown_.Clear();
}
inline const ::qiuwanli::BlockListForDown& BlockListForDownTable::blocklistfordown(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListForDownTable.BlockListForDown)
  return blocklistfordown_.Get(index);
}
inline ::qiuwanli::BlockListForDown* BlockListForDownTable::mutable_blocklistfordown(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListForDownTable.BlockListForDown)
  return blocklistfordown_.Mutable(index);
}
inline ::qiuwanli::BlockListForDown* BlockListForDownTable::add_blocklistfordown() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockListForDownTable.BlockListForDown)
  return blocklistfordown_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockListForDown >*
BlockListForDownTable::mutable_blocklistfordown() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockListForDownTable.BlockListForDown)
  return &blocklistfordown_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockListForDown >&
BlockListForDownTable::blocklistfordown() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockListForDownTable.BlockListForDown)
  return blocklistfordown_;
}

// -------------------------------------------------------------------

// BlockCheck

// uint32 BlockItem = 1;
inline void BlockCheck::clear_blockitem() {
  blockitem_ = 0u;
}
inline ::google::protobuf::uint32 BlockCheck::blockitem() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockCheck.BlockItem)
  return blockitem_;
}
inline void BlockCheck::set_blockitem(::google::protobuf::uint32 value) {
  
  blockitem_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.BlockCheck.BlockItem)
}

// string BlockMD5 = 2;
inline void BlockCheck::clear_blockmd5() {
  blockmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockCheck::blockmd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockCheck.BlockMD5)
  return blockmd5_.GetNoArena();
}
inline void BlockCheck::set_blockmd5(const ::std::string& value) {
  
  blockmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockCheck.BlockMD5)
}
#if LANG_CXX11
inline void BlockCheck::set_blockmd5(::std::string&& value) {
  
  blockmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockCheck.BlockMD5)
}
#endif
inline void BlockCheck::set_blockmd5(const char* value) {
  
  blockmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockCheck.BlockMD5)
}
inline void BlockCheck::set_blockmd5(const char* value, size_t size) {
  
  blockmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockCheck.BlockMD5)
}
inline ::std::string* BlockCheck::mutable_blockmd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockCheck.BlockMD5)
  return blockmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockCheck::release_blockmd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockCheck.BlockMD5)
  
  return blockmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockCheck::set_allocated_blockmd5(::std::string* blockmd5) {
  if (blockmd5 != NULL) {
    
  } else {
    
  }
  blockmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blockmd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockCheck.BlockMD5)
}

// -------------------------------------------------------------------

// BlockListForDownCheck

// string FileSHA512 = 1;
inline void BlockListForDownCheck::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockListForDownCheck::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListForDownCheck.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void BlockListForDownCheck::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockListForDownCheck.FileSHA512)
}
#if LANG_CXX11
inline void BlockListForDownCheck::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockListForDownCheck.FileSHA512)
}
#endif
inline void BlockListForDownCheck::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockListForDownCheck.FileSHA512)
}
inline void BlockListForDownCheck::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockListForDownCheck.FileSHA512)
}
inline ::std::string* BlockListForDownCheck::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListForDownCheck.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockListForDownCheck::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockListForDownCheck.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockListForDownCheck::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockListForDownCheck.FileSHA512)
}

// string SaveServersIP = 2;
inline void BlockListForDownCheck::clear_saveserversip() {
  saveserversip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockListForDownCheck::saveserversip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListForDownCheck.SaveServersIP)
  return saveserversip_.GetNoArena();
}
inline void BlockListForDownCheck::set_saveserversip(const ::std::string& value) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockListForDownCheck.SaveServersIP)
}
#if LANG_CXX11
inline void BlockListForDownCheck::set_saveserversip(::std::string&& value) {
  
  saveserversip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockListForDownCheck.SaveServersIP)
}
#endif
inline void BlockListForDownCheck::set_saveserversip(const char* value) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockListForDownCheck.SaveServersIP)
}
inline void BlockListForDownCheck::set_saveserversip(const char* value, size_t size) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockListForDownCheck.SaveServersIP)
}
inline ::std::string* BlockListForDownCheck::mutable_saveserversip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListForDownCheck.SaveServersIP)
  return saveserversip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockListForDownCheck::release_saveserversip() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockListForDownCheck.SaveServersIP)
  
  return saveserversip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockListForDownCheck::set_allocated_saveserversip(::std::string* saveserversip) {
  if (saveserversip != NULL) {
    
  } else {
    
  }
  saveserversip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), saveserversip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockListForDownCheck.SaveServersIP)
}

// string FileMD5 = 3;
inline void BlockListForDownCheck::clear_filemd5() {
  filemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockListForDownCheck::filemd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListForDownCheck.FileMD5)
  return filemd5_.GetNoArena();
}
inline void BlockListForDownCheck::set_filemd5(const ::std::string& value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockListForDownCheck.FileMD5)
}
#if LANG_CXX11
inline void BlockListForDownCheck::set_filemd5(::std::string&& value) {
  
  filemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockListForDownCheck.FileMD5)
}
#endif
inline void BlockListForDownCheck::set_filemd5(const char* value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockListForDownCheck.FileMD5)
}
inline void BlockListForDownCheck::set_filemd5(const char* value, size_t size) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockListForDownCheck.FileMD5)
}
inline ::std::string* BlockListForDownCheck::mutable_filemd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListForDownCheck.FileMD5)
  return filemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockListForDownCheck::release_filemd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockListForDownCheck.FileMD5)
  
  return filemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockListForDownCheck::set_allocated_filemd5(::std::string* filemd5) {
  if (filemd5 != NULL) {
    
  } else {
    
  }
  filemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockListForDownCheck.FileMD5)
}

// repeated .qiuwanli.BlockCheck Blocks = 4;
inline int BlockListForDownCheck::blocks_size() const {
  return blocks_.size();
}
inline void BlockListForDownCheck::clear_blocks() {
  blocks_.Clear();
}
inline const ::qiuwanli::BlockCheck& BlockListForDownCheck::blocks(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListForDownCheck.Blocks)
  return blocks_.Get(index);
}
inline ::qiuwanli::BlockCheck* BlockListForDownCheck::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListForDownCheck.Blocks)
  return blocks_.Mutable(index);
}
inline ::qiuwanli::BlockCheck* BlockListForDownCheck::add_blocks() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockListForDownCheck.Blocks)
  return blocks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockCheck >*
BlockListForDownCheck::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockListForDownCheck.Blocks)
  return &blocks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockCheck >&
BlockListForDownCheck::blocks() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockListForDownCheck.Blocks)
  return blocks_;
}

// -------------------------------------------------------------------

// BlockListForDownCheckTable

// repeated .qiuwanli.BlockListForDown BlockListForDown = 1;
inline int BlockListForDownCheckTable::blocklistfordown_size() const {
  return blocklistfordown_.size();
}
inline void BlockListForDownCheckTable::clear_blocklistfordown() {
  blocklistfordown_.Clear();
}
inline const ::qiuwanli::BlockListForDown& BlockListForDownCheckTable::blocklistfordown(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListForDownCheckTable.BlockListForDown)
  return blocklistfordown_.Get(index);
}
inline ::qiuwanli::BlockListForDown* BlockListForDownCheckTable::mutable_blocklistfordown(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListForDownCheckTable.BlockListForDown)
  return blocklistfordown_.Mutable(index);
}
inline ::qiuwanli::BlockListForDown* BlockListForDownCheckTable::add_blocklistfordown() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockListForDownCheckTable.BlockListForDown)
  return blocklistfordown_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockListForDown >*
BlockListForDownCheckTable::mutable_blocklistfordown() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockListForDownCheckTable.BlockListForDown)
  return &blocklistfordown_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockListForDown >&
BlockListForDownCheckTable::blocklistfordown() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockListForDownCheckTable.BlockListForDown)
  return blocklistfordown_;
}

// -------------------------------------------------------------------

// BlockInfo2Server

// string FileSHA512 = 1;
inline void BlockInfo2Server::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockInfo2Server::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo2Server.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void BlockInfo2Server::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo2Server.FileSHA512)
}
#if LANG_CXX11
inline void BlockInfo2Server::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockInfo2Server.FileSHA512)
}
#endif
inline void BlockInfo2Server::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockInfo2Server.FileSHA512)
}
inline void BlockInfo2Server::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockInfo2Server.FileSHA512)
}
inline ::std::string* BlockInfo2Server::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfo2Server.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockInfo2Server::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockInfo2Server.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockInfo2Server::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockInfo2Server.FileSHA512)
}

// repeated .qiuwanli.Block BlockNumer = 2;
inline int BlockInfo2Server::blocknumer_size() const {
  return blocknumer_.size();
}
inline void BlockInfo2Server::clear_blocknumer() {
  blocknumer_.Clear();
}
inline const ::qiuwanli::Block& BlockInfo2Server::blocknumer(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo2Server.BlockNumer)
  return blocknumer_.Get(index);
}
inline ::qiuwanli::Block* BlockInfo2Server::mutable_blocknumer(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfo2Server.BlockNumer)
  return blocknumer_.Mutable(index);
}
inline ::qiuwanli::Block* BlockInfo2Server::add_blocknumer() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockInfo2Server.BlockNumer)
  return blocknumer_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::Block >*
BlockInfo2Server::mutable_blocknumer() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockInfo2Server.BlockNumer)
  return &blocknumer_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Block >&
BlockInfo2Server::blocknumer() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockInfo2Server.BlockNumer)
  return blocknumer_;
}

// -------------------------------------------------------------------

// BlockInfo2ServerTable

// string ClientIP = 1;
inline void BlockInfo2ServerTable::clear_clientip() {
  clientip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockInfo2ServerTable::clientip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo2ServerTable.ClientIP)
  return clientip_.GetNoArena();
}
inline void BlockInfo2ServerTable::set_clientip(const ::std::string& value) {
  
  clientip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo2ServerTable.ClientIP)
}
#if LANG_CXX11
inline void BlockInfo2ServerTable::set_clientip(::std::string&& value) {
  
  clientip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockInfo2ServerTable.ClientIP)
}
#endif
inline void BlockInfo2ServerTable::set_clientip(const char* value) {
  
  clientip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockInfo2ServerTable.ClientIP)
}
inline void BlockInfo2ServerTable::set_clientip(const char* value, size_t size) {
  
  clientip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockInfo2ServerTable.ClientIP)
}
inline ::std::string* BlockInfo2ServerTable::mutable_clientip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfo2ServerTable.ClientIP)
  return clientip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockInfo2ServerTable::release_clientip() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockInfo2ServerTable.ClientIP)
  
  return clientip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockInfo2ServerTable::set_allocated_clientip(::std::string* clientip) {
  if (clientip != NULL) {
    
  } else {
    
  }
  clientip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockInfo2ServerTable.ClientIP)
}

// repeated .qiuwanli.BlockInfo2Server BlockInfo = 2;
inline int BlockInfo2ServerTable::blockinfo_size() const {
  return blockinfo_.size();
}
inline void BlockInfo2ServerTable::clear_blockinfo() {
  blockinfo_.Clear();
}
inline const ::qiuwanli::BlockInfo2Server& BlockInfo2ServerTable::blockinfo(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo2ServerTable.BlockInfo)
  return blockinfo_.Get(index);
}
inline ::qiuwanli::BlockInfo2Server* BlockInfo2ServerTable::mutable_blockinfo(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfo2ServerTable.BlockInfo)
  return blockinfo_.Mutable(index);
}
inline ::qiuwanli::BlockInfo2Server* BlockInfo2ServerTable::add_blockinfo() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockInfo2ServerTable.BlockInfo)
  return blockinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo2Server >*
BlockInfo2ServerTable::mutable_blockinfo() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockInfo2ServerTable.BlockInfo)
  return &blockinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo2Server >&
BlockInfo2ServerTable::blockinfo() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockInfo2ServerTable.BlockInfo)
  return blockinfo_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace qiuwanli

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_FileDataStruct_2eproto__INCLUDED
