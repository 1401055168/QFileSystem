// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PublicStruct.proto

#ifndef PROTOBUF_PublicStruct_2eproto__INCLUDED
#define PROTOBUF_PublicStruct_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace qiuwanli {
class BlockCheck;
class BlockCheckDefaultTypeInternal;
extern BlockCheckDefaultTypeInternal _BlockCheck_default_instance_;
class BlockInfo;
class BlockInfoDefaultTypeInternal;
extern BlockInfoDefaultTypeInternal _BlockInfo_default_instance_;
class BlockInfoTable;
class BlockInfoTableDefaultTypeInternal;
extern BlockInfoTableDefaultTypeInternal _BlockInfoTable_default_instance_;
class BlockList4Down;
class BlockList4DownDefaultTypeInternal;
extern BlockList4DownDefaultTypeInternal _BlockList4Down_default_instance_;
class BlockList4DownTable;
class BlockList4DownTableDefaultTypeInternal;
extern BlockList4DownTableDefaultTypeInternal _BlockList4DownTable_default_instance_;
class BlockListForDownCheck;
class BlockListForDownCheckDefaultTypeInternal;
extern BlockListForDownCheckDefaultTypeInternal _BlockListForDownCheck_default_instance_;
class BlockListForDownCheckTable;
class BlockListForDownCheckTableDefaultTypeInternal;
extern BlockListForDownCheckTableDefaultTypeInternal _BlockListForDownCheckTable_default_instance_;
class ClientConfigFile;
class ClientConfigFileDefaultTypeInternal;
extern ClientConfigFileDefaultTypeInternal _ClientConfigFile_default_instance_;
class ClientConfigFileTable;
class ClientConfigFileTableDefaultTypeInternal;
extern ClientConfigFileTableDefaultTypeInternal _ClientConfigFileTable_default_instance_;
class ConfigFile;
class ConfigFileDefaultTypeInternal;
extern ConfigFileDefaultTypeInternal _ConfigFile_default_instance_;
class DoSomething;
class DoSomethingDefaultTypeInternal;
extern DoSomethingDefaultTypeInternal _DoSomething_default_instance_;
class DoSomethingTable;
class DoSomethingTableDefaultTypeInternal;
extern DoSomethingTableDefaultTypeInternal _DoSomethingTable_default_instance_;
class File2Cilent;
class File2CilentDefaultTypeInternal;
extern File2CilentDefaultTypeInternal _File2Cilent_default_instance_;
class File2ClientTable;
class File2ClientTableDefaultTypeInternal;
extern File2ClientTableDefaultTypeInternal _File2ClientTable_default_instance_;
class FileDowning;
class FileDowningDefaultTypeInternal;
extern FileDowningDefaultTypeInternal _FileDowning_default_instance_;
class FileDowningLog;
class FileDowningLogDefaultTypeInternal;
extern FileDowningLogDefaultTypeInternal _FileDowningLog_default_instance_;
class FileDowningLogTable;
class FileDowningLogTableDefaultTypeInternal;
extern FileDowningLogTableDefaultTypeInternal _FileDowningLogTable_default_instance_;
class FileDowningTable;
class FileDowningTableDefaultTypeInternal;
extern FileDowningTableDefaultTypeInternal _FileDowningTable_default_instance_;
class FileInfoList;
class FileInfoListDefaultTypeInternal;
extern FileInfoListDefaultTypeInternal _FileInfoList_default_instance_;
class FileInfoListTable;
class FileInfoListTableDefaultTypeInternal;
extern FileInfoListTableDefaultTypeInternal _FileInfoListTable_default_instance_;
class FileList;
class FileListDefaultTypeInternal;
extern FileListDefaultTypeInternal _FileList_default_instance_;
class FileList4Down;
class FileList4DownDefaultTypeInternal;
extern FileList4DownDefaultTypeInternal _FileList4Down_default_instance_;
class FileList4DownTable;
class FileList4DownTableDefaultTypeInternal;
extern FileList4DownTableDefaultTypeInternal _FileList4DownTable_default_instance_;
class FileListTable;
class FileListTableDefaultTypeInternal;
extern FileListTableDefaultTypeInternal _FileListTable_default_instance_;
class Heart;
class HeartDefaultTypeInternal;
extern HeartDefaultTypeInternal _Heart_default_instance_;
class Logs;
class LogsDefaultTypeInternal;
extern LogsDefaultTypeInternal _Logs_default_instance_;
class LogsTable;
class LogsTableDefaultTypeInternal;
extern LogsTableDefaultTypeInternal _LogsTable_default_instance_;
class Shared;
class SharedDefaultTypeInternal;
extern SharedDefaultTypeInternal _Shared_default_instance_;
class SharedTable;
class SharedTableDefaultTypeInternal;
extern SharedTableDefaultTypeInternal _SharedTable_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
class UserInfoTable;
class UserInfoTableDefaultTypeInternal;
extern UserInfoTableDefaultTypeInternal _UserInfoTable_default_instance_;
}  // namespace qiuwanli

namespace qiuwanli {

namespace protobuf_PublicStruct_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_PublicStruct_2eproto

// ===================================================================

class ConfigFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.ConfigFile) */ {
 public:
  ConfigFile();
  virtual ~ConfigFile();

  ConfigFile(const ConfigFile& from);

  inline ConfigFile& operator=(const ConfigFile& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigFile& default_instance();

  static inline const ConfigFile* internal_default_instance() {
    return reinterpret_cast<const ConfigFile*>(
               &_ConfigFile_default_instance_);
  }

  void Swap(ConfigFile* other);

  // implements Message ----------------------------------------------

  inline ConfigFile* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfigFile& from);
  void MergeFrom(const ConfigFile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfigFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string IP = 2;
  void clear_ip();
  static const int kIPFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // string PriKey = 3;
  void clear_prikey();
  static const int kPriKeyFieldNumber = 3;
  const ::std::string& prikey() const;
  void set_prikey(const ::std::string& value);
  #if LANG_CXX11
  void set_prikey(::std::string&& value);
  #endif
  void set_prikey(const char* value);
  void set_prikey(const char* value, size_t size);
  ::std::string* mutable_prikey();
  ::std::string* release_prikey();
  void set_allocated_prikey(::std::string* prikey);

  // string PriKeyMD5 = 4;
  void clear_prikeymd5();
  static const int kPriKeyMD5FieldNumber = 4;
  const ::std::string& prikeymd5() const;
  void set_prikeymd5(const ::std::string& value);
  #if LANG_CXX11
  void set_prikeymd5(::std::string&& value);
  #endif
  void set_prikeymd5(const char* value);
  void set_prikeymd5(const char* value, size_t size);
  ::std::string* mutable_prikeymd5();
  ::std::string* release_prikeymd5();
  void set_allocated_prikeymd5(::std::string* prikeymd5);

  // string ServersIP = 7;
  void clear_serversip();
  static const int kServersIPFieldNumber = 7;
  const ::std::string& serversip() const;
  void set_serversip(const ::std::string& value);
  #if LANG_CXX11
  void set_serversip(::std::string&& value);
  #endif
  void set_serversip(const char* value);
  void set_serversip(const char* value, size_t size);
  ::std::string* mutable_serversip();
  ::std::string* release_serversip();
  void set_allocated_serversip(::std::string* serversip);

  // string ServersPort = 8;
  void clear_serversport();
  static const int kServersPortFieldNumber = 8;
  const ::std::string& serversport() const;
  void set_serversport(const ::std::string& value);
  #if LANG_CXX11
  void set_serversport(::std::string&& value);
  #endif
  void set_serversport(const char* value);
  void set_serversport(const char* value, size_t size);
  ::std::string* mutable_serversport();
  ::std::string* release_serversport();
  void set_allocated_serversport(::std::string* serversport);

  // uint64 TotalSize = 5;
  void clear_totalsize();
  static const int kTotalSizeFieldNumber = 5;
  ::google::protobuf::uint64 totalsize() const;
  void set_totalsize(::google::protobuf::uint64 value);

  // uint64 RemainSize = 6;
  void clear_remainsize();
  static const int kRemainSizeFieldNumber = 6;
  ::google::protobuf::uint64 remainsize() const;
  void set_remainsize(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.ConfigFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr prikey_;
  ::google::protobuf::internal::ArenaStringPtr prikeymd5_;
  ::google::protobuf::internal::ArenaStringPtr serversip_;
  ::google::protobuf::internal::ArenaStringPtr serversport_;
  ::google::protobuf::uint64 totalsize_;
  ::google::protobuf::uint64 remainsize_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockInfo) */ {
 public:
  BlockInfo();
  virtual ~BlockInfo();

  BlockInfo(const BlockInfo& from);

  inline BlockInfo& operator=(const BlockInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockInfo& default_instance();

  static inline const BlockInfo* internal_default_instance() {
    return reinterpret_cast<const BlockInfo*>(
               &_BlockInfo_default_instance_);
  }

  void Swap(BlockInfo* other);

  // implements Message ----------------------------------------------

  inline BlockInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockInfo& from);
  void MergeFrom(const BlockInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string FileSHA512 = 1;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 1;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // string BlockMD5 = 2;
  void clear_blockmd5();
  static const int kBlockMD5FieldNumber = 2;
  const ::std::string& blockmd5() const;
  void set_blockmd5(const ::std::string& value);
  #if LANG_CXX11
  void set_blockmd5(::std::string&& value);
  #endif
  void set_blockmd5(const char* value);
  void set_blockmd5(const char* value, size_t size);
  ::std::string* mutable_blockmd5();
  ::std::string* release_blockmd5();
  void set_allocated_blockmd5(::std::string* blockmd5);

  // string SaveFileName = 3;
  void clear_savefilename();
  static const int kSaveFileNameFieldNumber = 3;
  const ::std::string& savefilename() const;
  void set_savefilename(const ::std::string& value);
  #if LANG_CXX11
  void set_savefilename(::std::string&& value);
  #endif
  void set_savefilename(const char* value);
  void set_savefilename(const char* value, size_t size);
  ::std::string* mutable_savefilename();
  ::std::string* release_savefilename();
  void set_allocated_savefilename(::std::string* savefilename);

  // uint64 BlockNumer = 4;
  void clear_blocknumer();
  static const int kBlockNumerFieldNumber = 4;
  ::google::protobuf::uint64 blocknumer() const;
  void set_blocknumer(::google::protobuf::uint64 value);

  // uint64 CurSize = 5;
  void clear_cursize();
  static const int kCurSizeFieldNumber = 5;
  ::google::protobuf::uint64 cursize() const;
  void set_cursize(::google::protobuf::uint64 value);

  // uint64 FileBlockOffset = 6;
  void clear_fileblockoffset();
  static const int kFileBlockOffsetFieldNumber = 6;
  ::google::protobuf::uint64 fileblockoffset() const;
  void set_fileblockoffset(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  ::google::protobuf::internal::ArenaStringPtr blockmd5_;
  ::google::protobuf::internal::ArenaStringPtr savefilename_;
  ::google::protobuf::uint64 blocknumer_;
  ::google::protobuf::uint64 cursize_;
  ::google::protobuf::uint64 fileblockoffset_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockInfoTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockInfoTable) */ {
 public:
  BlockInfoTable();
  virtual ~BlockInfoTable();

  BlockInfoTable(const BlockInfoTable& from);

  inline BlockInfoTable& operator=(const BlockInfoTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockInfoTable& default_instance();

  static inline const BlockInfoTable* internal_default_instance() {
    return reinterpret_cast<const BlockInfoTable*>(
               &_BlockInfoTable_default_instance_);
  }

  void Swap(BlockInfoTable* other);

  // implements Message ----------------------------------------------

  inline BlockInfoTable* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockInfoTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockInfoTable& from);
  void MergeFrom(const BlockInfoTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockInfoTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.BlockInfo Block = 1;
  int block_size() const;
  void clear_block();
  static const int kBlockFieldNumber = 1;
  const ::qiuwanli::BlockInfo& block(int index) const;
  ::qiuwanli::BlockInfo* mutable_block(int index);
  ::qiuwanli::BlockInfo* add_block();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo >*
      mutable_block();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo >&
      block() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockInfoTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo > block_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class File2Cilent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.File2Cilent) */ {
 public:
  File2Cilent();
  virtual ~File2Cilent();

  File2Cilent(const File2Cilent& from);

  inline File2Cilent& operator=(const File2Cilent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const File2Cilent& default_instance();

  static inline const File2Cilent* internal_default_instance() {
    return reinterpret_cast<const File2Cilent*>(
               &_File2Cilent_default_instance_);
  }

  void Swap(File2Cilent* other);

  // implements Message ----------------------------------------------

  inline File2Cilent* New() const PROTOBUF_FINAL { return New(NULL); }

  File2Cilent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const File2Cilent& from);
  void MergeFrom(const File2Cilent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(File2Cilent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string FileName = 1;
  void clear_filename();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // string FileSHA512 = 2;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 2;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // string CilentID = 3;
  void clear_cilentid();
  static const int kCilentIDFieldNumber = 3;
  const ::std::string& cilentid() const;
  void set_cilentid(const ::std::string& value);
  #if LANG_CXX11
  void set_cilentid(::std::string&& value);
  #endif
  void set_cilentid(const char* value);
  void set_cilentid(const char* value, size_t size);
  ::std::string* mutable_cilentid();
  ::std::string* release_cilentid();
  void set_allocated_cilentid(::std::string* cilentid);

  // string CilentPort = 4;
  void clear_cilentport();
  static const int kCilentPortFieldNumber = 4;
  const ::std::string& cilentport() const;
  void set_cilentport(const ::std::string& value);
  #if LANG_CXX11
  void set_cilentport(::std::string&& value);
  #endif
  void set_cilentport(const char* value);
  void set_cilentport(const char* value, size_t size);
  ::std::string* mutable_cilentport();
  ::std::string* release_cilentport();
  void set_allocated_cilentport(::std::string* cilentport);

  // @@protoc_insertion_point(class_scope:qiuwanli.File2Cilent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  ::google::protobuf::internal::ArenaStringPtr cilentid_;
  ::google::protobuf::internal::ArenaStringPtr cilentport_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class File2ClientTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.File2ClientTable) */ {
 public:
  File2ClientTable();
  virtual ~File2ClientTable();

  File2ClientTable(const File2ClientTable& from);

  inline File2ClientTable& operator=(const File2ClientTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const File2ClientTable& default_instance();

  static inline const File2ClientTable* internal_default_instance() {
    return reinterpret_cast<const File2ClientTable*>(
               &_File2ClientTable_default_instance_);
  }

  void Swap(File2ClientTable* other);

  // implements Message ----------------------------------------------

  inline File2ClientTable* New() const PROTOBUF_FINAL { return New(NULL); }

  File2ClientTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const File2ClientTable& from);
  void MergeFrom(const File2ClientTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(File2ClientTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.File2Cilent FileToClient = 1;
  int filetoclient_size() const;
  void clear_filetoclient();
  static const int kFileToClientFieldNumber = 1;
  const ::qiuwanli::File2Cilent& filetoclient(int index) const;
  ::qiuwanli::File2Cilent* mutable_filetoclient(int index);
  ::qiuwanli::File2Cilent* add_filetoclient();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent >*
      mutable_filetoclient();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent >&
      filetoclient() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.File2ClientTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent > filetoclient_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientConfigFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.ClientConfigFile) */ {
 public:
  ClientConfigFile();
  virtual ~ClientConfigFile();

  ClientConfigFile(const ClientConfigFile& from);

  inline ClientConfigFile& operator=(const ClientConfigFile& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientConfigFile& default_instance();

  static inline const ClientConfigFile* internal_default_instance() {
    return reinterpret_cast<const ClientConfigFile*>(
               &_ClientConfigFile_default_instance_);
  }

  void Swap(ClientConfigFile* other);

  // implements Message ----------------------------------------------

  inline ClientConfigFile* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientConfigFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientConfigFile& from);
  void MergeFrom(const ClientConfigFile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientConfigFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string CilentID = 1;
  void clear_cilentid();
  static const int kCilentIDFieldNumber = 1;
  const ::std::string& cilentid() const;
  void set_cilentid(const ::std::string& value);
  #if LANG_CXX11
  void set_cilentid(::std::string&& value);
  #endif
  void set_cilentid(const char* value);
  void set_cilentid(const char* value, size_t size);
  ::std::string* mutable_cilentid();
  ::std::string* release_cilentid();
  void set_allocated_cilentid(::std::string* cilentid);

  // string SaveIP = 2;
  void clear_saveip();
  static const int kSaveIPFieldNumber = 2;
  const ::std::string& saveip() const;
  void set_saveip(const ::std::string& value);
  #if LANG_CXX11
  void set_saveip(::std::string&& value);
  #endif
  void set_saveip(const char* value);
  void set_saveip(const char* value, size_t size);
  ::std::string* mutable_saveip();
  ::std::string* release_saveip();
  void set_allocated_saveip(::std::string* saveip);

  // string PriKey = 3;
  void clear_prikey();
  static const int kPriKeyFieldNumber = 3;
  const ::std::string& prikey() const;
  void set_prikey(const ::std::string& value);
  #if LANG_CXX11
  void set_prikey(::std::string&& value);
  #endif
  void set_prikey(const char* value);
  void set_prikey(const char* value, size_t size);
  ::std::string* mutable_prikey();
  ::std::string* release_prikey();
  void set_allocated_prikey(::std::string* prikey);

  // string KeyMD5 = 4;
  void clear_keymd5();
  static const int kKeyMD5FieldNumber = 4;
  const ::std::string& keymd5() const;
  void set_keymd5(const ::std::string& value);
  #if LANG_CXX11
  void set_keymd5(::std::string&& value);
  #endif
  void set_keymd5(const char* value);
  void set_keymd5(const char* value, size_t size);
  ::std::string* mutable_keymd5();
  ::std::string* release_keymd5();
  void set_allocated_keymd5(::std::string* keymd5);

  // uint64 TotalSize = 5;
  void clear_totalsize();
  static const int kTotalSizeFieldNumber = 5;
  ::google::protobuf::uint64 totalsize() const;
  void set_totalsize(::google::protobuf::uint64 value);

  // uint64 RemainSize = 6;
  void clear_remainsize();
  static const int kRemainSizeFieldNumber = 6;
  ::google::protobuf::uint64 remainsize() const;
  void set_remainsize(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.ClientConfigFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cilentid_;
  ::google::protobuf::internal::ArenaStringPtr saveip_;
  ::google::protobuf::internal::ArenaStringPtr prikey_;
  ::google::protobuf::internal::ArenaStringPtr keymd5_;
  ::google::protobuf::uint64 totalsize_;
  ::google::protobuf::uint64 remainsize_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientConfigFileTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.ClientConfigFileTable) */ {
 public:
  ClientConfigFileTable();
  virtual ~ClientConfigFileTable();

  ClientConfigFileTable(const ClientConfigFileTable& from);

  inline ClientConfigFileTable& operator=(const ClientConfigFileTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientConfigFileTable& default_instance();

  static inline const ClientConfigFileTable* internal_default_instance() {
    return reinterpret_cast<const ClientConfigFileTable*>(
               &_ClientConfigFileTable_default_instance_);
  }

  void Swap(ClientConfigFileTable* other);

  // implements Message ----------------------------------------------

  inline ClientConfigFileTable* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientConfigFileTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientConfigFileTable& from);
  void MergeFrom(const ClientConfigFileTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientConfigFileTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.ClientConfigFile ClientInfo = 1;
  int clientinfo_size() const;
  void clear_clientinfo();
  static const int kClientInfoFieldNumber = 1;
  const ::qiuwanli::ClientConfigFile& clientinfo(int index) const;
  ::qiuwanli::ClientConfigFile* mutable_clientinfo(int index);
  ::qiuwanli::ClientConfigFile* add_clientinfo();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::ClientConfigFile >*
      mutable_clientinfo();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::ClientConfigFile >&
      clientinfo() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.ClientConfigFileTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::ClientConfigFile > clientinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileInfoList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileInfoList) */ {
 public:
  FileInfoList();
  virtual ~FileInfoList();

  FileInfoList(const FileInfoList& from);

  inline FileInfoList& operator=(const FileInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileInfoList& default_instance();

  static inline const FileInfoList* internal_default_instance() {
    return reinterpret_cast<const FileInfoList*>(
               &_FileInfoList_default_instance_);
  }

  void Swap(FileInfoList* other);

  // implements Message ----------------------------------------------

  inline FileInfoList* New() const PROTOBUF_FINAL { return New(NULL); }

  FileInfoList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileInfoList& from);
  void MergeFrom(const FileInfoList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileInfoList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string FileSHA512 = 1;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 1;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // string FileMD5 = 2;
  void clear_filemd5();
  static const int kFileMD5FieldNumber = 2;
  const ::std::string& filemd5() const;
  void set_filemd5(const ::std::string& value);
  #if LANG_CXX11
  void set_filemd5(::std::string&& value);
  #endif
  void set_filemd5(const char* value);
  void set_filemd5(const char* value, size_t size);
  ::std::string* mutable_filemd5();
  ::std::string* release_filemd5();
  void set_allocated_filemd5(::std::string* filemd5);

  // string FileName = 3;
  void clear_filename();
  static const int kFileNameFieldNumber = 3;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // string FileCreateDate = 4;
  void clear_filecreatedate();
  static const int kFileCreateDateFieldNumber = 4;
  const ::std::string& filecreatedate() const;
  void set_filecreatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_filecreatedate(::std::string&& value);
  #endif
  void set_filecreatedate(const char* value);
  void set_filecreatedate(const char* value, size_t size);
  ::std::string* mutable_filecreatedate();
  ::std::string* release_filecreatedate();
  void set_allocated_filecreatedate(::std::string* filecreatedate);

  // string FileChangeDate = 5;
  void clear_filechangedate();
  static const int kFileChangeDateFieldNumber = 5;
  const ::std::string& filechangedate() const;
  void set_filechangedate(const ::std::string& value);
  #if LANG_CXX11
  void set_filechangedate(::std::string&& value);
  #endif
  void set_filechangedate(const char* value);
  void set_filechangedate(const char* value, size_t size);
  ::std::string* mutable_filechangedate();
  ::std::string* release_filechangedate();
  void set_allocated_filechangedate(::std::string* filechangedate);

  // string Tag = 8;
  void clear_tag();
  static const int kTagFieldNumber = 8;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_tag(::std::string&& value);
  #endif
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // uint64 FileAllBlock = 6;
  void clear_fileallblock();
  static const int kFileAllBlockFieldNumber = 6;
  ::google::protobuf::uint64 fileallblock() const;
  void set_fileallblock(::google::protobuf::uint64 value);

  // uint64 FileTotalSize = 7;
  void clear_filetotalsize();
  static const int kFileTotalSizeFieldNumber = 7;
  ::google::protobuf::uint64 filetotalsize() const;
  void set_filetotalsize(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.FileInfoList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  ::google::protobuf::internal::ArenaStringPtr filemd5_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr filecreatedate_;
  ::google::protobuf::internal::ArenaStringPtr filechangedate_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  ::google::protobuf::uint64 fileallblock_;
  ::google::protobuf::uint64 filetotalsize_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileInfoListTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileInfoListTable) */ {
 public:
  FileInfoListTable();
  virtual ~FileInfoListTable();

  FileInfoListTable(const FileInfoListTable& from);

  inline FileInfoListTable& operator=(const FileInfoListTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileInfoListTable& default_instance();

  static inline const FileInfoListTable* internal_default_instance() {
    return reinterpret_cast<const FileInfoListTable*>(
               &_FileInfoListTable_default_instance_);
  }

  void Swap(FileInfoListTable* other);

  // implements Message ----------------------------------------------

  inline FileInfoListTable* New() const PROTOBUF_FINAL { return New(NULL); }

  FileInfoListTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileInfoListTable& from);
  void MergeFrom(const FileInfoListTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileInfoListTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.FileInfoList FileList = 1;
  int filelist_size() const;
  void clear_filelist();
  static const int kFileListFieldNumber = 1;
  const ::qiuwanli::FileInfoList& filelist(int index) const;
  ::qiuwanli::FileInfoList* mutable_filelist(int index);
  ::qiuwanli::FileInfoList* add_filelist();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfoList >*
      mutable_filelist();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfoList >&
      filelist() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.FileInfoListTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfoList > filelist_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.UserInfo) */ {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  static inline const UserInfo* internal_default_instance() {
    return reinterpret_cast<const UserInfo*>(
               &_UserInfo_default_instance_);
  }

  void Swap(UserInfo* other);

  // implements Message ----------------------------------------------

  inline UserInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UserInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string FileSHA512 = 3;
  int filesha512_size() const;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 3;
  const ::std::string& filesha512(int index) const;
  ::std::string* mutable_filesha512(int index);
  void set_filesha512(int index, const ::std::string& value);
  void set_filesha512(int index, const char* value);
  void set_filesha512(int index, const char* value, size_t size);
  ::std::string* add_filesha512();
  void add_filesha512(const ::std::string& value);
  void add_filesha512(const char* value);
  void add_filesha512(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& filesha512() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_filesha512();

  // string UserID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // string UserPS = 2;
  void clear_userps();
  static const int kUserPSFieldNumber = 2;
  const ::std::string& userps() const;
  void set_userps(const ::std::string& value);
  #if LANG_CXX11
  void set_userps(::std::string&& value);
  #endif
  void set_userps(const char* value);
  void set_userps(const char* value, size_t size);
  ::std::string* mutable_userps();
  ::std::string* release_userps();
  void set_allocated_userps(::std::string* userps);

  // @@protoc_insertion_point(class_scope:qiuwanli.UserInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> filesha512_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr userps_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserInfoTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.UserInfoTable) */ {
 public:
  UserInfoTable();
  virtual ~UserInfoTable();

  UserInfoTable(const UserInfoTable& from);

  inline UserInfoTable& operator=(const UserInfoTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfoTable& default_instance();

  static inline const UserInfoTable* internal_default_instance() {
    return reinterpret_cast<const UserInfoTable*>(
               &_UserInfoTable_default_instance_);
  }

  void Swap(UserInfoTable* other);

  // implements Message ----------------------------------------------

  inline UserInfoTable* New() const PROTOBUF_FINAL { return New(NULL); }

  UserInfoTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserInfoTable& from);
  void MergeFrom(const UserInfoTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserInfoTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.UserInfo User = 1;
  int user_size() const;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::qiuwanli::UserInfo& user(int index) const;
  ::qiuwanli::UserInfo* mutable_user(int index);
  ::qiuwanli::UserInfo* add_user();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::UserInfo >*
      mutable_user();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::UserInfo >&
      user() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.UserInfoTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::UserInfo > user_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileList) */ {
 public:
  FileList();
  virtual ~FileList();

  FileList(const FileList& from);

  inline FileList& operator=(const FileList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileList& default_instance();

  static inline const FileList* internal_default_instance() {
    return reinterpret_cast<const FileList*>(
               &_FileList_default_instance_);
  }

  void Swap(FileList* other);

  // implements Message ----------------------------------------------

  inline FileList* New() const PROTOBUF_FINAL { return New(NULL); }

  FileList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileList& from);
  void MergeFrom(const FileList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string FileName = 1;
  void clear_filename();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // string FileSHA512 = 3;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 3;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // string FileStyle = 4;
  void clear_filestyle();
  static const int kFileStyleFieldNumber = 4;
  const ::std::string& filestyle() const;
  void set_filestyle(const ::std::string& value);
  #if LANG_CXX11
  void set_filestyle(::std::string&& value);
  #endif
  void set_filestyle(const char* value);
  void set_filestyle(const char* value, size_t size);
  ::std::string* mutable_filestyle();
  ::std::string* release_filestyle();
  void set_allocated_filestyle(::std::string* filestyle);

  // uint64 FileSize = 2;
  void clear_filesize();
  static const int kFileSizeFieldNumber = 2;
  ::google::protobuf::uint64 filesize() const;
  void set_filesize(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.FileList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  ::google::protobuf::internal::ArenaStringPtr filestyle_;
  ::google::protobuf::uint64 filesize_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileListTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileListTable) */ {
 public:
  FileListTable();
  virtual ~FileListTable();

  FileListTable(const FileListTable& from);

  inline FileListTable& operator=(const FileListTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileListTable& default_instance();

  static inline const FileListTable* internal_default_instance() {
    return reinterpret_cast<const FileListTable*>(
               &_FileListTable_default_instance_);
  }

  void Swap(FileListTable* other);

  // implements Message ----------------------------------------------

  inline FileListTable* New() const PROTOBUF_FINAL { return New(NULL); }

  FileListTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileListTable& from);
  void MergeFrom(const FileListTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileListTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.FileList File = 1;
  int file_size() const;
  void clear_file();
  static const int kFileFieldNumber = 1;
  const ::qiuwanli::FileList& file(int index) const;
  ::qiuwanli::FileList* mutable_file(int index);
  ::qiuwanli::FileList* add_file();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileList >*
      mutable_file();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileList >&
      file() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.FileListTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileList > file_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileList4Down : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileList4Down) */ {
 public:
  FileList4Down();
  virtual ~FileList4Down();

  FileList4Down(const FileList4Down& from);

  inline FileList4Down& operator=(const FileList4Down& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileList4Down& default_instance();

  static inline const FileList4Down* internal_default_instance() {
    return reinterpret_cast<const FileList4Down*>(
               &_FileList4Down_default_instance_);
  }

  void Swap(FileList4Down* other);

  // implements Message ----------------------------------------------

  inline FileList4Down* New() const PROTOBUF_FINAL { return New(NULL); }

  FileList4Down* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileList4Down& from);
  void MergeFrom(const FileList4Down& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileList4Down* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string FileSHA512 = 1;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 1;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // string FileMD5 = 2;
  void clear_filemd5();
  static const int kFileMD5FieldNumber = 2;
  const ::std::string& filemd5() const;
  void set_filemd5(const ::std::string& value);
  #if LANG_CXX11
  void set_filemd5(::std::string&& value);
  #endif
  void set_filemd5(const char* value);
  void set_filemd5(const char* value, size_t size);
  ::std::string* mutable_filemd5();
  ::std::string* release_filemd5();
  void set_allocated_filemd5(::std::string* filemd5);

  // @@protoc_insertion_point(class_scope:qiuwanli.FileList4Down)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  ::google::protobuf::internal::ArenaStringPtr filemd5_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileList4DownTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileList4DownTable) */ {
 public:
  FileList4DownTable();
  virtual ~FileList4DownTable();

  FileList4DownTable(const FileList4DownTable& from);

  inline FileList4DownTable& operator=(const FileList4DownTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileList4DownTable& default_instance();

  static inline const FileList4DownTable* internal_default_instance() {
    return reinterpret_cast<const FileList4DownTable*>(
               &_FileList4DownTable_default_instance_);
  }

  void Swap(FileList4DownTable* other);

  // implements Message ----------------------------------------------

  inline FileList4DownTable* New() const PROTOBUF_FINAL { return New(NULL); }

  FileList4DownTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileList4DownTable& from);
  void MergeFrom(const FileList4DownTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileList4DownTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.FileList4Down FileListForDown = 1;
  int filelistfordown_size() const;
  void clear_filelistfordown();
  static const int kFileListForDownFieldNumber = 1;
  const ::qiuwanli::FileList4Down& filelistfordown(int index) const;
  ::qiuwanli::FileList4Down* mutable_filelistfordown(int index);
  ::qiuwanli::FileList4Down* add_filelistfordown();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileList4Down >*
      mutable_filelistfordown();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileList4Down >&
      filelistfordown() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.FileList4DownTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileList4Down > filelistfordown_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileDowningLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileDowningLog) */ {
 public:
  FileDowningLog();
  virtual ~FileDowningLog();

  FileDowningLog(const FileDowningLog& from);

  inline FileDowningLog& operator=(const FileDowningLog& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileDowningLog& default_instance();

  static inline const FileDowningLog* internal_default_instance() {
    return reinterpret_cast<const FileDowningLog*>(
               &_FileDowningLog_default_instance_);
  }

  void Swap(FileDowningLog* other);

  // implements Message ----------------------------------------------

  inline FileDowningLog* New() const PROTOBUF_FINAL { return New(NULL); }

  FileDowningLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileDowningLog& from);
  void MergeFrom(const FileDowningLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileDowningLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string filename = 1;
  void clear_filename();
  static const int kFilenameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // string filesize = 2;
  void clear_filesize();
  static const int kFilesizeFieldNumber = 2;
  const ::std::string& filesize() const;
  void set_filesize(const ::std::string& value);
  #if LANG_CXX11
  void set_filesize(::std::string&& value);
  #endif
  void set_filesize(const char* value);
  void set_filesize(const char* value, size_t size);
  ::std::string* mutable_filesize();
  ::std::string* release_filesize();
  void set_allocated_filesize(::std::string* filesize);

  // string downtime = 3;
  void clear_downtime();
  static const int kDowntimeFieldNumber = 3;
  const ::std::string& downtime() const;
  void set_downtime(const ::std::string& value);
  #if LANG_CXX11
  void set_downtime(::std::string&& value);
  #endif
  void set_downtime(const char* value);
  void set_downtime(const char* value, size_t size);
  ::std::string* mutable_downtime();
  ::std::string* release_downtime();
  void set_allocated_downtime(::std::string* downtime);

  // string Downingstatus = 4;
  void clear_downingstatus();
  static const int kDowningstatusFieldNumber = 4;
  const ::std::string& downingstatus() const;
  void set_downingstatus(const ::std::string& value);
  #if LANG_CXX11
  void set_downingstatus(::std::string&& value);
  #endif
  void set_downingstatus(const char* value);
  void set_downingstatus(const char* value, size_t size);
  ::std::string* mutable_downingstatus();
  ::std::string* release_downingstatus();
  void set_allocated_downingstatus(::std::string* downingstatus);

  // string filesha512 = 5;
  void clear_filesha512();
  static const int kFilesha512FieldNumber = 5;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // @@protoc_insertion_point(class_scope:qiuwanli.FileDowningLog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr filesize_;
  ::google::protobuf::internal::ArenaStringPtr downtime_;
  ::google::protobuf::internal::ArenaStringPtr downingstatus_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileDowningLogTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileDowningLogTable) */ {
 public:
  FileDowningLogTable();
  virtual ~FileDowningLogTable();

  FileDowningLogTable(const FileDowningLogTable& from);

  inline FileDowningLogTable& operator=(const FileDowningLogTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileDowningLogTable& default_instance();

  static inline const FileDowningLogTable* internal_default_instance() {
    return reinterpret_cast<const FileDowningLogTable*>(
               &_FileDowningLogTable_default_instance_);
  }

  void Swap(FileDowningLogTable* other);

  // implements Message ----------------------------------------------

  inline FileDowningLogTable* New() const PROTOBUF_FINAL { return New(NULL); }

  FileDowningLogTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileDowningLogTable& from);
  void MergeFrom(const FileDowningLogTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileDowningLogTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.FileDowningLog FileDownLog = 1;
  int filedownlog_size() const;
  void clear_filedownlog();
  static const int kFileDownLogFieldNumber = 1;
  const ::qiuwanli::FileDowningLog& filedownlog(int index) const;
  ::qiuwanli::FileDowningLog* mutable_filedownlog(int index);
  ::qiuwanli::FileDowningLog* add_filedownlog();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowningLog >*
      mutable_filedownlog();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowningLog >&
      filedownlog() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.FileDowningLogTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowningLog > filedownlog_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileDowning : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileDowning) */ {
 public:
  FileDowning();
  virtual ~FileDowning();

  FileDowning(const FileDowning& from);

  inline FileDowning& operator=(const FileDowning& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileDowning& default_instance();

  static inline const FileDowning* internal_default_instance() {
    return reinterpret_cast<const FileDowning*>(
               &_FileDowning_default_instance_);
  }

  void Swap(FileDowning* other);

  // implements Message ----------------------------------------------

  inline FileDowning* New() const PROTOBUF_FINAL { return New(NULL); }

  FileDowning* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileDowning& from);
  void MergeFrom(const FileDowning& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileDowning* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string FileSHA512 = 1;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 1;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // string FileMD5 = 2;
  void clear_filemd5();
  static const int kFileMD5FieldNumber = 2;
  const ::std::string& filemd5() const;
  void set_filemd5(const ::std::string& value);
  #if LANG_CXX11
  void set_filemd5(::std::string&& value);
  #endif
  void set_filemd5(const char* value);
  void set_filemd5(const char* value, size_t size);
  ::std::string* mutable_filemd5();
  ::std::string* release_filemd5();
  void set_allocated_filemd5(::std::string* filemd5);

  // string FileName = 3;
  void clear_filename();
  static const int kFileNameFieldNumber = 3;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // string FileDownTime = 4;
  void clear_filedowntime();
  static const int kFileDownTimeFieldNumber = 4;
  const ::std::string& filedowntime() const;
  void set_filedowntime(const ::std::string& value);
  #if LANG_CXX11
  void set_filedowntime(::std::string&& value);
  #endif
  void set_filedowntime(const char* value);
  void set_filedowntime(const char* value, size_t size);
  ::std::string* mutable_filedowntime();
  ::std::string* release_filedowntime();
  void set_allocated_filedowntime(::std::string* filedowntime);

  // string FileSize = 7;
  void clear_filesize();
  static const int kFileSizeFieldNumber = 7;
  const ::std::string& filesize() const;
  void set_filesize(const ::std::string& value);
  #if LANG_CXX11
  void set_filesize(::std::string&& value);
  #endif
  void set_filesize(const char* value);
  void set_filesize(const char* value, size_t size);
  ::std::string* mutable_filesize();
  ::std::string* release_filesize();
  void set_allocated_filesize(::std::string* filesize);

  // string BitMap = 9;
  void clear_bitmap();
  static const int kBitMapFieldNumber = 9;
  const ::std::string& bitmap() const;
  void set_bitmap(const ::std::string& value);
  #if LANG_CXX11
  void set_bitmap(::std::string&& value);
  #endif
  void set_bitmap(const char* value);
  void set_bitmap(const char* value, size_t size);
  ::std::string* mutable_bitmap();
  ::std::string* release_bitmap();
  void set_allocated_bitmap(::std::string* bitmap);

  // uint64 FileDownloadBlockCount = 5;
  void clear_filedownloadblockcount();
  static const int kFileDownloadBlockCountFieldNumber = 5;
  ::google::protobuf::uint64 filedownloadblockcount() const;
  void set_filedownloadblockcount(::google::protobuf::uint64 value);

  // uint64 FileTotalBlockCount = 6;
  void clear_filetotalblockcount();
  static const int kFileTotalBlockCountFieldNumber = 6;
  ::google::protobuf::uint64 filetotalblockcount() const;
  void set_filetotalblockcount(::google::protobuf::uint64 value);

  // uint32 BlockCount = 8;
  void clear_blockcount();
  static const int kBlockCountFieldNumber = 8;
  ::google::protobuf::uint32 blockcount() const;
  void set_blockcount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.FileDowning)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  ::google::protobuf::internal::ArenaStringPtr filemd5_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr filedowntime_;
  ::google::protobuf::internal::ArenaStringPtr filesize_;
  ::google::protobuf::internal::ArenaStringPtr bitmap_;
  ::google::protobuf::uint64 filedownloadblockcount_;
  ::google::protobuf::uint64 filetotalblockcount_;
  ::google::protobuf::uint32 blockcount_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileDowningTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileDowningTable) */ {
 public:
  FileDowningTable();
  virtual ~FileDowningTable();

  FileDowningTable(const FileDowningTable& from);

  inline FileDowningTable& operator=(const FileDowningTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileDowningTable& default_instance();

  static inline const FileDowningTable* internal_default_instance() {
    return reinterpret_cast<const FileDowningTable*>(
               &_FileDowningTable_default_instance_);
  }

  void Swap(FileDowningTable* other);

  // implements Message ----------------------------------------------

  inline FileDowningTable* New() const PROTOBUF_FINAL { return New(NULL); }

  FileDowningTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileDowningTable& from);
  void MergeFrom(const FileDowningTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileDowningTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.FileDowning FileContinueTransmit = 1;
  int filecontinuetransmit_size() const;
  void clear_filecontinuetransmit();
  static const int kFileContinueTransmitFieldNumber = 1;
  const ::qiuwanli::FileDowning& filecontinuetransmit(int index) const;
  ::qiuwanli::FileDowning* mutable_filecontinuetransmit(int index);
  ::qiuwanli::FileDowning* add_filecontinuetransmit();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowning >*
      mutable_filecontinuetransmit();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowning >&
      filecontinuetransmit() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.FileDowningTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowning > filecontinuetransmit_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Heart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.Heart) */ {
 public:
  Heart();
  virtual ~Heart();

  Heart(const Heart& from);

  inline Heart& operator=(const Heart& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Heart& default_instance();

  static inline const Heart* internal_default_instance() {
    return reinterpret_cast<const Heart*>(
               &_Heart_default_instance_);
  }

  void Swap(Heart* other);

  // implements Message ----------------------------------------------

  inline Heart* New() const PROTOBUF_FINAL { return New(NULL); }

  Heart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Heart& from);
  void MergeFrom(const Heart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Heart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string RemainSize = 2;
  void clear_remainsize();
  static const int kRemainSizeFieldNumber = 2;
  const ::std::string& remainsize() const;
  void set_remainsize(const ::std::string& value);
  #if LANG_CXX11
  void set_remainsize(::std::string&& value);
  #endif
  void set_remainsize(const char* value);
  void set_remainsize(const char* value, size_t size);
  ::std::string* mutable_remainsize();
  ::std::string* release_remainsize();
  void set_allocated_remainsize(::std::string* remainsize);

  // string TotleSize = 3;
  void clear_totlesize();
  static const int kTotleSizeFieldNumber = 3;
  const ::std::string& totlesize() const;
  void set_totlesize(const ::std::string& value);
  #if LANG_CXX11
  void set_totlesize(::std::string&& value);
  #endif
  void set_totlesize(const char* value);
  void set_totlesize(const char* value, size_t size);
  ::std::string* mutable_totlesize();
  ::std::string* release_totlesize();
  void set_allocated_totlesize(::std::string* totlesize);

  // string PrikeyMd5 = 4;
  void clear_prikeymd5();
  static const int kPrikeyMd5FieldNumber = 4;
  const ::std::string& prikeymd5() const;
  void set_prikeymd5(const ::std::string& value);
  #if LANG_CXX11
  void set_prikeymd5(::std::string&& value);
  #endif
  void set_prikeymd5(const char* value);
  void set_prikeymd5(const char* value, size_t size);
  ::std::string* mutable_prikeymd5();
  ::std::string* release_prikeymd5();
  void set_allocated_prikeymd5(::std::string* prikeymd5);

  // @@protoc_insertion_point(class_scope:qiuwanli.Heart)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr remainsize_;
  ::google::protobuf::internal::ArenaStringPtr totlesize_;
  ::google::protobuf::internal::ArenaStringPtr prikeymd5_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DoSomething : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.DoSomething) */ {
 public:
  DoSomething();
  virtual ~DoSomething();

  DoSomething(const DoSomething& from);

  inline DoSomething& operator=(const DoSomething& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DoSomething& default_instance();

  static inline const DoSomething* internal_default_instance() {
    return reinterpret_cast<const DoSomething*>(
               &_DoSomething_default_instance_);
  }

  void Swap(DoSomething* other);

  // implements Message ----------------------------------------------

  inline DoSomething* New() const PROTOBUF_FINAL { return New(NULL); }

  DoSomething* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DoSomething& from);
  void MergeFrom(const DoSomething& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DoSomething* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Key = 1;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // string FileSHA512 = 2;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 2;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // @@protoc_insertion_point(class_scope:qiuwanli.DoSomething)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DoSomethingTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.DoSomethingTable) */ {
 public:
  DoSomethingTable();
  virtual ~DoSomethingTable();

  DoSomethingTable(const DoSomethingTable& from);

  inline DoSomethingTable& operator=(const DoSomethingTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DoSomethingTable& default_instance();

  static inline const DoSomethingTable* internal_default_instance() {
    return reinterpret_cast<const DoSomethingTable*>(
               &_DoSomethingTable_default_instance_);
  }

  void Swap(DoSomethingTable* other);

  // implements Message ----------------------------------------------

  inline DoSomethingTable* New() const PROTOBUF_FINAL { return New(NULL); }

  DoSomethingTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DoSomethingTable& from);
  void MergeFrom(const DoSomethingTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DoSomethingTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.DoSomething DoSome = 1;
  int dosome_size() const;
  void clear_dosome();
  static const int kDoSomeFieldNumber = 1;
  const ::qiuwanli::DoSomething& dosome(int index) const;
  ::qiuwanli::DoSomething* mutable_dosome(int index);
  ::qiuwanli::DoSomething* add_dosome();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::DoSomething >*
      mutable_dosome();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::DoSomething >&
      dosome() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.DoSomethingTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::DoSomething > dosome_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockCheck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockCheck) */ {
 public:
  BlockCheck();
  virtual ~BlockCheck();

  BlockCheck(const BlockCheck& from);

  inline BlockCheck& operator=(const BlockCheck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockCheck& default_instance();

  static inline const BlockCheck* internal_default_instance() {
    return reinterpret_cast<const BlockCheck*>(
               &_BlockCheck_default_instance_);
  }

  void Swap(BlockCheck* other);

  // implements Message ----------------------------------------------

  inline BlockCheck* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockCheck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockCheck& from);
  void MergeFrom(const BlockCheck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockCheck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string BlockMD5 = 2;
  void clear_blockmd5();
  static const int kBlockMD5FieldNumber = 2;
  const ::std::string& blockmd5() const;
  void set_blockmd5(const ::std::string& value);
  #if LANG_CXX11
  void set_blockmd5(::std::string&& value);
  #endif
  void set_blockmd5(const char* value);
  void set_blockmd5(const char* value, size_t size);
  ::std::string* mutable_blockmd5();
  ::std::string* release_blockmd5();
  void set_allocated_blockmd5(::std::string* blockmd5);

  // uint32 BlockItem = 1;
  void clear_blockitem();
  static const int kBlockItemFieldNumber = 1;
  ::google::protobuf::uint32 blockitem() const;
  void set_blockitem(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockCheck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr blockmd5_;
  ::google::protobuf::uint32 blockitem_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockListForDownCheck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockListForDownCheck) */ {
 public:
  BlockListForDownCheck();
  virtual ~BlockListForDownCheck();

  BlockListForDownCheck(const BlockListForDownCheck& from);

  inline BlockListForDownCheck& operator=(const BlockListForDownCheck& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockListForDownCheck& default_instance();

  static inline const BlockListForDownCheck* internal_default_instance() {
    return reinterpret_cast<const BlockListForDownCheck*>(
               &_BlockListForDownCheck_default_instance_);
  }

  void Swap(BlockListForDownCheck* other);

  // implements Message ----------------------------------------------

  inline BlockListForDownCheck* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockListForDownCheck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockListForDownCheck& from);
  void MergeFrom(const BlockListForDownCheck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockListForDownCheck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.BlockCheck Blocks = 4;
  int blocks_size() const;
  void clear_blocks();
  static const int kBlocksFieldNumber = 4;
  const ::qiuwanli::BlockCheck& blocks(int index) const;
  ::qiuwanli::BlockCheck* mutable_blocks(int index);
  ::qiuwanli::BlockCheck* add_blocks();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockCheck >*
      mutable_blocks();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockCheck >&
      blocks() const;

  // string FileSHA512 = 1;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 1;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // string SaveServersIP = 2;
  void clear_saveserversip();
  static const int kSaveServersIPFieldNumber = 2;
  const ::std::string& saveserversip() const;
  void set_saveserversip(const ::std::string& value);
  #if LANG_CXX11
  void set_saveserversip(::std::string&& value);
  #endif
  void set_saveserversip(const char* value);
  void set_saveserversip(const char* value, size_t size);
  ::std::string* mutable_saveserversip();
  ::std::string* release_saveserversip();
  void set_allocated_saveserversip(::std::string* saveserversip);

  // string FileMD5 = 3;
  void clear_filemd5();
  static const int kFileMD5FieldNumber = 3;
  const ::std::string& filemd5() const;
  void set_filemd5(const ::std::string& value);
  #if LANG_CXX11
  void set_filemd5(::std::string&& value);
  #endif
  void set_filemd5(const char* value);
  void set_filemd5(const char* value, size_t size);
  ::std::string* mutable_filemd5();
  ::std::string* release_filemd5();
  void set_allocated_filemd5(::std::string* filemd5);

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockListForDownCheck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockCheck > blocks_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  ::google::protobuf::internal::ArenaStringPtr saveserversip_;
  ::google::protobuf::internal::ArenaStringPtr filemd5_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockListForDownCheckTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockListForDownCheckTable) */ {
 public:
  BlockListForDownCheckTable();
  virtual ~BlockListForDownCheckTable();

  BlockListForDownCheckTable(const BlockListForDownCheckTable& from);

  inline BlockListForDownCheckTable& operator=(const BlockListForDownCheckTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockListForDownCheckTable& default_instance();

  static inline const BlockListForDownCheckTable* internal_default_instance() {
    return reinterpret_cast<const BlockListForDownCheckTable*>(
               &_BlockListForDownCheckTable_default_instance_);
  }

  void Swap(BlockListForDownCheckTable* other);

  // implements Message ----------------------------------------------

  inline BlockListForDownCheckTable* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockListForDownCheckTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockListForDownCheckTable& from);
  void MergeFrom(const BlockListForDownCheckTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockListForDownCheckTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.BlockListForDownCheck BlockListForDown = 1;
  int blocklistfordown_size() const;
  void clear_blocklistfordown();
  static const int kBlockListForDownFieldNumber = 1;
  const ::qiuwanli::BlockListForDownCheck& blocklistfordown(int index) const;
  ::qiuwanli::BlockListForDownCheck* mutable_blocklistfordown(int index);
  ::qiuwanli::BlockListForDownCheck* add_blocklistfordown();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockListForDownCheck >*
      mutable_blocklistfordown();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockListForDownCheck >&
      blocklistfordown() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockListForDownCheckTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockListForDownCheck > blocklistfordown_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Shared : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.Shared) */ {
 public:
  Shared();
  virtual ~Shared();

  Shared(const Shared& from);

  inline Shared& operator=(const Shared& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shared& default_instance();

  static inline const Shared* internal_default_instance() {
    return reinterpret_cast<const Shared*>(
               &_Shared_default_instance_);
  }

  void Swap(Shared* other);

  // implements Message ----------------------------------------------

  inline Shared* New() const PROTOBUF_FINAL { return New(NULL); }

  Shared* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Shared& from);
  void MergeFrom(const Shared& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Shared* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string Sha512 = 1;
  void clear_sha512();
  static const int kSha512FieldNumber = 1;
  const ::std::string& sha512() const;
  void set_sha512(const ::std::string& value);
  #if LANG_CXX11
  void set_sha512(::std::string&& value);
  #endif
  void set_sha512(const char* value);
  void set_sha512(const char* value, size_t size);
  ::std::string* mutable_sha512();
  ::std::string* release_sha512();
  void set_allocated_sha512(::std::string* sha512);

  // string VerificationCode = 2;
  void clear_verificationcode();
  static const int kVerificationCodeFieldNumber = 2;
  const ::std::string& verificationcode() const;
  void set_verificationcode(const ::std::string& value);
  #if LANG_CXX11
  void set_verificationcode(::std::string&& value);
  #endif
  void set_verificationcode(const char* value);
  void set_verificationcode(const char* value, size_t size);
  ::std::string* mutable_verificationcode();
  ::std::string* release_verificationcode();
  void set_allocated_verificationcode(::std::string* verificationcode);

  // string SharedTime = 3;
  void clear_sharedtime();
  static const int kSharedTimeFieldNumber = 3;
  const ::std::string& sharedtime() const;
  void set_sharedtime(const ::std::string& value);
  #if LANG_CXX11
  void set_sharedtime(::std::string&& value);
  #endif
  void set_sharedtime(const char* value);
  void set_sharedtime(const char* value, size_t size);
  ::std::string* mutable_sharedtime();
  ::std::string* release_sharedtime();
  void set_allocated_sharedtime(::std::string* sharedtime);

  // string FileSize = 4;
  void clear_filesize();
  static const int kFileSizeFieldNumber = 4;
  const ::std::string& filesize() const;
  void set_filesize(const ::std::string& value);
  #if LANG_CXX11
  void set_filesize(::std::string&& value);
  #endif
  void set_filesize(const char* value);
  void set_filesize(const char* value, size_t size);
  ::std::string* mutable_filesize();
  ::std::string* release_filesize();
  void set_allocated_filesize(::std::string* filesize);

  // string UserStutas = 5;
  void clear_userstutas();
  static const int kUserStutasFieldNumber = 5;
  const ::std::string& userstutas() const;
  void set_userstutas(const ::std::string& value);
  #if LANG_CXX11
  void set_userstutas(::std::string&& value);
  #endif
  void set_userstutas(const char* value);
  void set_userstutas(const char* value, size_t size);
  ::std::string* mutable_userstutas();
  ::std::string* release_userstutas();
  void set_allocated_userstutas(::std::string* userstutas);

  // string UserID = 6;
  void clear_userid();
  static const int kUserIDFieldNumber = 6;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // @@protoc_insertion_point(class_scope:qiuwanli.Shared)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sha512_;
  ::google::protobuf::internal::ArenaStringPtr verificationcode_;
  ::google::protobuf::internal::ArenaStringPtr sharedtime_;
  ::google::protobuf::internal::ArenaStringPtr filesize_;
  ::google::protobuf::internal::ArenaStringPtr userstutas_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SharedTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.SharedTable) */ {
 public:
  SharedTable();
  virtual ~SharedTable();

  SharedTable(const SharedTable& from);

  inline SharedTable& operator=(const SharedTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SharedTable& default_instance();

  static inline const SharedTable* internal_default_instance() {
    return reinterpret_cast<const SharedTable*>(
               &_SharedTable_default_instance_);
  }

  void Swap(SharedTable* other);

  // implements Message ----------------------------------------------

  inline SharedTable* New() const PROTOBUF_FINAL { return New(NULL); }

  SharedTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SharedTable& from);
  void MergeFrom(const SharedTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SharedTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.Shared SharedInfo = 1;
  int sharedinfo_size() const;
  void clear_sharedinfo();
  static const int kSharedInfoFieldNumber = 1;
  const ::qiuwanli::Shared& sharedinfo(int index) const;
  ::qiuwanli::Shared* mutable_sharedinfo(int index);
  ::qiuwanli::Shared* add_sharedinfo();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Shared >*
      mutable_sharedinfo();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Shared >&
      sharedinfo() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.SharedTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Shared > sharedinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockList4Down : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockList4Down) */ {
 public:
  BlockList4Down();
  virtual ~BlockList4Down();

  BlockList4Down(const BlockList4Down& from);

  inline BlockList4Down& operator=(const BlockList4Down& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockList4Down& default_instance();

  static inline const BlockList4Down* internal_default_instance() {
    return reinterpret_cast<const BlockList4Down*>(
               &_BlockList4Down_default_instance_);
  }

  void Swap(BlockList4Down* other);

  // implements Message ----------------------------------------------

  inline BlockList4Down* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockList4Down* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockList4Down& from);
  void MergeFrom(const BlockList4Down& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockList4Down* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string FileSHA512 = 1;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 1;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // string BlockNumer = 2;
  void clear_blocknumer();
  static const int kBlockNumerFieldNumber = 2;
  const ::std::string& blocknumer() const;
  void set_blocknumer(const ::std::string& value);
  #if LANG_CXX11
  void set_blocknumer(::std::string&& value);
  #endif
  void set_blocknumer(const char* value);
  void set_blocknumer(const char* value, size_t size);
  ::std::string* mutable_blocknumer();
  ::std::string* release_blocknumer();
  void set_allocated_blocknumer(::std::string* blocknumer);

  // string BlockMD5 = 3;
  void clear_blockmd5();
  static const int kBlockMD5FieldNumber = 3;
  const ::std::string& blockmd5() const;
  void set_blockmd5(const ::std::string& value);
  #if LANG_CXX11
  void set_blockmd5(::std::string&& value);
  #endif
  void set_blockmd5(const char* value);
  void set_blockmd5(const char* value, size_t size);
  ::std::string* mutable_blockmd5();
  ::std::string* release_blockmd5();
  void set_allocated_blockmd5(::std::string* blockmd5);

  // string SaveServersIP = 4;
  void clear_saveserversip();
  static const int kSaveServersIPFieldNumber = 4;
  const ::std::string& saveserversip() const;
  void set_saveserversip(const ::std::string& value);
  #if LANG_CXX11
  void set_saveserversip(::std::string&& value);
  #endif
  void set_saveserversip(const char* value);
  void set_saveserversip(const char* value, size_t size);
  ::std::string* mutable_saveserversip();
  ::std::string* release_saveserversip();
  void set_allocated_saveserversip(::std::string* saveserversip);

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockList4Down)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  ::google::protobuf::internal::ArenaStringPtr blocknumer_;
  ::google::protobuf::internal::ArenaStringPtr blockmd5_;
  ::google::protobuf::internal::ArenaStringPtr saveserversip_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockList4DownTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockList4DownTable) */ {
 public:
  BlockList4DownTable();
  virtual ~BlockList4DownTable();

  BlockList4DownTable(const BlockList4DownTable& from);

  inline BlockList4DownTable& operator=(const BlockList4DownTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockList4DownTable& default_instance();

  static inline const BlockList4DownTable* internal_default_instance() {
    return reinterpret_cast<const BlockList4DownTable*>(
               &_BlockList4DownTable_default_instance_);
  }

  void Swap(BlockList4DownTable* other);

  // implements Message ----------------------------------------------

  inline BlockList4DownTable* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockList4DownTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockList4DownTable& from);
  void MergeFrom(const BlockList4DownTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockList4DownTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.BlockList4Down BlockListForDown = 1;
  int blocklistfordown_size() const;
  void clear_blocklistfordown();
  static const int kBlockListForDownFieldNumber = 1;
  const ::qiuwanli::BlockList4Down& blocklistfordown(int index) const;
  ::qiuwanli::BlockList4Down* mutable_blocklistfordown(int index);
  ::qiuwanli::BlockList4Down* add_blocklistfordown();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockList4Down >*
      mutable_blocklistfordown();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockList4Down >&
      blocklistfordown() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockList4DownTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockList4Down > blocklistfordown_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Logs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.Logs) */ {
 public:
  Logs();
  virtual ~Logs();

  Logs(const Logs& from);

  inline Logs& operator=(const Logs& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Logs& default_instance();

  static inline const Logs* internal_default_instance() {
    return reinterpret_cast<const Logs*>(
               &_Logs_default_instance_);
  }

  void Swap(Logs* other);

  // implements Message ----------------------------------------------

  inline Logs* New() const PROTOBUF_FINAL { return New(NULL); }

  Logs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Logs& from);
  void MergeFrom(const Logs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Logs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string log_info = 3;
  void clear_log_info();
  static const int kLogInfoFieldNumber = 3;
  const ::std::string& log_info() const;
  void set_log_info(const ::std::string& value);
  #if LANG_CXX11
  void set_log_info(::std::string&& value);
  #endif
  void set_log_info(const char* value);
  void set_log_info(const char* value, size_t size);
  ::std::string* mutable_log_info();
  ::std::string* release_log_info();
  void set_allocated_log_info(::std::string* log_info);

  // bytes log_type = 4;
  void clear_log_type();
  static const int kLogTypeFieldNumber = 4;
  const ::std::string& log_type() const;
  void set_log_type(const ::std::string& value);
  #if LANG_CXX11
  void set_log_type(::std::string&& value);
  #endif
  void set_log_type(const char* value);
  void set_log_type(const void* value, size_t size);
  ::std::string* mutable_log_type();
  ::std::string* release_log_type();
  void set_allocated_log_type(::std::string* log_type);

  // string user_client_UUID = 5;
  void clear_user_client_uuid();
  static const int kUserClientUUIDFieldNumber = 5;
  const ::std::string& user_client_uuid() const;
  void set_user_client_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_user_client_uuid(::std::string&& value);
  #endif
  void set_user_client_uuid(const char* value);
  void set_user_client_uuid(const char* value, size_t size);
  ::std::string* mutable_user_client_uuid();
  ::std::string* release_user_client_uuid();
  void set_allocated_user_client_uuid(::std::string* user_client_uuid);

  // uint64 log_date = 2;
  void clear_log_date();
  static const int kLogDateFieldNumber = 2;
  ::google::protobuf::uint64 log_date() const;
  void set_log_date(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.Logs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr log_info_;
  ::google::protobuf::internal::ArenaStringPtr log_type_;
  ::google::protobuf::internal::ArenaStringPtr user_client_uuid_;
  ::google::protobuf::uint64 log_date_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogsTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.LogsTable) */ {
 public:
  LogsTable();
  virtual ~LogsTable();

  LogsTable(const LogsTable& from);

  inline LogsTable& operator=(const LogsTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogsTable& default_instance();

  static inline const LogsTable* internal_default_instance() {
    return reinterpret_cast<const LogsTable*>(
               &_LogsTable_default_instance_);
  }

  void Swap(LogsTable* other);

  // implements Message ----------------------------------------------

  inline LogsTable* New() const PROTOBUF_FINAL { return New(NULL); }

  LogsTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LogsTable& from);
  void MergeFrom(const LogsTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LogsTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.Logs log = 2;
  int log_size() const;
  void clear_log();
  static const int kLogFieldNumber = 2;
  const ::qiuwanli::Logs& log(int index) const;
  ::qiuwanli::Logs* mutable_log(int index);
  ::qiuwanli::Logs* add_log();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >*
      mutable_log();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >&
      log() const;

  // string logdate = 1;
  void clear_logdate();
  static const int kLogdateFieldNumber = 1;
  const ::std::string& logdate() const;
  void set_logdate(const ::std::string& value);
  #if LANG_CXX11
  void set_logdate(::std::string&& value);
  #endif
  void set_logdate(const char* value);
  void set_logdate(const char* value, size_t size);
  ::std::string* mutable_logdate();
  ::std::string* release_logdate();
  void set_allocated_logdate(::std::string* logdate);

  // @@protoc_insertion_point(class_scope:qiuwanli.LogsTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs > log_;
  ::google::protobuf::internal::ArenaStringPtr logdate_;
  mutable int _cached_size_;
  friend struct  protobuf_PublicStruct_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ConfigFile

// string ID = 1;
inline void ConfigFile::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigFile::id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ConfigFile.ID)
  return id_.GetNoArena();
}
inline void ConfigFile::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ConfigFile.ID)
}
#if LANG_CXX11
inline void ConfigFile::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ConfigFile.ID)
}
#endif
inline void ConfigFile::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ConfigFile.ID)
}
inline void ConfigFile::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ConfigFile.ID)
}
inline ::std::string* ConfigFile::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ConfigFile.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigFile::release_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.ConfigFile.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigFile::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ConfigFile.ID)
}

// string IP = 2;
inline void ConfigFile::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigFile::ip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ConfigFile.IP)
  return ip_.GetNoArena();
}
inline void ConfigFile::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ConfigFile.IP)
}
#if LANG_CXX11
inline void ConfigFile::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ConfigFile.IP)
}
#endif
inline void ConfigFile::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ConfigFile.IP)
}
inline void ConfigFile::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ConfigFile.IP)
}
inline ::std::string* ConfigFile::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ConfigFile.IP)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigFile::release_ip() {
  // @@protoc_insertion_point(field_release:qiuwanli.ConfigFile.IP)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigFile::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ConfigFile.IP)
}

// string PriKey = 3;
inline void ConfigFile::clear_prikey() {
  prikey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigFile::prikey() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ConfigFile.PriKey)
  return prikey_.GetNoArena();
}
inline void ConfigFile::set_prikey(const ::std::string& value) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ConfigFile.PriKey)
}
#if LANG_CXX11
inline void ConfigFile::set_prikey(::std::string&& value) {
  
  prikey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ConfigFile.PriKey)
}
#endif
inline void ConfigFile::set_prikey(const char* value) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ConfigFile.PriKey)
}
inline void ConfigFile::set_prikey(const char* value, size_t size) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ConfigFile.PriKey)
}
inline ::std::string* ConfigFile::mutable_prikey() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ConfigFile.PriKey)
  return prikey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigFile::release_prikey() {
  // @@protoc_insertion_point(field_release:qiuwanli.ConfigFile.PriKey)
  
  return prikey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigFile::set_allocated_prikey(::std::string* prikey) {
  if (prikey != NULL) {
    
  } else {
    
  }
  prikey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prikey);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ConfigFile.PriKey)
}

// string PriKeyMD5 = 4;
inline void ConfigFile::clear_prikeymd5() {
  prikeymd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigFile::prikeymd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ConfigFile.PriKeyMD5)
  return prikeymd5_.GetNoArena();
}
inline void ConfigFile::set_prikeymd5(const ::std::string& value) {
  
  prikeymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ConfigFile.PriKeyMD5)
}
#if LANG_CXX11
inline void ConfigFile::set_prikeymd5(::std::string&& value) {
  
  prikeymd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ConfigFile.PriKeyMD5)
}
#endif
inline void ConfigFile::set_prikeymd5(const char* value) {
  
  prikeymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ConfigFile.PriKeyMD5)
}
inline void ConfigFile::set_prikeymd5(const char* value, size_t size) {
  
  prikeymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ConfigFile.PriKeyMD5)
}
inline ::std::string* ConfigFile::mutable_prikeymd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ConfigFile.PriKeyMD5)
  return prikeymd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigFile::release_prikeymd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.ConfigFile.PriKeyMD5)
  
  return prikeymd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigFile::set_allocated_prikeymd5(::std::string* prikeymd5) {
  if (prikeymd5 != NULL) {
    
  } else {
    
  }
  prikeymd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prikeymd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ConfigFile.PriKeyMD5)
}

// uint64 TotalSize = 5;
inline void ConfigFile::clear_totalsize() {
  totalsize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ConfigFile::totalsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ConfigFile.TotalSize)
  return totalsize_;
}
inline void ConfigFile::set_totalsize(::google::protobuf::uint64 value) {
  
  totalsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.ConfigFile.TotalSize)
}

// uint64 RemainSize = 6;
inline void ConfigFile::clear_remainsize() {
  remainsize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ConfigFile::remainsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ConfigFile.RemainSize)
  return remainsize_;
}
inline void ConfigFile::set_remainsize(::google::protobuf::uint64 value) {
  
  remainsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.ConfigFile.RemainSize)
}

// string ServersIP = 7;
inline void ConfigFile::clear_serversip() {
  serversip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigFile::serversip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ConfigFile.ServersIP)
  return serversip_.GetNoArena();
}
inline void ConfigFile::set_serversip(const ::std::string& value) {
  
  serversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ConfigFile.ServersIP)
}
#if LANG_CXX11
inline void ConfigFile::set_serversip(::std::string&& value) {
  
  serversip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ConfigFile.ServersIP)
}
#endif
inline void ConfigFile::set_serversip(const char* value) {
  
  serversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ConfigFile.ServersIP)
}
inline void ConfigFile::set_serversip(const char* value, size_t size) {
  
  serversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ConfigFile.ServersIP)
}
inline ::std::string* ConfigFile::mutable_serversip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ConfigFile.ServersIP)
  return serversip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigFile::release_serversip() {
  // @@protoc_insertion_point(field_release:qiuwanli.ConfigFile.ServersIP)
  
  return serversip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigFile::set_allocated_serversip(::std::string* serversip) {
  if (serversip != NULL) {
    
  } else {
    
  }
  serversip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serversip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ConfigFile.ServersIP)
}

// string ServersPort = 8;
inline void ConfigFile::clear_serversport() {
  serversport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigFile::serversport() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ConfigFile.ServersPort)
  return serversport_.GetNoArena();
}
inline void ConfigFile::set_serversport(const ::std::string& value) {
  
  serversport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ConfigFile.ServersPort)
}
#if LANG_CXX11
inline void ConfigFile::set_serversport(::std::string&& value) {
  
  serversport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ConfigFile.ServersPort)
}
#endif
inline void ConfigFile::set_serversport(const char* value) {
  
  serversport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ConfigFile.ServersPort)
}
inline void ConfigFile::set_serversport(const char* value, size_t size) {
  
  serversport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ConfigFile.ServersPort)
}
inline ::std::string* ConfigFile::mutable_serversport() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ConfigFile.ServersPort)
  return serversport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigFile::release_serversport() {
  // @@protoc_insertion_point(field_release:qiuwanli.ConfigFile.ServersPort)
  
  return serversport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigFile::set_allocated_serversport(::std::string* serversport) {
  if (serversport != NULL) {
    
  } else {
    
  }
  serversport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serversport);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ConfigFile.ServersPort)
}

// -------------------------------------------------------------------

// BlockInfo

// string FileSHA512 = 1;
inline void BlockInfo::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockInfo::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void BlockInfo::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo.FileSHA512)
}
#if LANG_CXX11
inline void BlockInfo::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockInfo.FileSHA512)
}
#endif
inline void BlockInfo::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockInfo.FileSHA512)
}
inline void BlockInfo::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockInfo.FileSHA512)
}
inline ::std::string* BlockInfo::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfo.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockInfo::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockInfo.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockInfo::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockInfo.FileSHA512)
}

// string BlockMD5 = 2;
inline void BlockInfo::clear_blockmd5() {
  blockmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockInfo::blockmd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo.BlockMD5)
  return blockmd5_.GetNoArena();
}
inline void BlockInfo::set_blockmd5(const ::std::string& value) {
  
  blockmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo.BlockMD5)
}
#if LANG_CXX11
inline void BlockInfo::set_blockmd5(::std::string&& value) {
  
  blockmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockInfo.BlockMD5)
}
#endif
inline void BlockInfo::set_blockmd5(const char* value) {
  
  blockmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockInfo.BlockMD5)
}
inline void BlockInfo::set_blockmd5(const char* value, size_t size) {
  
  blockmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockInfo.BlockMD5)
}
inline ::std::string* BlockInfo::mutable_blockmd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfo.BlockMD5)
  return blockmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockInfo::release_blockmd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockInfo.BlockMD5)
  
  return blockmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockInfo::set_allocated_blockmd5(::std::string* blockmd5) {
  if (blockmd5 != NULL) {
    
  } else {
    
  }
  blockmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blockmd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockInfo.BlockMD5)
}

// string SaveFileName = 3;
inline void BlockInfo::clear_savefilename() {
  savefilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockInfo::savefilename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo.SaveFileName)
  return savefilename_.GetNoArena();
}
inline void BlockInfo::set_savefilename(const ::std::string& value) {
  
  savefilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo.SaveFileName)
}
#if LANG_CXX11
inline void BlockInfo::set_savefilename(::std::string&& value) {
  
  savefilename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockInfo.SaveFileName)
}
#endif
inline void BlockInfo::set_savefilename(const char* value) {
  
  savefilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockInfo.SaveFileName)
}
inline void BlockInfo::set_savefilename(const char* value, size_t size) {
  
  savefilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockInfo.SaveFileName)
}
inline ::std::string* BlockInfo::mutable_savefilename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfo.SaveFileName)
  return savefilename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockInfo::release_savefilename() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockInfo.SaveFileName)
  
  return savefilename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockInfo::set_allocated_savefilename(::std::string* savefilename) {
  if (savefilename != NULL) {
    
  } else {
    
  }
  savefilename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), savefilename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockInfo.SaveFileName)
}

// uint64 BlockNumer = 4;
inline void BlockInfo::clear_blocknumer() {
  blocknumer_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BlockInfo::blocknumer() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo.BlockNumer)
  return blocknumer_;
}
inline void BlockInfo::set_blocknumer(::google::protobuf::uint64 value) {
  
  blocknumer_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo.BlockNumer)
}

// uint64 CurSize = 5;
inline void BlockInfo::clear_cursize() {
  cursize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BlockInfo::cursize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo.CurSize)
  return cursize_;
}
inline void BlockInfo::set_cursize(::google::protobuf::uint64 value) {
  
  cursize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo.CurSize)
}

// uint64 FileBlockOffset = 6;
inline void BlockInfo::clear_fileblockoffset() {
  fileblockoffset_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BlockInfo::fileblockoffset() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo.FileBlockOffset)
  return fileblockoffset_;
}
inline void BlockInfo::set_fileblockoffset(::google::protobuf::uint64 value) {
  
  fileblockoffset_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo.FileBlockOffset)
}

// -------------------------------------------------------------------

// BlockInfoTable

// repeated .qiuwanli.BlockInfo Block = 1;
inline int BlockInfoTable::block_size() const {
  return block_.size();
}
inline void BlockInfoTable::clear_block() {
  block_.Clear();
}
inline const ::qiuwanli::BlockInfo& BlockInfoTable::block(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfoTable.Block)
  return block_.Get(index);
}
inline ::qiuwanli::BlockInfo* BlockInfoTable::mutable_block(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfoTable.Block)
  return block_.Mutable(index);
}
inline ::qiuwanli::BlockInfo* BlockInfoTable::add_block() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockInfoTable.Block)
  return block_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo >*
BlockInfoTable::mutable_block() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockInfoTable.Block)
  return &block_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo >&
BlockInfoTable::block() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockInfoTable.Block)
  return block_;
}

// -------------------------------------------------------------------

// File2Cilent

// string FileName = 1;
inline void File2Cilent::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File2Cilent::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.FileName)
  return filename_.GetNoArena();
}
inline void File2Cilent::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.FileName)
}
#if LANG_CXX11
inline void File2Cilent::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.FileName)
}
#endif
inline void File2Cilent::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.FileName)
}
inline void File2Cilent::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.FileName)
}
inline ::std::string* File2Cilent::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.FileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File2Cilent::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.FileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File2Cilent::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.FileName)
}

// string FileSHA512 = 2;
inline void File2Cilent::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File2Cilent::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void File2Cilent::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.FileSHA512)
}
#if LANG_CXX11
inline void File2Cilent::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.FileSHA512)
}
#endif
inline void File2Cilent::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.FileSHA512)
}
inline void File2Cilent::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.FileSHA512)
}
inline ::std::string* File2Cilent::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File2Cilent::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File2Cilent::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.FileSHA512)
}

// string CilentID = 3;
inline void File2Cilent::clear_cilentid() {
  cilentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File2Cilent::cilentid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.CilentID)
  return cilentid_.GetNoArena();
}
inline void File2Cilent::set_cilentid(const ::std::string& value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.CilentID)
}
#if LANG_CXX11
inline void File2Cilent::set_cilentid(::std::string&& value) {
  
  cilentid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.CilentID)
}
#endif
inline void File2Cilent::set_cilentid(const char* value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.CilentID)
}
inline void File2Cilent::set_cilentid(const char* value, size_t size) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.CilentID)
}
inline ::std::string* File2Cilent::mutable_cilentid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.CilentID)
  return cilentid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File2Cilent::release_cilentid() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.CilentID)
  
  return cilentid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File2Cilent::set_allocated_cilentid(::std::string* cilentid) {
  if (cilentid != NULL) {
    
  } else {
    
  }
  cilentid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cilentid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.CilentID)
}

// string CilentPort = 4;
inline void File2Cilent::clear_cilentport() {
  cilentport_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File2Cilent::cilentport() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.CilentPort)
  return cilentport_.GetNoArena();
}
inline void File2Cilent::set_cilentport(const ::std::string& value) {
  
  cilentport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.CilentPort)
}
#if LANG_CXX11
inline void File2Cilent::set_cilentport(::std::string&& value) {
  
  cilentport_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.CilentPort)
}
#endif
inline void File2Cilent::set_cilentport(const char* value) {
  
  cilentport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.CilentPort)
}
inline void File2Cilent::set_cilentport(const char* value, size_t size) {
  
  cilentport_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.CilentPort)
}
inline ::std::string* File2Cilent::mutable_cilentport() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.CilentPort)
  return cilentport_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File2Cilent::release_cilentport() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.CilentPort)
  
  return cilentport_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File2Cilent::set_allocated_cilentport(::std::string* cilentport) {
  if (cilentport != NULL) {
    
  } else {
    
  }
  cilentport_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cilentport);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.CilentPort)
}

// -------------------------------------------------------------------

// File2ClientTable

// repeated .qiuwanli.File2Cilent FileToClient = 1;
inline int File2ClientTable::filetoclient_size() const {
  return filetoclient_.size();
}
inline void File2ClientTable::clear_filetoclient() {
  filetoclient_.Clear();
}
inline const ::qiuwanli::File2Cilent& File2ClientTable::filetoclient(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2ClientTable.FileToClient)
  return filetoclient_.Get(index);
}
inline ::qiuwanli::File2Cilent* File2ClientTable::mutable_filetoclient(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2ClientTable.FileToClient)
  return filetoclient_.Mutable(index);
}
inline ::qiuwanli::File2Cilent* File2ClientTable::add_filetoclient() {
  // @@protoc_insertion_point(field_add:qiuwanli.File2ClientTable.FileToClient)
  return filetoclient_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent >*
File2ClientTable::mutable_filetoclient() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.File2ClientTable.FileToClient)
  return &filetoclient_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent >&
File2ClientTable::filetoclient() const {
  // @@protoc_insertion_point(field_list:qiuwanli.File2ClientTable.FileToClient)
  return filetoclient_;
}

// -------------------------------------------------------------------

// ClientConfigFile

// string CilentID = 1;
inline void ClientConfigFile::clear_cilentid() {
  cilentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientConfigFile::cilentid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.CilentID)
  return cilentid_.GetNoArena();
}
inline void ClientConfigFile::set_cilentid(const ::std::string& value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.CilentID)
}
#if LANG_CXX11
inline void ClientConfigFile::set_cilentid(::std::string&& value) {
  
  cilentid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ClientConfigFile.CilentID)
}
#endif
inline void ClientConfigFile::set_cilentid(const char* value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ClientConfigFile.CilentID)
}
inline void ClientConfigFile::set_cilentid(const char* value, size_t size) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ClientConfigFile.CilentID)
}
inline ::std::string* ClientConfigFile::mutable_cilentid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ClientConfigFile.CilentID)
  return cilentid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientConfigFile::release_cilentid() {
  // @@protoc_insertion_point(field_release:qiuwanli.ClientConfigFile.CilentID)
  
  return cilentid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientConfigFile::set_allocated_cilentid(::std::string* cilentid) {
  if (cilentid != NULL) {
    
  } else {
    
  }
  cilentid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cilentid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ClientConfigFile.CilentID)
}

// string SaveIP = 2;
inline void ClientConfigFile::clear_saveip() {
  saveip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientConfigFile::saveip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.SaveIP)
  return saveip_.GetNoArena();
}
inline void ClientConfigFile::set_saveip(const ::std::string& value) {
  
  saveip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.SaveIP)
}
#if LANG_CXX11
inline void ClientConfigFile::set_saveip(::std::string&& value) {
  
  saveip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ClientConfigFile.SaveIP)
}
#endif
inline void ClientConfigFile::set_saveip(const char* value) {
  
  saveip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ClientConfigFile.SaveIP)
}
inline void ClientConfigFile::set_saveip(const char* value, size_t size) {
  
  saveip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ClientConfigFile.SaveIP)
}
inline ::std::string* ClientConfigFile::mutable_saveip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ClientConfigFile.SaveIP)
  return saveip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientConfigFile::release_saveip() {
  // @@protoc_insertion_point(field_release:qiuwanli.ClientConfigFile.SaveIP)
  
  return saveip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientConfigFile::set_allocated_saveip(::std::string* saveip) {
  if (saveip != NULL) {
    
  } else {
    
  }
  saveip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), saveip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ClientConfigFile.SaveIP)
}

// string PriKey = 3;
inline void ClientConfigFile::clear_prikey() {
  prikey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientConfigFile::prikey() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.PriKey)
  return prikey_.GetNoArena();
}
inline void ClientConfigFile::set_prikey(const ::std::string& value) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.PriKey)
}
#if LANG_CXX11
inline void ClientConfigFile::set_prikey(::std::string&& value) {
  
  prikey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ClientConfigFile.PriKey)
}
#endif
inline void ClientConfigFile::set_prikey(const char* value) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ClientConfigFile.PriKey)
}
inline void ClientConfigFile::set_prikey(const char* value, size_t size) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ClientConfigFile.PriKey)
}
inline ::std::string* ClientConfigFile::mutable_prikey() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ClientConfigFile.PriKey)
  return prikey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientConfigFile::release_prikey() {
  // @@protoc_insertion_point(field_release:qiuwanli.ClientConfigFile.PriKey)
  
  return prikey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientConfigFile::set_allocated_prikey(::std::string* prikey) {
  if (prikey != NULL) {
    
  } else {
    
  }
  prikey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prikey);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ClientConfigFile.PriKey)
}

// string KeyMD5 = 4;
inline void ClientConfigFile::clear_keymd5() {
  keymd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientConfigFile::keymd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.KeyMD5)
  return keymd5_.GetNoArena();
}
inline void ClientConfigFile::set_keymd5(const ::std::string& value) {
  
  keymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.KeyMD5)
}
#if LANG_CXX11
inline void ClientConfigFile::set_keymd5(::std::string&& value) {
  
  keymd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ClientConfigFile.KeyMD5)
}
#endif
inline void ClientConfigFile::set_keymd5(const char* value) {
  
  keymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ClientConfigFile.KeyMD5)
}
inline void ClientConfigFile::set_keymd5(const char* value, size_t size) {
  
  keymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ClientConfigFile.KeyMD5)
}
inline ::std::string* ClientConfigFile::mutable_keymd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ClientConfigFile.KeyMD5)
  return keymd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientConfigFile::release_keymd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.ClientConfigFile.KeyMD5)
  
  return keymd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientConfigFile::set_allocated_keymd5(::std::string* keymd5) {
  if (keymd5 != NULL) {
    
  } else {
    
  }
  keymd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keymd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ClientConfigFile.KeyMD5)
}

// uint64 TotalSize = 5;
inline void ClientConfigFile::clear_totalsize() {
  totalsize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientConfigFile::totalsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.TotalSize)
  return totalsize_;
}
inline void ClientConfigFile::set_totalsize(::google::protobuf::uint64 value) {
  
  totalsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.TotalSize)
}

// uint64 RemainSize = 6;
inline void ClientConfigFile::clear_remainsize() {
  remainsize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientConfigFile::remainsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.RemainSize)
  return remainsize_;
}
inline void ClientConfigFile::set_remainsize(::google::protobuf::uint64 value) {
  
  remainsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.RemainSize)
}

// -------------------------------------------------------------------

// ClientConfigFileTable

// repeated .qiuwanli.ClientConfigFile ClientInfo = 1;
inline int ClientConfigFileTable::clientinfo_size() const {
  return clientinfo_.size();
}
inline void ClientConfigFileTable::clear_clientinfo() {
  clientinfo_.Clear();
}
inline const ::qiuwanli::ClientConfigFile& ClientConfigFileTable::clientinfo(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFileTable.ClientInfo)
  return clientinfo_.Get(index);
}
inline ::qiuwanli::ClientConfigFile* ClientConfigFileTable::mutable_clientinfo(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.ClientConfigFileTable.ClientInfo)
  return clientinfo_.Mutable(index);
}
inline ::qiuwanli::ClientConfigFile* ClientConfigFileTable::add_clientinfo() {
  // @@protoc_insertion_point(field_add:qiuwanli.ClientConfigFileTable.ClientInfo)
  return clientinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::ClientConfigFile >*
ClientConfigFileTable::mutable_clientinfo() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.ClientConfigFileTable.ClientInfo)
  return &clientinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::ClientConfigFile >&
ClientConfigFileTable::clientinfo() const {
  // @@protoc_insertion_point(field_list:qiuwanli.ClientConfigFileTable.ClientInfo)
  return clientinfo_;
}

// -------------------------------------------------------------------

// FileInfoList

// string FileSHA512 = 1;
inline void FileInfoList::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfoList::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void FileInfoList::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileSHA512)
}
#if LANG_CXX11
inline void FileInfoList::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.FileSHA512)
}
#endif
inline void FileInfoList::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.FileSHA512)
}
inline void FileInfoList::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.FileSHA512)
}
inline ::std::string* FileInfoList::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfoList::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfoList::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.FileSHA512)
}

// string FileMD5 = 2;
inline void FileInfoList::clear_filemd5() {
  filemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfoList::filemd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileMD5)
  return filemd5_.GetNoArena();
}
inline void FileInfoList::set_filemd5(const ::std::string& value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileMD5)
}
#if LANG_CXX11
inline void FileInfoList::set_filemd5(::std::string&& value) {
  
  filemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.FileMD5)
}
#endif
inline void FileInfoList::set_filemd5(const char* value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.FileMD5)
}
inline void FileInfoList::set_filemd5(const char* value, size_t size) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.FileMD5)
}
inline ::std::string* FileInfoList::mutable_filemd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.FileMD5)
  return filemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfoList::release_filemd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.FileMD5)
  
  return filemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfoList::set_allocated_filemd5(::std::string* filemd5) {
  if (filemd5 != NULL) {
    
  } else {
    
  }
  filemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.FileMD5)
}

// string FileName = 3;
inline void FileInfoList::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfoList::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileName)
  return filename_.GetNoArena();
}
inline void FileInfoList::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileName)
}
#if LANG_CXX11
inline void FileInfoList::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.FileName)
}
#endif
inline void FileInfoList::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.FileName)
}
inline void FileInfoList::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.FileName)
}
inline ::std::string* FileInfoList::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.FileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfoList::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.FileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfoList::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.FileName)
}

// string FileCreateDate = 4;
inline void FileInfoList::clear_filecreatedate() {
  filecreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfoList::filecreatedate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileCreateDate)
  return filecreatedate_.GetNoArena();
}
inline void FileInfoList::set_filecreatedate(const ::std::string& value) {
  
  filecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileCreateDate)
}
#if LANG_CXX11
inline void FileInfoList::set_filecreatedate(::std::string&& value) {
  
  filecreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.FileCreateDate)
}
#endif
inline void FileInfoList::set_filecreatedate(const char* value) {
  
  filecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.FileCreateDate)
}
inline void FileInfoList::set_filecreatedate(const char* value, size_t size) {
  
  filecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.FileCreateDate)
}
inline ::std::string* FileInfoList::mutable_filecreatedate() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.FileCreateDate)
  return filecreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfoList::release_filecreatedate() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.FileCreateDate)
  
  return filecreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfoList::set_allocated_filecreatedate(::std::string* filecreatedate) {
  if (filecreatedate != NULL) {
    
  } else {
    
  }
  filecreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filecreatedate);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.FileCreateDate)
}

// string FileChangeDate = 5;
inline void FileInfoList::clear_filechangedate() {
  filechangedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfoList::filechangedate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileChangeDate)
  return filechangedate_.GetNoArena();
}
inline void FileInfoList::set_filechangedate(const ::std::string& value) {
  
  filechangedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileChangeDate)
}
#if LANG_CXX11
inline void FileInfoList::set_filechangedate(::std::string&& value) {
  
  filechangedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.FileChangeDate)
}
#endif
inline void FileInfoList::set_filechangedate(const char* value) {
  
  filechangedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.FileChangeDate)
}
inline void FileInfoList::set_filechangedate(const char* value, size_t size) {
  
  filechangedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.FileChangeDate)
}
inline ::std::string* FileInfoList::mutable_filechangedate() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.FileChangeDate)
  return filechangedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfoList::release_filechangedate() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.FileChangeDate)
  
  return filechangedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfoList::set_allocated_filechangedate(::std::string* filechangedate) {
  if (filechangedate != NULL) {
    
  } else {
    
  }
  filechangedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filechangedate);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.FileChangeDate)
}

// uint64 FileAllBlock = 6;
inline void FileInfoList::clear_fileallblock() {
  fileallblock_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FileInfoList::fileallblock() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileAllBlock)
  return fileallblock_;
}
inline void FileInfoList::set_fileallblock(::google::protobuf::uint64 value) {
  
  fileallblock_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileAllBlock)
}

// uint64 FileTotalSize = 7;
inline void FileInfoList::clear_filetotalsize() {
  filetotalsize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FileInfoList::filetotalsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileTotalSize)
  return filetotalsize_;
}
inline void FileInfoList::set_filetotalsize(::google::protobuf::uint64 value) {
  
  filetotalsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileTotalSize)
}

// string Tag = 8;
inline void FileInfoList::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfoList::tag() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.Tag)
  return tag_.GetNoArena();
}
inline void FileInfoList::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.Tag)
}
#if LANG_CXX11
inline void FileInfoList::set_tag(::std::string&& value) {
  
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.Tag)
}
#endif
inline void FileInfoList::set_tag(const char* value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.Tag)
}
inline void FileInfoList::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.Tag)
}
inline ::std::string* FileInfoList::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.Tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfoList::release_tag() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.Tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfoList::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.Tag)
}

// -------------------------------------------------------------------

// FileInfoListTable

// repeated .qiuwanli.FileInfoList FileList = 1;
inline int FileInfoListTable::filelist_size() const {
  return filelist_.size();
}
inline void FileInfoListTable::clear_filelist() {
  filelist_.Clear();
}
inline const ::qiuwanli::FileInfoList& FileInfoListTable::filelist(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoListTable.FileList)
  return filelist_.Get(index);
}
inline ::qiuwanli::FileInfoList* FileInfoListTable::mutable_filelist(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoListTable.FileList)
  return filelist_.Mutable(index);
}
inline ::qiuwanli::FileInfoList* FileInfoListTable::add_filelist() {
  // @@protoc_insertion_point(field_add:qiuwanli.FileInfoListTable.FileList)
  return filelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfoList >*
FileInfoListTable::mutable_filelist() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FileInfoListTable.FileList)
  return &filelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfoList >&
FileInfoListTable::filelist() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FileInfoListTable.FileList)
  return filelist_;
}

// -------------------------------------------------------------------

// UserInfo

// string UserID = 1;
inline void UserInfo::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::userid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.UserInfo.UserID)
  return userid_.GetNoArena();
}
inline void UserInfo::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.UserInfo.UserID)
}
#if LANG_CXX11
inline void UserInfo::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.UserInfo.UserID)
}
#endif
inline void UserInfo::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.UserInfo.UserID)
}
inline void UserInfo::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.UserInfo.UserID)
}
inline ::std::string* UserInfo::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.UserInfo.UserID)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_userid() {
  // @@protoc_insertion_point(field_release:qiuwanli.UserInfo.UserID)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.UserInfo.UserID)
}

// string UserPS = 2;
inline void UserInfo::clear_userps() {
  userps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::userps() const {
  // @@protoc_insertion_point(field_get:qiuwanli.UserInfo.UserPS)
  return userps_.GetNoArena();
}
inline void UserInfo::set_userps(const ::std::string& value) {
  
  userps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.UserInfo.UserPS)
}
#if LANG_CXX11
inline void UserInfo::set_userps(::std::string&& value) {
  
  userps_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.UserInfo.UserPS)
}
#endif
inline void UserInfo::set_userps(const char* value) {
  
  userps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.UserInfo.UserPS)
}
inline void UserInfo::set_userps(const char* value, size_t size) {
  
  userps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.UserInfo.UserPS)
}
inline ::std::string* UserInfo::mutable_userps() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.UserInfo.UserPS)
  return userps_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_userps() {
  // @@protoc_insertion_point(field_release:qiuwanli.UserInfo.UserPS)
  
  return userps_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_userps(::std::string* userps) {
  if (userps != NULL) {
    
  } else {
    
  }
  userps_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userps);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.UserInfo.UserPS)
}

// repeated string FileSHA512 = 3;
inline int UserInfo::filesha512_size() const {
  return filesha512_.size();
}
inline void UserInfo::clear_filesha512() {
  filesha512_.Clear();
}
inline const ::std::string& UserInfo::filesha512(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.UserInfo.FileSHA512)
  return filesha512_.Get(index);
}
inline ::std::string* UserInfo::mutable_filesha512(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.UserInfo.FileSHA512)
  return filesha512_.Mutable(index);
}
inline void UserInfo::set_filesha512(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:qiuwanli.UserInfo.FileSHA512)
  filesha512_.Mutable(index)->assign(value);
}
inline void UserInfo::set_filesha512(int index, const char* value) {
  filesha512_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:qiuwanli.UserInfo.FileSHA512)
}
inline void UserInfo::set_filesha512(int index, const char* value, size_t size) {
  filesha512_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.UserInfo.FileSHA512)
}
inline ::std::string* UserInfo::add_filesha512() {
  // @@protoc_insertion_point(field_add_mutable:qiuwanli.UserInfo.FileSHA512)
  return filesha512_.Add();
}
inline void UserInfo::add_filesha512(const ::std::string& value) {
  filesha512_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:qiuwanli.UserInfo.FileSHA512)
}
inline void UserInfo::add_filesha512(const char* value) {
  filesha512_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:qiuwanli.UserInfo.FileSHA512)
}
inline void UserInfo::add_filesha512(const char* value, size_t size) {
  filesha512_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:qiuwanli.UserInfo.FileSHA512)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
UserInfo::filesha512() const {
  // @@protoc_insertion_point(field_list:qiuwanli.UserInfo.FileSHA512)
  return filesha512_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
UserInfo::mutable_filesha512() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.UserInfo.FileSHA512)
  return &filesha512_;
}

// -------------------------------------------------------------------

// UserInfoTable

// repeated .qiuwanli.UserInfo User = 1;
inline int UserInfoTable::user_size() const {
  return user_.size();
}
inline void UserInfoTable::clear_user() {
  user_.Clear();
}
inline const ::qiuwanli::UserInfo& UserInfoTable::user(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.UserInfoTable.User)
  return user_.Get(index);
}
inline ::qiuwanli::UserInfo* UserInfoTable::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.UserInfoTable.User)
  return user_.Mutable(index);
}
inline ::qiuwanli::UserInfo* UserInfoTable::add_user() {
  // @@protoc_insertion_point(field_add:qiuwanli.UserInfoTable.User)
  return user_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::UserInfo >*
UserInfoTable::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.UserInfoTable.User)
  return &user_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::UserInfo >&
UserInfoTable::user() const {
  // @@protoc_insertion_point(field_list:qiuwanli.UserInfoTable.User)
  return user_;
}

// -------------------------------------------------------------------

// FileList

// string FileName = 1;
inline void FileList::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileList::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileList.FileName)
  return filename_.GetNoArena();
}
inline void FileList::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileList.FileName)
}
#if LANG_CXX11
inline void FileList::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileList.FileName)
}
#endif
inline void FileList::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileList.FileName)
}
inline void FileList::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileList.FileName)
}
inline ::std::string* FileList::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileList.FileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileList::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileList.FileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileList::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileList.FileName)
}

// uint64 FileSize = 2;
inline void FileList::clear_filesize() {
  filesize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FileList::filesize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileList.FileSize)
  return filesize_;
}
inline void FileList::set_filesize(::google::protobuf::uint64 value) {
  
  filesize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileList.FileSize)
}

// string FileSHA512 = 3;
inline void FileList::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileList::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileList.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void FileList::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileList.FileSHA512)
}
#if LANG_CXX11
inline void FileList::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileList.FileSHA512)
}
#endif
inline void FileList::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileList.FileSHA512)
}
inline void FileList::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileList.FileSHA512)
}
inline ::std::string* FileList::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileList.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileList::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileList.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileList::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileList.FileSHA512)
}

// string FileStyle = 4;
inline void FileList::clear_filestyle() {
  filestyle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileList::filestyle() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileList.FileStyle)
  return filestyle_.GetNoArena();
}
inline void FileList::set_filestyle(const ::std::string& value) {
  
  filestyle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileList.FileStyle)
}
#if LANG_CXX11
inline void FileList::set_filestyle(::std::string&& value) {
  
  filestyle_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileList.FileStyle)
}
#endif
inline void FileList::set_filestyle(const char* value) {
  
  filestyle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileList.FileStyle)
}
inline void FileList::set_filestyle(const char* value, size_t size) {
  
  filestyle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileList.FileStyle)
}
inline ::std::string* FileList::mutable_filestyle() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileList.FileStyle)
  return filestyle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileList::release_filestyle() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileList.FileStyle)
  
  return filestyle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileList::set_allocated_filestyle(::std::string* filestyle) {
  if (filestyle != NULL) {
    
  } else {
    
  }
  filestyle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filestyle);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileList.FileStyle)
}

// -------------------------------------------------------------------

// FileListTable

// repeated .qiuwanli.FileList File = 1;
inline int FileListTable::file_size() const {
  return file_.size();
}
inline void FileListTable::clear_file() {
  file_.Clear();
}
inline const ::qiuwanli::FileList& FileListTable::file(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileListTable.File)
  return file_.Get(index);
}
inline ::qiuwanli::FileList* FileListTable::mutable_file(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileListTable.File)
  return file_.Mutable(index);
}
inline ::qiuwanli::FileList* FileListTable::add_file() {
  // @@protoc_insertion_point(field_add:qiuwanli.FileListTable.File)
  return file_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileList >*
FileListTable::mutable_file() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FileListTable.File)
  return &file_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileList >&
FileListTable::file() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FileListTable.File)
  return file_;
}

// -------------------------------------------------------------------

// FileList4Down

// string FileSHA512 = 1;
inline void FileList4Down::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileList4Down::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileList4Down.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void FileList4Down::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileList4Down.FileSHA512)
}
#if LANG_CXX11
inline void FileList4Down::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileList4Down.FileSHA512)
}
#endif
inline void FileList4Down::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileList4Down.FileSHA512)
}
inline void FileList4Down::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileList4Down.FileSHA512)
}
inline ::std::string* FileList4Down::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileList4Down.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileList4Down::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileList4Down.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileList4Down::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileList4Down.FileSHA512)
}

// string FileMD5 = 2;
inline void FileList4Down::clear_filemd5() {
  filemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileList4Down::filemd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileList4Down.FileMD5)
  return filemd5_.GetNoArena();
}
inline void FileList4Down::set_filemd5(const ::std::string& value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileList4Down.FileMD5)
}
#if LANG_CXX11
inline void FileList4Down::set_filemd5(::std::string&& value) {
  
  filemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileList4Down.FileMD5)
}
#endif
inline void FileList4Down::set_filemd5(const char* value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileList4Down.FileMD5)
}
inline void FileList4Down::set_filemd5(const char* value, size_t size) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileList4Down.FileMD5)
}
inline ::std::string* FileList4Down::mutable_filemd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileList4Down.FileMD5)
  return filemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileList4Down::release_filemd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileList4Down.FileMD5)
  
  return filemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileList4Down::set_allocated_filemd5(::std::string* filemd5) {
  if (filemd5 != NULL) {
    
  } else {
    
  }
  filemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileList4Down.FileMD5)
}

// -------------------------------------------------------------------

// FileList4DownTable

// repeated .qiuwanli.FileList4Down FileListForDown = 1;
inline int FileList4DownTable::filelistfordown_size() const {
  return filelistfordown_.size();
}
inline void FileList4DownTable::clear_filelistfordown() {
  filelistfordown_.Clear();
}
inline const ::qiuwanli::FileList4Down& FileList4DownTable::filelistfordown(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileList4DownTable.FileListForDown)
  return filelistfordown_.Get(index);
}
inline ::qiuwanli::FileList4Down* FileList4DownTable::mutable_filelistfordown(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileList4DownTable.FileListForDown)
  return filelistfordown_.Mutable(index);
}
inline ::qiuwanli::FileList4Down* FileList4DownTable::add_filelistfordown() {
  // @@protoc_insertion_point(field_add:qiuwanli.FileList4DownTable.FileListForDown)
  return filelistfordown_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileList4Down >*
FileList4DownTable::mutable_filelistfordown() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FileList4DownTable.FileListForDown)
  return &filelistfordown_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileList4Down >&
FileList4DownTable::filelistfordown() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FileList4DownTable.FileListForDown)
  return filelistfordown_;
}

// -------------------------------------------------------------------

// FileDowningLog

// string filename = 1;
inline void FileDowningLog::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDowningLog::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningLog.filename)
  return filename_.GetNoArena();
}
inline void FileDowningLog::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowningLog.filename)
}
#if LANG_CXX11
inline void FileDowningLog::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowningLog.filename)
}
#endif
inline void FileDowningLog::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowningLog.filename)
}
inline void FileDowningLog::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowningLog.filename)
}
inline ::std::string* FileDowningLog::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningLog.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDowningLog::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowningLog.filename)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDowningLog::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowningLog.filename)
}

// string filesize = 2;
inline void FileDowningLog::clear_filesize() {
  filesize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDowningLog::filesize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningLog.filesize)
  return filesize_.GetNoArena();
}
inline void FileDowningLog::set_filesize(const ::std::string& value) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowningLog.filesize)
}
#if LANG_CXX11
inline void FileDowningLog::set_filesize(::std::string&& value) {
  
  filesize_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowningLog.filesize)
}
#endif
inline void FileDowningLog::set_filesize(const char* value) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowningLog.filesize)
}
inline void FileDowningLog::set_filesize(const char* value, size_t size) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowningLog.filesize)
}
inline ::std::string* FileDowningLog::mutable_filesize() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningLog.filesize)
  return filesize_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDowningLog::release_filesize() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowningLog.filesize)
  
  return filesize_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDowningLog::set_allocated_filesize(::std::string* filesize) {
  if (filesize != NULL) {
    
  } else {
    
  }
  filesize_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesize);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowningLog.filesize)
}

// string downtime = 3;
inline void FileDowningLog::clear_downtime() {
  downtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDowningLog::downtime() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningLog.downtime)
  return downtime_.GetNoArena();
}
inline void FileDowningLog::set_downtime(const ::std::string& value) {
  
  downtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowningLog.downtime)
}
#if LANG_CXX11
inline void FileDowningLog::set_downtime(::std::string&& value) {
  
  downtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowningLog.downtime)
}
#endif
inline void FileDowningLog::set_downtime(const char* value) {
  
  downtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowningLog.downtime)
}
inline void FileDowningLog::set_downtime(const char* value, size_t size) {
  
  downtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowningLog.downtime)
}
inline ::std::string* FileDowningLog::mutable_downtime() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningLog.downtime)
  return downtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDowningLog::release_downtime() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowningLog.downtime)
  
  return downtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDowningLog::set_allocated_downtime(::std::string* downtime) {
  if (downtime != NULL) {
    
  } else {
    
  }
  downtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downtime);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowningLog.downtime)
}

// string Downingstatus = 4;
inline void FileDowningLog::clear_downingstatus() {
  downingstatus_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDowningLog::downingstatus() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningLog.Downingstatus)
  return downingstatus_.GetNoArena();
}
inline void FileDowningLog::set_downingstatus(const ::std::string& value) {
  
  downingstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowningLog.Downingstatus)
}
#if LANG_CXX11
inline void FileDowningLog::set_downingstatus(::std::string&& value) {
  
  downingstatus_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowningLog.Downingstatus)
}
#endif
inline void FileDowningLog::set_downingstatus(const char* value) {
  
  downingstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowningLog.Downingstatus)
}
inline void FileDowningLog::set_downingstatus(const char* value, size_t size) {
  
  downingstatus_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowningLog.Downingstatus)
}
inline ::std::string* FileDowningLog::mutable_downingstatus() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningLog.Downingstatus)
  return downingstatus_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDowningLog::release_downingstatus() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowningLog.Downingstatus)
  
  return downingstatus_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDowningLog::set_allocated_downingstatus(::std::string* downingstatus) {
  if (downingstatus != NULL) {
    
  } else {
    
  }
  downingstatus_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), downingstatus);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowningLog.Downingstatus)
}

// string filesha512 = 5;
inline void FileDowningLog::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDowningLog::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningLog.filesha512)
  return filesha512_.GetNoArena();
}
inline void FileDowningLog::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowningLog.filesha512)
}
#if LANG_CXX11
inline void FileDowningLog::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowningLog.filesha512)
}
#endif
inline void FileDowningLog::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowningLog.filesha512)
}
inline void FileDowningLog::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowningLog.filesha512)
}
inline ::std::string* FileDowningLog::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningLog.filesha512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDowningLog::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowningLog.filesha512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDowningLog::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowningLog.filesha512)
}

// -------------------------------------------------------------------

// FileDowningLogTable

// repeated .qiuwanli.FileDowningLog FileDownLog = 1;
inline int FileDowningLogTable::filedownlog_size() const {
  return filedownlog_.size();
}
inline void FileDowningLogTable::clear_filedownlog() {
  filedownlog_.Clear();
}
inline const ::qiuwanli::FileDowningLog& FileDowningLogTable::filedownlog(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningLogTable.FileDownLog)
  return filedownlog_.Get(index);
}
inline ::qiuwanli::FileDowningLog* FileDowningLogTable::mutable_filedownlog(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningLogTable.FileDownLog)
  return filedownlog_.Mutable(index);
}
inline ::qiuwanli::FileDowningLog* FileDowningLogTable::add_filedownlog() {
  // @@protoc_insertion_point(field_add:qiuwanli.FileDowningLogTable.FileDownLog)
  return filedownlog_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowningLog >*
FileDowningLogTable::mutable_filedownlog() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FileDowningLogTable.FileDownLog)
  return &filedownlog_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowningLog >&
FileDowningLogTable::filedownlog() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FileDowningLogTable.FileDownLog)
  return filedownlog_;
}

// -------------------------------------------------------------------

// FileDowning

// string FileSHA512 = 1;
inline void FileDowning::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDowning::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowning.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void FileDowning::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowning.FileSHA512)
}
#if LANG_CXX11
inline void FileDowning::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowning.FileSHA512)
}
#endif
inline void FileDowning::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowning.FileSHA512)
}
inline void FileDowning::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowning.FileSHA512)
}
inline ::std::string* FileDowning::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowning.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDowning::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowning.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDowning::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowning.FileSHA512)
}

// string FileMD5 = 2;
inline void FileDowning::clear_filemd5() {
  filemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDowning::filemd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowning.FileMD5)
  return filemd5_.GetNoArena();
}
inline void FileDowning::set_filemd5(const ::std::string& value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowning.FileMD5)
}
#if LANG_CXX11
inline void FileDowning::set_filemd5(::std::string&& value) {
  
  filemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowning.FileMD5)
}
#endif
inline void FileDowning::set_filemd5(const char* value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowning.FileMD5)
}
inline void FileDowning::set_filemd5(const char* value, size_t size) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowning.FileMD5)
}
inline ::std::string* FileDowning::mutable_filemd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowning.FileMD5)
  return filemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDowning::release_filemd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowning.FileMD5)
  
  return filemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDowning::set_allocated_filemd5(::std::string* filemd5) {
  if (filemd5 != NULL) {
    
  } else {
    
  }
  filemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowning.FileMD5)
}

// string FileName = 3;
inline void FileDowning::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDowning::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowning.FileName)
  return filename_.GetNoArena();
}
inline void FileDowning::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowning.FileName)
}
#if LANG_CXX11
inline void FileDowning::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowning.FileName)
}
#endif
inline void FileDowning::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowning.FileName)
}
inline void FileDowning::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowning.FileName)
}
inline ::std::string* FileDowning::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowning.FileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDowning::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowning.FileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDowning::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowning.FileName)
}

// string FileDownTime = 4;
inline void FileDowning::clear_filedowntime() {
  filedowntime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDowning::filedowntime() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowning.FileDownTime)
  return filedowntime_.GetNoArena();
}
inline void FileDowning::set_filedowntime(const ::std::string& value) {
  
  filedowntime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowning.FileDownTime)
}
#if LANG_CXX11
inline void FileDowning::set_filedowntime(::std::string&& value) {
  
  filedowntime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowning.FileDownTime)
}
#endif
inline void FileDowning::set_filedowntime(const char* value) {
  
  filedowntime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowning.FileDownTime)
}
inline void FileDowning::set_filedowntime(const char* value, size_t size) {
  
  filedowntime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowning.FileDownTime)
}
inline ::std::string* FileDowning::mutable_filedowntime() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowning.FileDownTime)
  return filedowntime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDowning::release_filedowntime() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowning.FileDownTime)
  
  return filedowntime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDowning::set_allocated_filedowntime(::std::string* filedowntime) {
  if (filedowntime != NULL) {
    
  } else {
    
  }
  filedowntime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filedowntime);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowning.FileDownTime)
}

// uint64 FileDownloadBlockCount = 5;
inline void FileDowning::clear_filedownloadblockcount() {
  filedownloadblockcount_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FileDowning::filedownloadblockcount() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowning.FileDownloadBlockCount)
  return filedownloadblockcount_;
}
inline void FileDowning::set_filedownloadblockcount(::google::protobuf::uint64 value) {
  
  filedownloadblockcount_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowning.FileDownloadBlockCount)
}

// uint64 FileTotalBlockCount = 6;
inline void FileDowning::clear_filetotalblockcount() {
  filetotalblockcount_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FileDowning::filetotalblockcount() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowning.FileTotalBlockCount)
  return filetotalblockcount_;
}
inline void FileDowning::set_filetotalblockcount(::google::protobuf::uint64 value) {
  
  filetotalblockcount_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowning.FileTotalBlockCount)
}

// string FileSize = 7;
inline void FileDowning::clear_filesize() {
  filesize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDowning::filesize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowning.FileSize)
  return filesize_.GetNoArena();
}
inline void FileDowning::set_filesize(const ::std::string& value) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowning.FileSize)
}
#if LANG_CXX11
inline void FileDowning::set_filesize(::std::string&& value) {
  
  filesize_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowning.FileSize)
}
#endif
inline void FileDowning::set_filesize(const char* value) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowning.FileSize)
}
inline void FileDowning::set_filesize(const char* value, size_t size) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowning.FileSize)
}
inline ::std::string* FileDowning::mutable_filesize() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowning.FileSize)
  return filesize_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDowning::release_filesize() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowning.FileSize)
  
  return filesize_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDowning::set_allocated_filesize(::std::string* filesize) {
  if (filesize != NULL) {
    
  } else {
    
  }
  filesize_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesize);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowning.FileSize)
}

// uint32 BlockCount = 8;
inline void FileDowning::clear_blockcount() {
  blockcount_ = 0u;
}
inline ::google::protobuf::uint32 FileDowning::blockcount() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowning.BlockCount)
  return blockcount_;
}
inline void FileDowning::set_blockcount(::google::protobuf::uint32 value) {
  
  blockcount_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowning.BlockCount)
}

// string BitMap = 9;
inline void FileDowning::clear_bitmap() {
  bitmap_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileDowning::bitmap() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowning.BitMap)
  return bitmap_.GetNoArena();
}
inline void FileDowning::set_bitmap(const ::std::string& value) {
  
  bitmap_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileDowning.BitMap)
}
#if LANG_CXX11
inline void FileDowning::set_bitmap(::std::string&& value) {
  
  bitmap_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileDowning.BitMap)
}
#endif
inline void FileDowning::set_bitmap(const char* value) {
  
  bitmap_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileDowning.BitMap)
}
inline void FileDowning::set_bitmap(const char* value, size_t size) {
  
  bitmap_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileDowning.BitMap)
}
inline ::std::string* FileDowning::mutable_bitmap() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowning.BitMap)
  return bitmap_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileDowning::release_bitmap() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileDowning.BitMap)
  
  return bitmap_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileDowning::set_allocated_bitmap(::std::string* bitmap) {
  if (bitmap != NULL) {
    
  } else {
    
  }
  bitmap_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bitmap);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileDowning.BitMap)
}

// -------------------------------------------------------------------

// FileDowningTable

// repeated .qiuwanli.FileDowning FileContinueTransmit = 1;
inline int FileDowningTable::filecontinuetransmit_size() const {
  return filecontinuetransmit_.size();
}
inline void FileDowningTable::clear_filecontinuetransmit() {
  filecontinuetransmit_.Clear();
}
inline const ::qiuwanli::FileDowning& FileDowningTable::filecontinuetransmit(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileDowningTable.FileContinueTransmit)
  return filecontinuetransmit_.Get(index);
}
inline ::qiuwanli::FileDowning* FileDowningTable::mutable_filecontinuetransmit(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileDowningTable.FileContinueTransmit)
  return filecontinuetransmit_.Mutable(index);
}
inline ::qiuwanli::FileDowning* FileDowningTable::add_filecontinuetransmit() {
  // @@protoc_insertion_point(field_add:qiuwanli.FileDowningTable.FileContinueTransmit)
  return filecontinuetransmit_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowning >*
FileDowningTable::mutable_filecontinuetransmit() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FileDowningTable.FileContinueTransmit)
  return &filecontinuetransmit_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileDowning >&
FileDowningTable::filecontinuetransmit() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FileDowningTable.FileContinueTransmit)
  return filecontinuetransmit_;
}

// -------------------------------------------------------------------

// Heart

// string ID = 1;
inline void Heart::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heart::id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Heart.ID)
  return id_.GetNoArena();
}
inline void Heart::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Heart.ID)
}
#if LANG_CXX11
inline void Heart::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Heart.ID)
}
#endif
inline void Heart::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Heart.ID)
}
inline void Heart::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Heart.ID)
}
inline ::std::string* Heart::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Heart.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heart::release_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.Heart.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heart::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Heart.ID)
}

// string RemainSize = 2;
inline void Heart::clear_remainsize() {
  remainsize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heart::remainsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Heart.RemainSize)
  return remainsize_.GetNoArena();
}
inline void Heart::set_remainsize(const ::std::string& value) {
  
  remainsize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Heart.RemainSize)
}
#if LANG_CXX11
inline void Heart::set_remainsize(::std::string&& value) {
  
  remainsize_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Heart.RemainSize)
}
#endif
inline void Heart::set_remainsize(const char* value) {
  
  remainsize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Heart.RemainSize)
}
inline void Heart::set_remainsize(const char* value, size_t size) {
  
  remainsize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Heart.RemainSize)
}
inline ::std::string* Heart::mutable_remainsize() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Heart.RemainSize)
  return remainsize_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heart::release_remainsize() {
  // @@protoc_insertion_point(field_release:qiuwanli.Heart.RemainSize)
  
  return remainsize_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heart::set_allocated_remainsize(::std::string* remainsize) {
  if (remainsize != NULL) {
    
  } else {
    
  }
  remainsize_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remainsize);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Heart.RemainSize)
}

// string TotleSize = 3;
inline void Heart::clear_totlesize() {
  totlesize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heart::totlesize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Heart.TotleSize)
  return totlesize_.GetNoArena();
}
inline void Heart::set_totlesize(const ::std::string& value) {
  
  totlesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Heart.TotleSize)
}
#if LANG_CXX11
inline void Heart::set_totlesize(::std::string&& value) {
  
  totlesize_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Heart.TotleSize)
}
#endif
inline void Heart::set_totlesize(const char* value) {
  
  totlesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Heart.TotleSize)
}
inline void Heart::set_totlesize(const char* value, size_t size) {
  
  totlesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Heart.TotleSize)
}
inline ::std::string* Heart::mutable_totlesize() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Heart.TotleSize)
  return totlesize_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heart::release_totlesize() {
  // @@protoc_insertion_point(field_release:qiuwanli.Heart.TotleSize)
  
  return totlesize_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heart::set_allocated_totlesize(::std::string* totlesize) {
  if (totlesize != NULL) {
    
  } else {
    
  }
  totlesize_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), totlesize);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Heart.TotleSize)
}

// string PrikeyMd5 = 4;
inline void Heart::clear_prikeymd5() {
  prikeymd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heart::prikeymd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Heart.PrikeyMd5)
  return prikeymd5_.GetNoArena();
}
inline void Heart::set_prikeymd5(const ::std::string& value) {
  
  prikeymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Heart.PrikeyMd5)
}
#if LANG_CXX11
inline void Heart::set_prikeymd5(::std::string&& value) {
  
  prikeymd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Heart.PrikeyMd5)
}
#endif
inline void Heart::set_prikeymd5(const char* value) {
  
  prikeymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Heart.PrikeyMd5)
}
inline void Heart::set_prikeymd5(const char* value, size_t size) {
  
  prikeymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Heart.PrikeyMd5)
}
inline ::std::string* Heart::mutable_prikeymd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Heart.PrikeyMd5)
  return prikeymd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heart::release_prikeymd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.Heart.PrikeyMd5)
  
  return prikeymd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heart::set_allocated_prikeymd5(::std::string* prikeymd5) {
  if (prikeymd5 != NULL) {
    
  } else {
    
  }
  prikeymd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prikeymd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Heart.PrikeyMd5)
}

// -------------------------------------------------------------------

// DoSomething

// string Key = 1;
inline void DoSomething::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DoSomething::key() const {
  // @@protoc_insertion_point(field_get:qiuwanli.DoSomething.Key)
  return key_.GetNoArena();
}
inline void DoSomething::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.DoSomething.Key)
}
#if LANG_CXX11
inline void DoSomething::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.DoSomething.Key)
}
#endif
inline void DoSomething::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.DoSomething.Key)
}
inline void DoSomething::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.DoSomething.Key)
}
inline ::std::string* DoSomething::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.DoSomething.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DoSomething::release_key() {
  // @@protoc_insertion_point(field_release:qiuwanli.DoSomething.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DoSomething::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.DoSomething.Key)
}

// string FileSHA512 = 2;
inline void DoSomething::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DoSomething::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.DoSomething.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void DoSomething::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.DoSomething.FileSHA512)
}
#if LANG_CXX11
inline void DoSomething::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.DoSomething.FileSHA512)
}
#endif
inline void DoSomething::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.DoSomething.FileSHA512)
}
inline void DoSomething::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.DoSomething.FileSHA512)
}
inline ::std::string* DoSomething::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.DoSomething.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DoSomething::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.DoSomething.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DoSomething::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.DoSomething.FileSHA512)
}

// -------------------------------------------------------------------

// DoSomethingTable

// repeated .qiuwanli.DoSomething DoSome = 1;
inline int DoSomethingTable::dosome_size() const {
  return dosome_.size();
}
inline void DoSomethingTable::clear_dosome() {
  dosome_.Clear();
}
inline const ::qiuwanli::DoSomething& DoSomethingTable::dosome(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.DoSomethingTable.DoSome)
  return dosome_.Get(index);
}
inline ::qiuwanli::DoSomething* DoSomethingTable::mutable_dosome(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.DoSomethingTable.DoSome)
  return dosome_.Mutable(index);
}
inline ::qiuwanli::DoSomething* DoSomethingTable::add_dosome() {
  // @@protoc_insertion_point(field_add:qiuwanli.DoSomethingTable.DoSome)
  return dosome_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::DoSomething >*
DoSomethingTable::mutable_dosome() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.DoSomethingTable.DoSome)
  return &dosome_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::DoSomething >&
DoSomethingTable::dosome() const {
  // @@protoc_insertion_point(field_list:qiuwanli.DoSomethingTable.DoSome)
  return dosome_;
}

// -------------------------------------------------------------------

// BlockCheck

// uint32 BlockItem = 1;
inline void BlockCheck::clear_blockitem() {
  blockitem_ = 0u;
}
inline ::google::protobuf::uint32 BlockCheck::blockitem() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockCheck.BlockItem)
  return blockitem_;
}
inline void BlockCheck::set_blockitem(::google::protobuf::uint32 value) {
  
  blockitem_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.BlockCheck.BlockItem)
}

// string BlockMD5 = 2;
inline void BlockCheck::clear_blockmd5() {
  blockmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockCheck::blockmd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockCheck.BlockMD5)
  return blockmd5_.GetNoArena();
}
inline void BlockCheck::set_blockmd5(const ::std::string& value) {
  
  blockmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockCheck.BlockMD5)
}
#if LANG_CXX11
inline void BlockCheck::set_blockmd5(::std::string&& value) {
  
  blockmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockCheck.BlockMD5)
}
#endif
inline void BlockCheck::set_blockmd5(const char* value) {
  
  blockmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockCheck.BlockMD5)
}
inline void BlockCheck::set_blockmd5(const char* value, size_t size) {
  
  blockmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockCheck.BlockMD5)
}
inline ::std::string* BlockCheck::mutable_blockmd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockCheck.BlockMD5)
  return blockmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockCheck::release_blockmd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockCheck.BlockMD5)
  
  return blockmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockCheck::set_allocated_blockmd5(::std::string* blockmd5) {
  if (blockmd5 != NULL) {
    
  } else {
    
  }
  blockmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blockmd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockCheck.BlockMD5)
}

// -------------------------------------------------------------------

// BlockListForDownCheck

// string FileSHA512 = 1;
inline void BlockListForDownCheck::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockListForDownCheck::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListForDownCheck.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void BlockListForDownCheck::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockListForDownCheck.FileSHA512)
}
#if LANG_CXX11
inline void BlockListForDownCheck::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockListForDownCheck.FileSHA512)
}
#endif
inline void BlockListForDownCheck::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockListForDownCheck.FileSHA512)
}
inline void BlockListForDownCheck::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockListForDownCheck.FileSHA512)
}
inline ::std::string* BlockListForDownCheck::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListForDownCheck.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockListForDownCheck::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockListForDownCheck.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockListForDownCheck::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockListForDownCheck.FileSHA512)
}

// string SaveServersIP = 2;
inline void BlockListForDownCheck::clear_saveserversip() {
  saveserversip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockListForDownCheck::saveserversip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListForDownCheck.SaveServersIP)
  return saveserversip_.GetNoArena();
}
inline void BlockListForDownCheck::set_saveserversip(const ::std::string& value) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockListForDownCheck.SaveServersIP)
}
#if LANG_CXX11
inline void BlockListForDownCheck::set_saveserversip(::std::string&& value) {
  
  saveserversip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockListForDownCheck.SaveServersIP)
}
#endif
inline void BlockListForDownCheck::set_saveserversip(const char* value) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockListForDownCheck.SaveServersIP)
}
inline void BlockListForDownCheck::set_saveserversip(const char* value, size_t size) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockListForDownCheck.SaveServersIP)
}
inline ::std::string* BlockListForDownCheck::mutable_saveserversip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListForDownCheck.SaveServersIP)
  return saveserversip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockListForDownCheck::release_saveserversip() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockListForDownCheck.SaveServersIP)
  
  return saveserversip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockListForDownCheck::set_allocated_saveserversip(::std::string* saveserversip) {
  if (saveserversip != NULL) {
    
  } else {
    
  }
  saveserversip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), saveserversip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockListForDownCheck.SaveServersIP)
}

// string FileMD5 = 3;
inline void BlockListForDownCheck::clear_filemd5() {
  filemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockListForDownCheck::filemd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListForDownCheck.FileMD5)
  return filemd5_.GetNoArena();
}
inline void BlockListForDownCheck::set_filemd5(const ::std::string& value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockListForDownCheck.FileMD5)
}
#if LANG_CXX11
inline void BlockListForDownCheck::set_filemd5(::std::string&& value) {
  
  filemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockListForDownCheck.FileMD5)
}
#endif
inline void BlockListForDownCheck::set_filemd5(const char* value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockListForDownCheck.FileMD5)
}
inline void BlockListForDownCheck::set_filemd5(const char* value, size_t size) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockListForDownCheck.FileMD5)
}
inline ::std::string* BlockListForDownCheck::mutable_filemd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListForDownCheck.FileMD5)
  return filemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockListForDownCheck::release_filemd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockListForDownCheck.FileMD5)
  
  return filemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockListForDownCheck::set_allocated_filemd5(::std::string* filemd5) {
  if (filemd5 != NULL) {
    
  } else {
    
  }
  filemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockListForDownCheck.FileMD5)
}

// repeated .qiuwanli.BlockCheck Blocks = 4;
inline int BlockListForDownCheck::blocks_size() const {
  return blocks_.size();
}
inline void BlockListForDownCheck::clear_blocks() {
  blocks_.Clear();
}
inline const ::qiuwanli::BlockCheck& BlockListForDownCheck::blocks(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListForDownCheck.Blocks)
  return blocks_.Get(index);
}
inline ::qiuwanli::BlockCheck* BlockListForDownCheck::mutable_blocks(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListForDownCheck.Blocks)
  return blocks_.Mutable(index);
}
inline ::qiuwanli::BlockCheck* BlockListForDownCheck::add_blocks() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockListForDownCheck.Blocks)
  return blocks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockCheck >*
BlockListForDownCheck::mutable_blocks() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockListForDownCheck.Blocks)
  return &blocks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockCheck >&
BlockListForDownCheck::blocks() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockListForDownCheck.Blocks)
  return blocks_;
}

// -------------------------------------------------------------------

// BlockListForDownCheckTable

// repeated .qiuwanli.BlockListForDownCheck BlockListForDown = 1;
inline int BlockListForDownCheckTable::blocklistfordown_size() const {
  return blocklistfordown_.size();
}
inline void BlockListForDownCheckTable::clear_blocklistfordown() {
  blocklistfordown_.Clear();
}
inline const ::qiuwanli::BlockListForDownCheck& BlockListForDownCheckTable::blocklistfordown(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListForDownCheckTable.BlockListForDown)
  return blocklistfordown_.Get(index);
}
inline ::qiuwanli::BlockListForDownCheck* BlockListForDownCheckTable::mutable_blocklistfordown(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListForDownCheckTable.BlockListForDown)
  return blocklistfordown_.Mutable(index);
}
inline ::qiuwanli::BlockListForDownCheck* BlockListForDownCheckTable::add_blocklistfordown() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockListForDownCheckTable.BlockListForDown)
  return blocklistfordown_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockListForDownCheck >*
BlockListForDownCheckTable::mutable_blocklistfordown() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockListForDownCheckTable.BlockListForDown)
  return &blocklistfordown_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockListForDownCheck >&
BlockListForDownCheckTable::blocklistfordown() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockListForDownCheckTable.BlockListForDown)
  return blocklistfordown_;
}

// -------------------------------------------------------------------

// Shared

// string Sha512 = 1;
inline void Shared::clear_sha512() {
  sha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Shared::sha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Shared.Sha512)
  return sha512_.GetNoArena();
}
inline void Shared::set_sha512(const ::std::string& value) {
  
  sha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Shared.Sha512)
}
#if LANG_CXX11
inline void Shared::set_sha512(::std::string&& value) {
  
  sha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Shared.Sha512)
}
#endif
inline void Shared::set_sha512(const char* value) {
  
  sha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Shared.Sha512)
}
inline void Shared::set_sha512(const char* value, size_t size) {
  
  sha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Shared.Sha512)
}
inline ::std::string* Shared::mutable_sha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Shared.Sha512)
  return sha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Shared::release_sha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.Shared.Sha512)
  
  return sha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Shared::set_allocated_sha512(::std::string* sha512) {
  if (sha512 != NULL) {
    
  } else {
    
  }
  sha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Shared.Sha512)
}

// string VerificationCode = 2;
inline void Shared::clear_verificationcode() {
  verificationcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Shared::verificationcode() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Shared.VerificationCode)
  return verificationcode_.GetNoArena();
}
inline void Shared::set_verificationcode(const ::std::string& value) {
  
  verificationcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Shared.VerificationCode)
}
#if LANG_CXX11
inline void Shared::set_verificationcode(::std::string&& value) {
  
  verificationcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Shared.VerificationCode)
}
#endif
inline void Shared::set_verificationcode(const char* value) {
  
  verificationcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Shared.VerificationCode)
}
inline void Shared::set_verificationcode(const char* value, size_t size) {
  
  verificationcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Shared.VerificationCode)
}
inline ::std::string* Shared::mutable_verificationcode() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Shared.VerificationCode)
  return verificationcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Shared::release_verificationcode() {
  // @@protoc_insertion_point(field_release:qiuwanli.Shared.VerificationCode)
  
  return verificationcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Shared::set_allocated_verificationcode(::std::string* verificationcode) {
  if (verificationcode != NULL) {
    
  } else {
    
  }
  verificationcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verificationcode);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Shared.VerificationCode)
}

// string SharedTime = 3;
inline void Shared::clear_sharedtime() {
  sharedtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Shared::sharedtime() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Shared.SharedTime)
  return sharedtime_.GetNoArena();
}
inline void Shared::set_sharedtime(const ::std::string& value) {
  
  sharedtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Shared.SharedTime)
}
#if LANG_CXX11
inline void Shared::set_sharedtime(::std::string&& value) {
  
  sharedtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Shared.SharedTime)
}
#endif
inline void Shared::set_sharedtime(const char* value) {
  
  sharedtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Shared.SharedTime)
}
inline void Shared::set_sharedtime(const char* value, size_t size) {
  
  sharedtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Shared.SharedTime)
}
inline ::std::string* Shared::mutable_sharedtime() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Shared.SharedTime)
  return sharedtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Shared::release_sharedtime() {
  // @@protoc_insertion_point(field_release:qiuwanli.Shared.SharedTime)
  
  return sharedtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Shared::set_allocated_sharedtime(::std::string* sharedtime) {
  if (sharedtime != NULL) {
    
  } else {
    
  }
  sharedtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sharedtime);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Shared.SharedTime)
}

// string FileSize = 4;
inline void Shared::clear_filesize() {
  filesize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Shared::filesize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Shared.FileSize)
  return filesize_.GetNoArena();
}
inline void Shared::set_filesize(const ::std::string& value) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Shared.FileSize)
}
#if LANG_CXX11
inline void Shared::set_filesize(::std::string&& value) {
  
  filesize_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Shared.FileSize)
}
#endif
inline void Shared::set_filesize(const char* value) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Shared.FileSize)
}
inline void Shared::set_filesize(const char* value, size_t size) {
  
  filesize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Shared.FileSize)
}
inline ::std::string* Shared::mutable_filesize() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Shared.FileSize)
  return filesize_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Shared::release_filesize() {
  // @@protoc_insertion_point(field_release:qiuwanli.Shared.FileSize)
  
  return filesize_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Shared::set_allocated_filesize(::std::string* filesize) {
  if (filesize != NULL) {
    
  } else {
    
  }
  filesize_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesize);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Shared.FileSize)
}

// string UserStutas = 5;
inline void Shared::clear_userstutas() {
  userstutas_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Shared::userstutas() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Shared.UserStutas)
  return userstutas_.GetNoArena();
}
inline void Shared::set_userstutas(const ::std::string& value) {
  
  userstutas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Shared.UserStutas)
}
#if LANG_CXX11
inline void Shared::set_userstutas(::std::string&& value) {
  
  userstutas_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Shared.UserStutas)
}
#endif
inline void Shared::set_userstutas(const char* value) {
  
  userstutas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Shared.UserStutas)
}
inline void Shared::set_userstutas(const char* value, size_t size) {
  
  userstutas_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Shared.UserStutas)
}
inline ::std::string* Shared::mutable_userstutas() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Shared.UserStutas)
  return userstutas_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Shared::release_userstutas() {
  // @@protoc_insertion_point(field_release:qiuwanli.Shared.UserStutas)
  
  return userstutas_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Shared::set_allocated_userstutas(::std::string* userstutas) {
  if (userstutas != NULL) {
    
  } else {
    
  }
  userstutas_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userstutas);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Shared.UserStutas)
}

// string UserID = 6;
inline void Shared::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Shared::userid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Shared.UserID)
  return userid_.GetNoArena();
}
inline void Shared::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Shared.UserID)
}
#if LANG_CXX11
inline void Shared::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Shared.UserID)
}
#endif
inline void Shared::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Shared.UserID)
}
inline void Shared::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Shared.UserID)
}
inline ::std::string* Shared::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Shared.UserID)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Shared::release_userid() {
  // @@protoc_insertion_point(field_release:qiuwanli.Shared.UserID)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Shared::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Shared.UserID)
}

// -------------------------------------------------------------------

// SharedTable

// repeated .qiuwanli.Shared SharedInfo = 1;
inline int SharedTable::sharedinfo_size() const {
  return sharedinfo_.size();
}
inline void SharedTable::clear_sharedinfo() {
  sharedinfo_.Clear();
}
inline const ::qiuwanli::Shared& SharedTable::sharedinfo(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.SharedTable.SharedInfo)
  return sharedinfo_.Get(index);
}
inline ::qiuwanli::Shared* SharedTable::mutable_sharedinfo(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.SharedTable.SharedInfo)
  return sharedinfo_.Mutable(index);
}
inline ::qiuwanli::Shared* SharedTable::add_sharedinfo() {
  // @@protoc_insertion_point(field_add:qiuwanli.SharedTable.SharedInfo)
  return sharedinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::Shared >*
SharedTable::mutable_sharedinfo() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.SharedTable.SharedInfo)
  return &sharedinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Shared >&
SharedTable::sharedinfo() const {
  // @@protoc_insertion_point(field_list:qiuwanli.SharedTable.SharedInfo)
  return sharedinfo_;
}

// -------------------------------------------------------------------

// BlockList4Down

// string FileSHA512 = 1;
inline void BlockList4Down::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockList4Down::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockList4Down.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void BlockList4Down::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockList4Down.FileSHA512)
}
#if LANG_CXX11
inline void BlockList4Down::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockList4Down.FileSHA512)
}
#endif
inline void BlockList4Down::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockList4Down.FileSHA512)
}
inline void BlockList4Down::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockList4Down.FileSHA512)
}
inline ::std::string* BlockList4Down::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockList4Down.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockList4Down::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockList4Down.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockList4Down::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockList4Down.FileSHA512)
}

// string BlockNumer = 2;
inline void BlockList4Down::clear_blocknumer() {
  blocknumer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockList4Down::blocknumer() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockList4Down.BlockNumer)
  return blocknumer_.GetNoArena();
}
inline void BlockList4Down::set_blocknumer(const ::std::string& value) {
  
  blocknumer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockList4Down.BlockNumer)
}
#if LANG_CXX11
inline void BlockList4Down::set_blocknumer(::std::string&& value) {
  
  blocknumer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockList4Down.BlockNumer)
}
#endif
inline void BlockList4Down::set_blocknumer(const char* value) {
  
  blocknumer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockList4Down.BlockNumer)
}
inline void BlockList4Down::set_blocknumer(const char* value, size_t size) {
  
  blocknumer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockList4Down.BlockNumer)
}
inline ::std::string* BlockList4Down::mutable_blocknumer() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockList4Down.BlockNumer)
  return blocknumer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockList4Down::release_blocknumer() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockList4Down.BlockNumer)
  
  return blocknumer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockList4Down::set_allocated_blocknumer(::std::string* blocknumer) {
  if (blocknumer != NULL) {
    
  } else {
    
  }
  blocknumer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blocknumer);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockList4Down.BlockNumer)
}

// string BlockMD5 = 3;
inline void BlockList4Down::clear_blockmd5() {
  blockmd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockList4Down::blockmd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockList4Down.BlockMD5)
  return blockmd5_.GetNoArena();
}
inline void BlockList4Down::set_blockmd5(const ::std::string& value) {
  
  blockmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockList4Down.BlockMD5)
}
#if LANG_CXX11
inline void BlockList4Down::set_blockmd5(::std::string&& value) {
  
  blockmd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockList4Down.BlockMD5)
}
#endif
inline void BlockList4Down::set_blockmd5(const char* value) {
  
  blockmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockList4Down.BlockMD5)
}
inline void BlockList4Down::set_blockmd5(const char* value, size_t size) {
  
  blockmd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockList4Down.BlockMD5)
}
inline ::std::string* BlockList4Down::mutable_blockmd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockList4Down.BlockMD5)
  return blockmd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockList4Down::release_blockmd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockList4Down.BlockMD5)
  
  return blockmd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockList4Down::set_allocated_blockmd5(::std::string* blockmd5) {
  if (blockmd5 != NULL) {
    
  } else {
    
  }
  blockmd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blockmd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockList4Down.BlockMD5)
}

// string SaveServersIP = 4;
inline void BlockList4Down::clear_saveserversip() {
  saveserversip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockList4Down::saveserversip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockList4Down.SaveServersIP)
  return saveserversip_.GetNoArena();
}
inline void BlockList4Down::set_saveserversip(const ::std::string& value) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockList4Down.SaveServersIP)
}
#if LANG_CXX11
inline void BlockList4Down::set_saveserversip(::std::string&& value) {
  
  saveserversip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockList4Down.SaveServersIP)
}
#endif
inline void BlockList4Down::set_saveserversip(const char* value) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockList4Down.SaveServersIP)
}
inline void BlockList4Down::set_saveserversip(const char* value, size_t size) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockList4Down.SaveServersIP)
}
inline ::std::string* BlockList4Down::mutable_saveserversip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockList4Down.SaveServersIP)
  return saveserversip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockList4Down::release_saveserversip() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockList4Down.SaveServersIP)
  
  return saveserversip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockList4Down::set_allocated_saveserversip(::std::string* saveserversip) {
  if (saveserversip != NULL) {
    
  } else {
    
  }
  saveserversip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), saveserversip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockList4Down.SaveServersIP)
}

// -------------------------------------------------------------------

// BlockList4DownTable

// repeated .qiuwanli.BlockList4Down BlockListForDown = 1;
inline int BlockList4DownTable::blocklistfordown_size() const {
  return blocklistfordown_.size();
}
inline void BlockList4DownTable::clear_blocklistfordown() {
  blocklistfordown_.Clear();
}
inline const ::qiuwanli::BlockList4Down& BlockList4DownTable::blocklistfordown(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockList4DownTable.BlockListForDown)
  return blocklistfordown_.Get(index);
}
inline ::qiuwanli::BlockList4Down* BlockList4DownTable::mutable_blocklistfordown(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockList4DownTable.BlockListForDown)
  return blocklistfordown_.Mutable(index);
}
inline ::qiuwanli::BlockList4Down* BlockList4DownTable::add_blocklistfordown() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockList4DownTable.BlockListForDown)
  return blocklistfordown_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockList4Down >*
BlockList4DownTable::mutable_blocklistfordown() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockList4DownTable.BlockListForDown)
  return &blocklistfordown_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockList4Down >&
BlockList4DownTable::blocklistfordown() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockList4DownTable.BlockListForDown)
  return blocklistfordown_;
}

// -------------------------------------------------------------------

// Logs

// string user_id = 1;
inline void Logs::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.user_id)
  return user_id_.GetNoArena();
}
inline void Logs::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.user_id)
}
#if LANG_CXX11
inline void Logs::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.user_id)
}
#endif
inline void Logs::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.user_id)
}
inline void Logs::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.user_id)
}
inline ::std::string* Logs::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.user_id)
}

// uint64 log_date = 2;
inline void Logs::clear_log_date() {
  log_date_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Logs::log_date() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_date)
  return log_date_;
}
inline void Logs::set_log_date(::google::protobuf::uint64 value) {
  
  log_date_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_date)
}

// string log_info = 3;
inline void Logs::clear_log_info() {
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::log_info() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_info)
  return log_info_.GetNoArena();
}
inline void Logs::set_log_info(const ::std::string& value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_info)
}
#if LANG_CXX11
inline void Logs::set_log_info(::std::string&& value) {
  
  log_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_info)
}
#endif
inline void Logs::set_log_info(const char* value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_info)
}
inline void Logs::set_log_info(const char* value, size_t size) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_info)
}
inline ::std::string* Logs::mutable_log_info() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_info)
  return log_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_log_info() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_info)
  
  return log_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_log_info(::std::string* log_info) {
  if (log_info != NULL) {
    
  } else {
    
  }
  log_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_info);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_info)
}

// bytes log_type = 4;
inline void Logs::clear_log_type() {
  log_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::log_type() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_type)
  return log_type_.GetNoArena();
}
inline void Logs::set_log_type(const ::std::string& value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_type)
}
#if LANG_CXX11
inline void Logs::set_log_type(::std::string&& value) {
  
  log_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_type)
}
#endif
inline void Logs::set_log_type(const char* value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_type)
}
inline void Logs::set_log_type(const void* value, size_t size) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_type)
}
inline ::std::string* Logs::mutable_log_type() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_type)
  return log_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_log_type() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_type)
  
  return log_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_log_type(::std::string* log_type) {
  if (log_type != NULL) {
    
  } else {
    
  }
  log_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_type);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_type)
}

// string user_client_UUID = 5;
inline void Logs::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
inline void Logs::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.user_client_UUID)
}
#if LANG_CXX11
inline void Logs::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.user_client_UUID)
}
#endif
inline void Logs::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.user_client_UUID)
}
inline void Logs::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.user_client_UUID)
}
inline ::std::string* Logs::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.user_client_UUID)
}

// -------------------------------------------------------------------

// LogsTable

// string logdate = 1;
inline void LogsTable::clear_logdate() {
  logdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogsTable::logdate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.LogsTable.logdate)
  return logdate_.GetNoArena();
}
inline void LogsTable::set_logdate(const ::std::string& value) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.LogsTable.logdate)
}
#if LANG_CXX11
inline void LogsTable::set_logdate(::std::string&& value) {
  
  logdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.LogsTable.logdate)
}
#endif
inline void LogsTable::set_logdate(const char* value) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.LogsTable.logdate)
}
inline void LogsTable::set_logdate(const char* value, size_t size) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.LogsTable.logdate)
}
inline ::std::string* LogsTable::mutable_logdate() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.LogsTable.logdate)
  return logdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogsTable::release_logdate() {
  // @@protoc_insertion_point(field_release:qiuwanli.LogsTable.logdate)
  
  return logdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogsTable::set_allocated_logdate(::std::string* logdate) {
  if (logdate != NULL) {
    
  } else {
    
  }
  logdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logdate);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.LogsTable.logdate)
}

// repeated .qiuwanli.Logs log = 2;
inline int LogsTable::log_size() const {
  return log_.size();
}
inline void LogsTable::clear_log() {
  log_.Clear();
}
inline const ::qiuwanli::Logs& LogsTable::log(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.LogsTable.log)
  return log_.Get(index);
}
inline ::qiuwanli::Logs* LogsTable::mutable_log(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.LogsTable.log)
  return log_.Mutable(index);
}
inline ::qiuwanli::Logs* LogsTable::add_log() {
  // @@protoc_insertion_point(field_add:qiuwanli.LogsTable.log)
  return log_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >*
LogsTable::mutable_log() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.LogsTable.log)
  return &log_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >&
LogsTable::log() const {
  // @@protoc_insertion_point(field_list:qiuwanli.LogsTable.log)
  return log_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace qiuwanli

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_PublicStruct_2eproto__INCLUDED
