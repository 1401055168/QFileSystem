// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: date.proto
#include "stdafx.h"
#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "date.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace qiuwanli {
class LogsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Logs> {
} _Logs_default_instance_;
class AllLogDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AllLog> {
} _AllLog_default_instance_;
class File2CilentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<File2Cilent> {
} _File2Cilent_default_instance_;
class File2ClientServersDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<File2ClientServers> {
} _File2ClientServers_default_instance_;
class ID2IPDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ID2IP> {
} _ID2IP_default_instance_;
class ID2IPTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ID2IPTable> {
} _ID2IPTable_default_instance_;
class FilesSharedLogDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FilesSharedLog> {
} _FilesSharedLog_default_instance_;
class FileSharedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FileShared> {
} _FileShared_default_instance_;

namespace protobuf_date_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[8];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, log_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, log_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, log_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, user_client_uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllLog, logdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllLog, log_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File2Cilent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File2Cilent, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File2Cilent, sha512_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File2Cilent, cilentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File2Cilent, createdate_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File2ClientServers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File2ClientServers, client_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID2IP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID2IP, cilentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID2IP, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID2IP, prikey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID2IP, keymd5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID2IP, others_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID2IPTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID2IPTable, ip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilesSharedLog, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilesSharedLog, sha512_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilesSharedLog, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FilesSharedLog, sharedtime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileShared, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileShared, sharedlog_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Logs)},
  { 9, -1, sizeof(AllLog)},
  { 15, -1, sizeof(File2Cilent)},
  { 23, -1, sizeof(File2ClientServers)},
  { 28, -1, sizeof(ID2IP)},
  { 37, -1, sizeof(ID2IPTable)},
  { 42, -1, sizeof(FilesSharedLog)},
  { 49, -1, sizeof(FileShared)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Logs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_File2Cilent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_File2ClientServers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ID2IP_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ID2IPTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FilesSharedLog_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FileShared_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "date.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace

void TableStruct::Shutdown() {
  _Logs_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _AllLog_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _File2Cilent_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _File2ClientServers_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _ID2IP_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _ID2IPTable_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _FilesSharedLog_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _FileShared_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Logs_default_instance_.DefaultConstruct();
  _AllLog_default_instance_.DefaultConstruct();
  _File2Cilent_default_instance_.DefaultConstruct();
  _File2ClientServers_default_instance_.DefaultConstruct();
  _ID2IP_default_instance_.DefaultConstruct();
  _ID2IPTable_default_instance_.DefaultConstruct();
  _FilesSharedLog_default_instance_.DefaultConstruct();
  _FileShared_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\ndate.proto\022\010qiuwanli\"g\n\004Logs\022\017\n\007user_i"
      "d\030\001 \001(\t\022\020\n\010log_date\030\002 \001(\t\022\020\n\010log_info\030\003 "
      "\001(\t\022\020\n\010log_type\030\004 \001(\014\022\030\n\020user_client_UUI"
      "D\030\005 \001(\t\"6\n\006AllLog\022\017\n\007logdate\030\001 \001(\t\022\033\n\003lo"
      "g\030\002 \003(\0132\016.qiuwanli.Logs\"U\n\013File2Cilent\022\020"
      "\n\010FileName\030\001 \001(\t\022\016\n\006SHA512\030\002 \001(\t\022\020\n\010Cile"
      "ntID\030\003 \001(\t\022\022\n\nCreateDate\030\004 \001(\t\";\n\022File2C"
      "lientServers\022%\n\006client\030\001 \003(\0132\025.qiuwanli."
      "File2Cilent\"U\n\005ID2IP\022\020\n\010CilentID\030\001 \001(\t\022\n"
      "\n\002IP\030\002 \001(\t\022\016\n\006PriKey\030\003 \001(\t\022\016\n\006KeyMD5\030\004 \001"
      "(\t\022\016\n\006Others\030\005 \001(\t\")\n\nID2IPTable\022\033\n\002ip\030\001"
      " \003(\0132\017.qiuwanli.ID2IP\"A\n\016FilesSharedLog\022"
      "\016\n\006Sha512\030\001 \001(\t\022\013\n\003Key\030\002 \001(\t\022\022\n\nSharedTi"
      "me\030\003 \001(\t\"9\n\nFileShared\022+\n\tsharedlog\030\001 \003("
      "\0132\030.qiuwanli.FilesSharedLogb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 595);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "date.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_date_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Logs::kUserIdFieldNumber;
const int Logs::kLogDateFieldNumber;
const int Logs::kLogInfoFieldNumber;
const int Logs::kLogTypeFieldNumber;
const int Logs::kUserClientUUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Logs::Logs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_date_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.Logs)
}
Logs::Logs(const Logs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  log_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_date().size() > 0) {
    log_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_date_);
  }
  log_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_info().size() > 0) {
    log_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_info_);
  }
  log_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_type().size() > 0) {
    log_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_type_);
  }
  user_client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_client_uuid().size() > 0) {
    user_client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_uuid_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.Logs)
}

void Logs::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Logs::~Logs() {
  // @@protoc_insertion_point(destructor:qiuwanli.Logs)
  SharedDtor();
}

void Logs::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Logs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Logs::descriptor() {
  protobuf_date_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_date_2eproto::file_level_metadata[0].descriptor;
}

const Logs& Logs::default_instance() {
  protobuf_date_2eproto::InitDefaults();
  return *internal_default_instance();
}

Logs* Logs::New(::google::protobuf::Arena* arena) const {
  Logs* n = new Logs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Logs::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.Logs)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Logs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.Logs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Logs.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string log_date = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_date().data(), this->log_date().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Logs.log_date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string log_info = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_info().data(), this->log_info().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Logs.log_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes log_type = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_log_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_client_UUID = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_client_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_client_uuid().data(), this->user_client_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Logs.user_client_UUID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.Logs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.Logs)
  return false;
#undef DO_
}

void Logs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.Logs)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // string log_date = 2;
  if (this->log_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_date().data(), this->log_date().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.log_date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->log_date(), output);
  }

  // string log_info = 3;
  if (this->log_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_info().data(), this->log_info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.log_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->log_info(), output);
  }

  // bytes log_type = 4;
  if (this->log_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->log_type(), output);
  }

  // string user_client_UUID = 5;
  if (this->user_client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_client_uuid().data(), this->user_client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.user_client_UUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->user_client_uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.Logs)
}

::google::protobuf::uint8* Logs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.Logs)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // string log_date = 2;
  if (this->log_date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_date().data(), this->log_date().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.log_date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->log_date(), target);
  }

  // string log_info = 3;
  if (this->log_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_info().data(), this->log_info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.log_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->log_info(), target);
  }

  // bytes log_type = 4;
  if (this->log_type().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->log_type(), target);
  }

  // string user_client_UUID = 5;
  if (this->user_client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_client_uuid().data(), this->user_client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.user_client_UUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->user_client_uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.Logs)
  return target;
}

size_t Logs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.Logs)
  size_t total_size = 0;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string log_date = 2;
  if (this->log_date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_date());
  }

  // string log_info = 3;
  if (this->log_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_info());
  }

  // bytes log_type = 4;
  if (this->log_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->log_type());
  }

  // string user_client_UUID = 5;
  if (this->user_client_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_client_uuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Logs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.Logs)
  GOOGLE_DCHECK_NE(&from, this);
  const Logs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Logs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.Logs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.Logs)
    MergeFrom(*source);
  }
}

void Logs::MergeFrom(const Logs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.Logs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.log_date().size() > 0) {

    log_date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_date_);
  }
  if (from.log_info().size() > 0) {

    log_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_info_);
  }
  if (from.log_type().size() > 0) {

    log_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_type_);
  }
  if (from.user_client_uuid().size() > 0) {

    user_client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_uuid_);
  }
}

void Logs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.Logs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Logs::CopyFrom(const Logs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.Logs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Logs::IsInitialized() const {
  return true;
}

void Logs::Swap(Logs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Logs::InternalSwap(Logs* other) {
  user_id_.Swap(&other->user_id_);
  log_date_.Swap(&other->log_date_);
  log_info_.Swap(&other->log_info_);
  log_type_.Swap(&other->log_type_);
  user_client_uuid_.Swap(&other->user_client_uuid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Logs::GetMetadata() const {
  protobuf_date_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_date_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Logs

// string user_id = 1;
void Logs::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Logs::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.user_id)
  return user_id_.GetNoArena();
}
void Logs::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.user_id)
}
#if LANG_CXX11
void Logs::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.user_id)
}
#endif
void Logs::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.user_id)
}
void Logs::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.user_id)
}
::std::string* Logs::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Logs::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Logs::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.user_id)
}

// string log_date = 2;
void Logs::clear_log_date() {
  log_date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Logs::log_date() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_date)
  return log_date_.GetNoArena();
}
void Logs::set_log_date(const ::std::string& value) {
  
  log_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_date)
}
#if LANG_CXX11
void Logs::set_log_date(::std::string&& value) {
  
  log_date_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_date)
}
#endif
void Logs::set_log_date(const char* value) {
  
  log_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_date)
}
void Logs::set_log_date(const char* value, size_t size) {
  
  log_date_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_date)
}
::std::string* Logs::mutable_log_date() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_date)
  return log_date_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Logs::release_log_date() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_date)
  
  return log_date_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Logs::set_allocated_log_date(::std::string* log_date) {
  if (log_date != NULL) {
    
  } else {
    
  }
  log_date_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_date);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_date)
}

// string log_info = 3;
void Logs::clear_log_info() {
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Logs::log_info() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_info)
  return log_info_.GetNoArena();
}
void Logs::set_log_info(const ::std::string& value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_info)
}
#if LANG_CXX11
void Logs::set_log_info(::std::string&& value) {
  
  log_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_info)
}
#endif
void Logs::set_log_info(const char* value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_info)
}
void Logs::set_log_info(const char* value, size_t size) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_info)
}
::std::string* Logs::mutable_log_info() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_info)
  return log_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Logs::release_log_info() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_info)
  
  return log_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Logs::set_allocated_log_info(::std::string* log_info) {
  if (log_info != NULL) {
    
  } else {
    
  }
  log_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_info);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_info)
}

// bytes log_type = 4;
void Logs::clear_log_type() {
  log_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Logs::log_type() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_type)
  return log_type_.GetNoArena();
}
void Logs::set_log_type(const ::std::string& value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_type)
}
#if LANG_CXX11
void Logs::set_log_type(::std::string&& value) {
  
  log_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_type)
}
#endif
void Logs::set_log_type(const char* value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_type)
}
void Logs::set_log_type(const void* value, size_t size) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_type)
}
::std::string* Logs::mutable_log_type() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_type)
  return log_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Logs::release_log_type() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_type)
  
  return log_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Logs::set_allocated_log_type(::std::string* log_type) {
  if (log_type != NULL) {
    
  } else {
    
  }
  log_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_type);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_type)
}

// string user_client_UUID = 5;
void Logs::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Logs::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
void Logs::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.user_client_UUID)
}
#if LANG_CXX11
void Logs::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.user_client_UUID)
}
#endif
void Logs::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.user_client_UUID)
}
void Logs::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.user_client_UUID)
}
::std::string* Logs::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Logs::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Logs::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.user_client_UUID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllLog::kLogdateFieldNumber;
const int AllLog::kLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllLog::AllLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_date_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.AllLog)
}
AllLog::AllLog(const AllLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      log_(from.log_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  logdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logdate().size() > 0) {
    logdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logdate_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.AllLog)
}

void AllLog::SharedCtor() {
  logdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AllLog::~AllLog() {
  // @@protoc_insertion_point(destructor:qiuwanli.AllLog)
  SharedDtor();
}

void AllLog::SharedDtor() {
  logdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AllLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllLog::descriptor() {
  protobuf_date_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_date_2eproto::file_level_metadata[1].descriptor;
}

const AllLog& AllLog::default_instance() {
  protobuf_date_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllLog* AllLog::New(::google::protobuf::Arena* arena) const {
  AllLog* n = new AllLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllLog::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.AllLog)
  log_.Clear();
  logdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AllLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.AllLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string logdate = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logdate().data(), this->logdate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.AllLog.logdate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .qiuwanli.Logs log = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_log()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.AllLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.AllLog)
  return false;
#undef DO_
}

void AllLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.AllLog)
  // string logdate = 1;
  if (this->logdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logdate().data(), this->logdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.AllLog.logdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->logdate(), output);
  }

  // repeated .qiuwanli.Logs log = 2;
  for (unsigned int i = 0, n = this->log_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->log(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.AllLog)
}

::google::protobuf::uint8* AllLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.AllLog)
  // string logdate = 1;
  if (this->logdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logdate().data(), this->logdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.AllLog.logdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->logdate(), target);
  }

  // repeated .qiuwanli.Logs log = 2;
  for (unsigned int i = 0, n = this->log_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->log(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.AllLog)
  return target;
}

size_t AllLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.AllLog)
  size_t total_size = 0;

  // repeated .qiuwanli.Logs log = 2;
  {
    unsigned int count = this->log_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->log(i));
    }
  }

  // string logdate = 1;
  if (this->logdate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logdate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.AllLog)
  GOOGLE_DCHECK_NE(&from, this);
  const AllLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.AllLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.AllLog)
    MergeFrom(*source);
  }
}

void AllLog::MergeFrom(const AllLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.AllLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  log_.MergeFrom(from.log_);
  if (from.logdate().size() > 0) {

    logdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logdate_);
  }
}

void AllLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.AllLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllLog::CopyFrom(const AllLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.AllLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllLog::IsInitialized() const {
  return true;
}

void AllLog::Swap(AllLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllLog::InternalSwap(AllLog* other) {
  log_.UnsafeArenaSwap(&other->log_);
  logdate_.Swap(&other->logdate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllLog::GetMetadata() const {
  protobuf_date_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_date_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllLog

// string logdate = 1;
void AllLog::clear_logdate() {
  logdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AllLog::logdate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.AllLog.logdate)
  return logdate_.GetNoArena();
}
void AllLog::set_logdate(const ::std::string& value) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.AllLog.logdate)
}
#if LANG_CXX11
void AllLog::set_logdate(::std::string&& value) {
  
  logdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.AllLog.logdate)
}
#endif
void AllLog::set_logdate(const char* value) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.AllLog.logdate)
}
void AllLog::set_logdate(const char* value, size_t size) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.AllLog.logdate)
}
::std::string* AllLog::mutable_logdate() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.AllLog.logdate)
  return logdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AllLog::release_logdate() {
  // @@protoc_insertion_point(field_release:qiuwanli.AllLog.logdate)
  
  return logdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AllLog::set_allocated_logdate(::std::string* logdate) {
  if (logdate != NULL) {
    
  } else {
    
  }
  logdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logdate);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.AllLog.logdate)
}

// repeated .qiuwanli.Logs log = 2;
int AllLog::log_size() const {
  return log_.size();
}
void AllLog::clear_log() {
  log_.Clear();
}
const ::qiuwanli::Logs& AllLog::log(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.AllLog.log)
  return log_.Get(index);
}
::qiuwanli::Logs* AllLog::mutable_log(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.AllLog.log)
  return log_.Mutable(index);
}
::qiuwanli::Logs* AllLog::add_log() {
  // @@protoc_insertion_point(field_add:qiuwanli.AllLog.log)
  return log_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >*
AllLog::mutable_log() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.AllLog.log)
  return &log_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >&
AllLog::log() const {
  // @@protoc_insertion_point(field_list:qiuwanli.AllLog.log)
  return log_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int File2Cilent::kFileNameFieldNumber;
const int File2Cilent::kSHA512FieldNumber;
const int File2Cilent::kCilentIDFieldNumber;
const int File2Cilent::kCreateDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

File2Cilent::File2Cilent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_date_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.File2Cilent)
}
File2Cilent::File2Cilent(const File2Cilent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  sha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sha512().size() > 0) {
    sha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha512_);
  }
  cilentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cilentid().size() > 0) {
    cilentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cilentid_);
  }
  createdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.createdate().size() > 0) {
    createdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createdate_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.File2Cilent)
}

void File2Cilent::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cilentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

File2Cilent::~File2Cilent() {
  // @@protoc_insertion_point(destructor:qiuwanli.File2Cilent)
  SharedDtor();
}

void File2Cilent::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha512_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cilentid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void File2Cilent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* File2Cilent::descriptor() {
  protobuf_date_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_date_2eproto::file_level_metadata[2].descriptor;
}

const File2Cilent& File2Cilent::default_instance() {
  protobuf_date_2eproto::InitDefaults();
  return *internal_default_instance();
}

File2Cilent* File2Cilent::New(::google::protobuf::Arena* arena) const {
  File2Cilent* n = new File2Cilent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void File2Cilent::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.File2Cilent)
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cilentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  createdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool File2Cilent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.File2Cilent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string FileName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.File2Cilent.FileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SHA512 = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sha512()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sha512().data(), this->sha512().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.File2Cilent.SHA512"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CilentID = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cilentid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cilentid().data(), this->cilentid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.File2Cilent.CilentID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CreateDate = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_createdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->createdate().data(), this->createdate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.File2Cilent.CreateDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.File2Cilent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.File2Cilent)
  return false;
#undef DO_
}

void File2Cilent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.File2Cilent)
  // string FileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.File2Cilent.FileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // string SHA512 = 2;
  if (this->sha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sha512().data(), this->sha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.File2Cilent.SHA512");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sha512(), output);
  }

  // string CilentID = 3;
  if (this->cilentid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cilentid().data(), this->cilentid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.File2Cilent.CilentID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cilentid(), output);
  }

  // string CreateDate = 4;
  if (this->createdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->createdate().data(), this->createdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.File2Cilent.CreateDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->createdate(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.File2Cilent)
}

::google::protobuf::uint8* File2Cilent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.File2Cilent)
  // string FileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.File2Cilent.FileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // string SHA512 = 2;
  if (this->sha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sha512().data(), this->sha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.File2Cilent.SHA512");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sha512(), target);
  }

  // string CilentID = 3;
  if (this->cilentid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cilentid().data(), this->cilentid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.File2Cilent.CilentID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cilentid(), target);
  }

  // string CreateDate = 4;
  if (this->createdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->createdate().data(), this->createdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.File2Cilent.CreateDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->createdate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.File2Cilent)
  return target;
}

size_t File2Cilent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.File2Cilent)
  size_t total_size = 0;

  // string FileName = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // string SHA512 = 2;
  if (this->sha512().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sha512());
  }

  // string CilentID = 3;
  if (this->cilentid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cilentid());
  }

  // string CreateDate = 4;
  if (this->createdate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->createdate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void File2Cilent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.File2Cilent)
  GOOGLE_DCHECK_NE(&from, this);
  const File2Cilent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const File2Cilent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.File2Cilent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.File2Cilent)
    MergeFrom(*source);
  }
}

void File2Cilent::MergeFrom(const File2Cilent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.File2Cilent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.sha512().size() > 0) {

    sha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha512_);
  }
  if (from.cilentid().size() > 0) {

    cilentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cilentid_);
  }
  if (from.createdate().size() > 0) {

    createdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.createdate_);
  }
}

void File2Cilent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.File2Cilent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void File2Cilent::CopyFrom(const File2Cilent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.File2Cilent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool File2Cilent::IsInitialized() const {
  return true;
}

void File2Cilent::Swap(File2Cilent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void File2Cilent::InternalSwap(File2Cilent* other) {
  filename_.Swap(&other->filename_);
  sha512_.Swap(&other->sha512_);
  cilentid_.Swap(&other->cilentid_);
  createdate_.Swap(&other->createdate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata File2Cilent::GetMetadata() const {
  protobuf_date_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_date_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// File2Cilent

// string FileName = 1;
void File2Cilent::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File2Cilent::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.FileName)
  return filename_.GetNoArena();
}
void File2Cilent::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.FileName)
}
#if LANG_CXX11
void File2Cilent::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.FileName)
}
#endif
void File2Cilent::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.FileName)
}
void File2Cilent::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.FileName)
}
::std::string* File2Cilent::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.FileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File2Cilent::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.FileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File2Cilent::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.FileName)
}

// string SHA512 = 2;
void File2Cilent::clear_sha512() {
  sha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File2Cilent::sha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.SHA512)
  return sha512_.GetNoArena();
}
void File2Cilent::set_sha512(const ::std::string& value) {
  
  sha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.SHA512)
}
#if LANG_CXX11
void File2Cilent::set_sha512(::std::string&& value) {
  
  sha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.SHA512)
}
#endif
void File2Cilent::set_sha512(const char* value) {
  
  sha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.SHA512)
}
void File2Cilent::set_sha512(const char* value, size_t size) {
  
  sha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.SHA512)
}
::std::string* File2Cilent::mutable_sha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.SHA512)
  return sha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File2Cilent::release_sha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.SHA512)
  
  return sha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File2Cilent::set_allocated_sha512(::std::string* sha512) {
  if (sha512 != NULL) {
    
  } else {
    
  }
  sha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.SHA512)
}

// string CilentID = 3;
void File2Cilent::clear_cilentid() {
  cilentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File2Cilent::cilentid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.CilentID)
  return cilentid_.GetNoArena();
}
void File2Cilent::set_cilentid(const ::std::string& value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.CilentID)
}
#if LANG_CXX11
void File2Cilent::set_cilentid(::std::string&& value) {
  
  cilentid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.CilentID)
}
#endif
void File2Cilent::set_cilentid(const char* value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.CilentID)
}
void File2Cilent::set_cilentid(const char* value, size_t size) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.CilentID)
}
::std::string* File2Cilent::mutable_cilentid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.CilentID)
  return cilentid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File2Cilent::release_cilentid() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.CilentID)
  
  return cilentid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File2Cilent::set_allocated_cilentid(::std::string* cilentid) {
  if (cilentid != NULL) {
    
  } else {
    
  }
  cilentid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cilentid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.CilentID)
}

// string CreateDate = 4;
void File2Cilent::clear_createdate() {
  createdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File2Cilent::createdate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.CreateDate)
  return createdate_.GetNoArena();
}
void File2Cilent::set_createdate(const ::std::string& value) {
  
  createdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.CreateDate)
}
#if LANG_CXX11
void File2Cilent::set_createdate(::std::string&& value) {
  
  createdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.CreateDate)
}
#endif
void File2Cilent::set_createdate(const char* value) {
  
  createdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.CreateDate)
}
void File2Cilent::set_createdate(const char* value, size_t size) {
  
  createdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.CreateDate)
}
::std::string* File2Cilent::mutable_createdate() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.CreateDate)
  return createdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File2Cilent::release_createdate() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.CreateDate)
  
  return createdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File2Cilent::set_allocated_createdate(::std::string* createdate) {
  if (createdate != NULL) {
    
  } else {
    
  }
  createdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), createdate);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.CreateDate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int File2ClientServers::kClientFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

File2ClientServers::File2ClientServers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_date_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.File2ClientServers)
}
File2ClientServers::File2ClientServers(const File2ClientServers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      client_(from.client_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.File2ClientServers)
}

void File2ClientServers::SharedCtor() {
  _cached_size_ = 0;
}

File2ClientServers::~File2ClientServers() {
  // @@protoc_insertion_point(destructor:qiuwanli.File2ClientServers)
  SharedDtor();
}

void File2ClientServers::SharedDtor() {
}

void File2ClientServers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* File2ClientServers::descriptor() {
  protobuf_date_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_date_2eproto::file_level_metadata[3].descriptor;
}

const File2ClientServers& File2ClientServers::default_instance() {
  protobuf_date_2eproto::InitDefaults();
  return *internal_default_instance();
}

File2ClientServers* File2ClientServers::New(::google::protobuf::Arena* arena) const {
  File2ClientServers* n = new File2ClientServers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void File2ClientServers::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.File2ClientServers)
  client_.Clear();
}

bool File2ClientServers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.File2ClientServers)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.File2Cilent client = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_client()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.File2ClientServers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.File2ClientServers)
  return false;
#undef DO_
}

void File2ClientServers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.File2ClientServers)
  // repeated .qiuwanli.File2Cilent client = 1;
  for (unsigned int i = 0, n = this->client_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->client(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.File2ClientServers)
}

::google::protobuf::uint8* File2ClientServers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.File2ClientServers)
  // repeated .qiuwanli.File2Cilent client = 1;
  for (unsigned int i = 0, n = this->client_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->client(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.File2ClientServers)
  return target;
}

size_t File2ClientServers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.File2ClientServers)
  size_t total_size = 0;

  // repeated .qiuwanli.File2Cilent client = 1;
  {
    unsigned int count = this->client_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->client(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void File2ClientServers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.File2ClientServers)
  GOOGLE_DCHECK_NE(&from, this);
  const File2ClientServers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const File2ClientServers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.File2ClientServers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.File2ClientServers)
    MergeFrom(*source);
  }
}

void File2ClientServers::MergeFrom(const File2ClientServers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.File2ClientServers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_.MergeFrom(from.client_);
}

void File2ClientServers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.File2ClientServers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void File2ClientServers::CopyFrom(const File2ClientServers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.File2ClientServers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool File2ClientServers::IsInitialized() const {
  return true;
}

void File2ClientServers::Swap(File2ClientServers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void File2ClientServers::InternalSwap(File2ClientServers* other) {
  client_.UnsafeArenaSwap(&other->client_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata File2ClientServers::GetMetadata() const {
  protobuf_date_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_date_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// File2ClientServers

// repeated .qiuwanli.File2Cilent client = 1;
int File2ClientServers::client_size() const {
  return client_.size();
}
void File2ClientServers::clear_client() {
  client_.Clear();
}
const ::qiuwanli::File2Cilent& File2ClientServers::client(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2ClientServers.client)
  return client_.Get(index);
}
::qiuwanli::File2Cilent* File2ClientServers::mutable_client(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2ClientServers.client)
  return client_.Mutable(index);
}
::qiuwanli::File2Cilent* File2ClientServers::add_client() {
  // @@protoc_insertion_point(field_add:qiuwanli.File2ClientServers.client)
  return client_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent >*
File2ClientServers::mutable_client() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.File2ClientServers.client)
  return &client_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent >&
File2ClientServers::client() const {
  // @@protoc_insertion_point(field_list:qiuwanli.File2ClientServers.client)
  return client_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ID2IP::kCilentIDFieldNumber;
const int ID2IP::kIPFieldNumber;
const int ID2IP::kPriKeyFieldNumber;
const int ID2IP::kKeyMD5FieldNumber;
const int ID2IP::kOthersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ID2IP::ID2IP()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_date_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.ID2IP)
}
ID2IP::ID2IP(const ID2IP& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cilentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cilentid().size() > 0) {
    cilentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cilentid_);
  }
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  prikey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prikey().size() > 0) {
    prikey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prikey_);
  }
  keymd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.keymd5().size() > 0) {
    keymd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keymd5_);
  }
  others_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.others().size() > 0) {
    others_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.others_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.ID2IP)
}

void ID2IP::SharedCtor() {
  cilentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prikey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keymd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  others_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ID2IP::~ID2IP() {
  // @@protoc_insertion_point(destructor:qiuwanli.ID2IP)
  SharedDtor();
}

void ID2IP::SharedDtor() {
  cilentid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prikey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keymd5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  others_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ID2IP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ID2IP::descriptor() {
  protobuf_date_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_date_2eproto::file_level_metadata[4].descriptor;
}

const ID2IP& ID2IP::default_instance() {
  protobuf_date_2eproto::InitDefaults();
  return *internal_default_instance();
}

ID2IP* ID2IP::New(::google::protobuf::Arena* arena) const {
  ID2IP* n = new ID2IP;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ID2IP::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.ID2IP)
  cilentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prikey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keymd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  others_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ID2IP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.ID2IP)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string CilentID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cilentid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cilentid().data(), this->cilentid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.ID2IP.CilentID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string IP = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), this->ip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.ID2IP.IP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PriKey = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prikey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prikey().data(), this->prikey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.ID2IP.PriKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string KeyMD5 = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keymd5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keymd5().data(), this->keymd5().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.ID2IP.KeyMD5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Others = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_others()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->others().data(), this->others().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.ID2IP.Others"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.ID2IP)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.ID2IP)
  return false;
#undef DO_
}

void ID2IP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.ID2IP)
  // string CilentID = 1;
  if (this->cilentid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cilentid().data(), this->cilentid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ID2IP.CilentID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cilentid(), output);
  }

  // string IP = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ID2IP.IP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ip(), output);
  }

  // string PriKey = 3;
  if (this->prikey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prikey().data(), this->prikey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ID2IP.PriKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->prikey(), output);
  }

  // string KeyMD5 = 4;
  if (this->keymd5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keymd5().data(), this->keymd5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ID2IP.KeyMD5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->keymd5(), output);
  }

  // string Others = 5;
  if (this->others().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->others().data(), this->others().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ID2IP.Others");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->others(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.ID2IP)
}

::google::protobuf::uint8* ID2IP::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.ID2IP)
  // string CilentID = 1;
  if (this->cilentid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cilentid().data(), this->cilentid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ID2IP.CilentID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cilentid(), target);
  }

  // string IP = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), this->ip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ID2IP.IP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ip(), target);
  }

  // string PriKey = 3;
  if (this->prikey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prikey().data(), this->prikey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ID2IP.PriKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->prikey(), target);
  }

  // string KeyMD5 = 4;
  if (this->keymd5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keymd5().data(), this->keymd5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ID2IP.KeyMD5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->keymd5(), target);
  }

  // string Others = 5;
  if (this->others().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->others().data(), this->others().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ID2IP.Others");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->others(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.ID2IP)
  return target;
}

size_t ID2IP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.ID2IP)
  size_t total_size = 0;

  // string CilentID = 1;
  if (this->cilentid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cilentid());
  }

  // string IP = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // string PriKey = 3;
  if (this->prikey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->prikey());
  }

  // string KeyMD5 = 4;
  if (this->keymd5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keymd5());
  }

  // string Others = 5;
  if (this->others().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->others());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ID2IP::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.ID2IP)
  GOOGLE_DCHECK_NE(&from, this);
  const ID2IP* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ID2IP>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.ID2IP)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.ID2IP)
    MergeFrom(*source);
  }
}

void ID2IP::MergeFrom(const ID2IP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.ID2IP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.cilentid().size() > 0) {

    cilentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cilentid_);
  }
  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.prikey().size() > 0) {

    prikey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prikey_);
  }
  if (from.keymd5().size() > 0) {

    keymd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keymd5_);
  }
  if (from.others().size() > 0) {

    others_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.others_);
  }
}

void ID2IP::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.ID2IP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ID2IP::CopyFrom(const ID2IP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.ID2IP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ID2IP::IsInitialized() const {
  return true;
}

void ID2IP::Swap(ID2IP* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ID2IP::InternalSwap(ID2IP* other) {
  cilentid_.Swap(&other->cilentid_);
  ip_.Swap(&other->ip_);
  prikey_.Swap(&other->prikey_);
  keymd5_.Swap(&other->keymd5_);
  others_.Swap(&other->others_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ID2IP::GetMetadata() const {
  protobuf_date_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_date_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ID2IP

// string CilentID = 1;
void ID2IP::clear_cilentid() {
  cilentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ID2IP::cilentid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ID2IP.CilentID)
  return cilentid_.GetNoArena();
}
void ID2IP::set_cilentid(const ::std::string& value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ID2IP.CilentID)
}
#if LANG_CXX11
void ID2IP::set_cilentid(::std::string&& value) {
  
  cilentid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ID2IP.CilentID)
}
#endif
void ID2IP::set_cilentid(const char* value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ID2IP.CilentID)
}
void ID2IP::set_cilentid(const char* value, size_t size) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ID2IP.CilentID)
}
::std::string* ID2IP::mutable_cilentid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ID2IP.CilentID)
  return cilentid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ID2IP::release_cilentid() {
  // @@protoc_insertion_point(field_release:qiuwanli.ID2IP.CilentID)
  
  return cilentid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ID2IP::set_allocated_cilentid(::std::string* cilentid) {
  if (cilentid != NULL) {
    
  } else {
    
  }
  cilentid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cilentid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ID2IP.CilentID)
}

// string IP = 2;
void ID2IP::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ID2IP::ip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ID2IP.IP)
  return ip_.GetNoArena();
}
void ID2IP::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ID2IP.IP)
}
#if LANG_CXX11
void ID2IP::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ID2IP.IP)
}
#endif
void ID2IP::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ID2IP.IP)
}
void ID2IP::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ID2IP.IP)
}
::std::string* ID2IP::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ID2IP.IP)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ID2IP::release_ip() {
  // @@protoc_insertion_point(field_release:qiuwanli.ID2IP.IP)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ID2IP::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ID2IP.IP)
}

// string PriKey = 3;
void ID2IP::clear_prikey() {
  prikey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ID2IP::prikey() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ID2IP.PriKey)
  return prikey_.GetNoArena();
}
void ID2IP::set_prikey(const ::std::string& value) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ID2IP.PriKey)
}
#if LANG_CXX11
void ID2IP::set_prikey(::std::string&& value) {
  
  prikey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ID2IP.PriKey)
}
#endif
void ID2IP::set_prikey(const char* value) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ID2IP.PriKey)
}
void ID2IP::set_prikey(const char* value, size_t size) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ID2IP.PriKey)
}
::std::string* ID2IP::mutable_prikey() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ID2IP.PriKey)
  return prikey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ID2IP::release_prikey() {
  // @@protoc_insertion_point(field_release:qiuwanli.ID2IP.PriKey)
  
  return prikey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ID2IP::set_allocated_prikey(::std::string* prikey) {
  if (prikey != NULL) {
    
  } else {
    
  }
  prikey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prikey);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ID2IP.PriKey)
}

// string KeyMD5 = 4;
void ID2IP::clear_keymd5() {
  keymd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ID2IP::keymd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ID2IP.KeyMD5)
  return keymd5_.GetNoArena();
}
void ID2IP::set_keymd5(const ::std::string& value) {
  
  keymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ID2IP.KeyMD5)
}
#if LANG_CXX11
void ID2IP::set_keymd5(::std::string&& value) {
  
  keymd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ID2IP.KeyMD5)
}
#endif
void ID2IP::set_keymd5(const char* value) {
  
  keymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ID2IP.KeyMD5)
}
void ID2IP::set_keymd5(const char* value, size_t size) {
  
  keymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ID2IP.KeyMD5)
}
::std::string* ID2IP::mutable_keymd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ID2IP.KeyMD5)
  return keymd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ID2IP::release_keymd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.ID2IP.KeyMD5)
  
  return keymd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ID2IP::set_allocated_keymd5(::std::string* keymd5) {
  if (keymd5 != NULL) {
    
  } else {
    
  }
  keymd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keymd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ID2IP.KeyMD5)
}

// string Others = 5;
void ID2IP::clear_others() {
  others_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ID2IP::others() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ID2IP.Others)
  return others_.GetNoArena();
}
void ID2IP::set_others(const ::std::string& value) {
  
  others_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ID2IP.Others)
}
#if LANG_CXX11
void ID2IP::set_others(::std::string&& value) {
  
  others_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ID2IP.Others)
}
#endif
void ID2IP::set_others(const char* value) {
  
  others_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ID2IP.Others)
}
void ID2IP::set_others(const char* value, size_t size) {
  
  others_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ID2IP.Others)
}
::std::string* ID2IP::mutable_others() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ID2IP.Others)
  return others_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ID2IP::release_others() {
  // @@protoc_insertion_point(field_release:qiuwanli.ID2IP.Others)
  
  return others_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ID2IP::set_allocated_others(::std::string* others) {
  if (others != NULL) {
    
  } else {
    
  }
  others_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), others);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ID2IP.Others)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ID2IPTable::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ID2IPTable::ID2IPTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_date_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.ID2IPTable)
}
ID2IPTable::ID2IPTable(const ID2IPTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ip_(from.ip_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.ID2IPTable)
}

void ID2IPTable::SharedCtor() {
  _cached_size_ = 0;
}

ID2IPTable::~ID2IPTable() {
  // @@protoc_insertion_point(destructor:qiuwanli.ID2IPTable)
  SharedDtor();
}

void ID2IPTable::SharedDtor() {
}

void ID2IPTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ID2IPTable::descriptor() {
  protobuf_date_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_date_2eproto::file_level_metadata[5].descriptor;
}

const ID2IPTable& ID2IPTable::default_instance() {
  protobuf_date_2eproto::InitDefaults();
  return *internal_default_instance();
}

ID2IPTable* ID2IPTable::New(::google::protobuf::Arena* arena) const {
  ID2IPTable* n = new ID2IPTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ID2IPTable::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.ID2IPTable)
  ip_.Clear();
}

bool ID2IPTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.ID2IPTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.ID2IP ip = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ip()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.ID2IPTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.ID2IPTable)
  return false;
#undef DO_
}

void ID2IPTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.ID2IPTable)
  // repeated .qiuwanli.ID2IP ip = 1;
  for (unsigned int i = 0, n = this->ip_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ip(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.ID2IPTable)
}

::google::protobuf::uint8* ID2IPTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.ID2IPTable)
  // repeated .qiuwanli.ID2IP ip = 1;
  for (unsigned int i = 0, n = this->ip_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->ip(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.ID2IPTable)
  return target;
}

size_t ID2IPTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.ID2IPTable)
  size_t total_size = 0;

  // repeated .qiuwanli.ID2IP ip = 1;
  {
    unsigned int count = this->ip_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ip(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ID2IPTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.ID2IPTable)
  GOOGLE_DCHECK_NE(&from, this);
  const ID2IPTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ID2IPTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.ID2IPTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.ID2IPTable)
    MergeFrom(*source);
  }
}

void ID2IPTable::MergeFrom(const ID2IPTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.ID2IPTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.MergeFrom(from.ip_);
}

void ID2IPTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.ID2IPTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ID2IPTable::CopyFrom(const ID2IPTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.ID2IPTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ID2IPTable::IsInitialized() const {
  return true;
}

void ID2IPTable::Swap(ID2IPTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ID2IPTable::InternalSwap(ID2IPTable* other) {
  ip_.UnsafeArenaSwap(&other->ip_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ID2IPTable::GetMetadata() const {
  protobuf_date_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_date_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ID2IPTable

// repeated .qiuwanli.ID2IP ip = 1;
int ID2IPTable::ip_size() const {
  return ip_.size();
}
void ID2IPTable::clear_ip() {
  ip_.Clear();
}
const ::qiuwanli::ID2IP& ID2IPTable::ip(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.ID2IPTable.ip)
  return ip_.Get(index);
}
::qiuwanli::ID2IP* ID2IPTable::mutable_ip(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.ID2IPTable.ip)
  return ip_.Mutable(index);
}
::qiuwanli::ID2IP* ID2IPTable::add_ip() {
  // @@protoc_insertion_point(field_add:qiuwanli.ID2IPTable.ip)
  return ip_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::ID2IP >*
ID2IPTable::mutable_ip() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.ID2IPTable.ip)
  return &ip_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::ID2IP >&
ID2IPTable::ip() const {
  // @@protoc_insertion_point(field_list:qiuwanli.ID2IPTable.ip)
  return ip_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FilesSharedLog::kSha512FieldNumber;
const int FilesSharedLog::kKeyFieldNumber;
const int FilesSharedLog::kSharedTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FilesSharedLog::FilesSharedLog()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_date_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.FilesSharedLog)
}
FilesSharedLog::FilesSharedLog(const FilesSharedLog& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sha512().size() > 0) {
    sha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha512_);
  }
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  sharedtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sharedtime().size() > 0) {
    sharedtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sharedtime_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.FilesSharedLog)
}

void FilesSharedLog::SharedCtor() {
  sha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sharedtime_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

FilesSharedLog::~FilesSharedLog() {
  // @@protoc_insertion_point(destructor:qiuwanli.FilesSharedLog)
  SharedDtor();
}

void FilesSharedLog::SharedDtor() {
  sha512_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sharedtime_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FilesSharedLog::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FilesSharedLog::descriptor() {
  protobuf_date_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_date_2eproto::file_level_metadata[6].descriptor;
}

const FilesSharedLog& FilesSharedLog::default_instance() {
  protobuf_date_2eproto::InitDefaults();
  return *internal_default_instance();
}

FilesSharedLog* FilesSharedLog::New(::google::protobuf::Arena* arena) const {
  FilesSharedLog* n = new FilesSharedLog;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FilesSharedLog::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.FilesSharedLog)
  sha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sharedtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool FilesSharedLog::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.FilesSharedLog)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Sha512 = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sha512()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sha512().data(), this->sha512().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FilesSharedLog.Sha512"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Key = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FilesSharedLog.Key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SharedTime = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sharedtime()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sharedtime().data(), this->sharedtime().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FilesSharedLog.SharedTime"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.FilesSharedLog)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.FilesSharedLog)
  return false;
#undef DO_
}

void FilesSharedLog::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.FilesSharedLog)
  // string Sha512 = 1;
  if (this->sha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sha512().data(), this->sha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FilesSharedLog.Sha512");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sha512(), output);
  }

  // string Key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FilesSharedLog.Key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // string SharedTime = 3;
  if (this->sharedtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sharedtime().data(), this->sharedtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FilesSharedLog.SharedTime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sharedtime(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.FilesSharedLog)
}

::google::protobuf::uint8* FilesSharedLog::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.FilesSharedLog)
  // string Sha512 = 1;
  if (this->sha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sha512().data(), this->sha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FilesSharedLog.Sha512");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sha512(), target);
  }

  // string Key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FilesSharedLog.Key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // string SharedTime = 3;
  if (this->sharedtime().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sharedtime().data(), this->sharedtime().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FilesSharedLog.SharedTime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sharedtime(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.FilesSharedLog)
  return target;
}

size_t FilesSharedLog::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.FilesSharedLog)
  size_t total_size = 0;

  // string Sha512 = 1;
  if (this->sha512().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sha512());
  }

  // string Key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string SharedTime = 3;
  if (this->sharedtime().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sharedtime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FilesSharedLog::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.FilesSharedLog)
  GOOGLE_DCHECK_NE(&from, this);
  const FilesSharedLog* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FilesSharedLog>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.FilesSharedLog)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.FilesSharedLog)
    MergeFrom(*source);
  }
}

void FilesSharedLog::MergeFrom(const FilesSharedLog& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.FilesSharedLog)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.sha512().size() > 0) {

    sha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha512_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.sharedtime().size() > 0) {

    sharedtime_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sharedtime_);
  }
}

void FilesSharedLog::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.FilesSharedLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FilesSharedLog::CopyFrom(const FilesSharedLog& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.FilesSharedLog)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FilesSharedLog::IsInitialized() const {
  return true;
}

void FilesSharedLog::Swap(FilesSharedLog* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FilesSharedLog::InternalSwap(FilesSharedLog* other) {
  sha512_.Swap(&other->sha512_);
  key_.Swap(&other->key_);
  sharedtime_.Swap(&other->sharedtime_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FilesSharedLog::GetMetadata() const {
  protobuf_date_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_date_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FilesSharedLog

// string Sha512 = 1;
void FilesSharedLog::clear_sha512() {
  sha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilesSharedLog::sha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FilesSharedLog.Sha512)
  return sha512_.GetNoArena();
}
void FilesSharedLog::set_sha512(const ::std::string& value) {
  
  sha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FilesSharedLog.Sha512)
}
#if LANG_CXX11
void FilesSharedLog::set_sha512(::std::string&& value) {
  
  sha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FilesSharedLog.Sha512)
}
#endif
void FilesSharedLog::set_sha512(const char* value) {
  
  sha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FilesSharedLog.Sha512)
}
void FilesSharedLog::set_sha512(const char* value, size_t size) {
  
  sha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FilesSharedLog.Sha512)
}
::std::string* FilesSharedLog::mutable_sha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FilesSharedLog.Sha512)
  return sha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilesSharedLog::release_sha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.FilesSharedLog.Sha512)
  
  return sha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilesSharedLog::set_allocated_sha512(::std::string* sha512) {
  if (sha512 != NULL) {
    
  } else {
    
  }
  sha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FilesSharedLog.Sha512)
}

// string Key = 2;
void FilesSharedLog::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilesSharedLog::key() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FilesSharedLog.Key)
  return key_.GetNoArena();
}
void FilesSharedLog::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FilesSharedLog.Key)
}
#if LANG_CXX11
void FilesSharedLog::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FilesSharedLog.Key)
}
#endif
void FilesSharedLog::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FilesSharedLog.Key)
}
void FilesSharedLog::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FilesSharedLog.Key)
}
::std::string* FilesSharedLog::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FilesSharedLog.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilesSharedLog::release_key() {
  // @@protoc_insertion_point(field_release:qiuwanli.FilesSharedLog.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilesSharedLog::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FilesSharedLog.Key)
}

// string SharedTime = 3;
void FilesSharedLog::clear_sharedtime() {
  sharedtime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FilesSharedLog::sharedtime() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FilesSharedLog.SharedTime)
  return sharedtime_.GetNoArena();
}
void FilesSharedLog::set_sharedtime(const ::std::string& value) {
  
  sharedtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FilesSharedLog.SharedTime)
}
#if LANG_CXX11
void FilesSharedLog::set_sharedtime(::std::string&& value) {
  
  sharedtime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FilesSharedLog.SharedTime)
}
#endif
void FilesSharedLog::set_sharedtime(const char* value) {
  
  sharedtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FilesSharedLog.SharedTime)
}
void FilesSharedLog::set_sharedtime(const char* value, size_t size) {
  
  sharedtime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FilesSharedLog.SharedTime)
}
::std::string* FilesSharedLog::mutable_sharedtime() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FilesSharedLog.SharedTime)
  return sharedtime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FilesSharedLog::release_sharedtime() {
  // @@protoc_insertion_point(field_release:qiuwanli.FilesSharedLog.SharedTime)
  
  return sharedtime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FilesSharedLog::set_allocated_sharedtime(::std::string* sharedtime) {
  if (sharedtime != NULL) {
    
  } else {
    
  }
  sharedtime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sharedtime);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FilesSharedLog.SharedTime)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileShared::kSharedlogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileShared::FileShared()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_date_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.FileShared)
}
FileShared::FileShared(const FileShared& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sharedlog_(from.sharedlog_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.FileShared)
}

void FileShared::SharedCtor() {
  _cached_size_ = 0;
}

FileShared::~FileShared() {
  // @@protoc_insertion_point(destructor:qiuwanli.FileShared)
  SharedDtor();
}

void FileShared::SharedDtor() {
}

void FileShared::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileShared::descriptor() {
  protobuf_date_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_date_2eproto::file_level_metadata[7].descriptor;
}

const FileShared& FileShared::default_instance() {
  protobuf_date_2eproto::InitDefaults();
  return *internal_default_instance();
}

FileShared* FileShared::New(::google::protobuf::Arena* arena) const {
  FileShared* n = new FileShared;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileShared::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.FileShared)
  sharedlog_.Clear();
}

bool FileShared::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.FileShared)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.FilesSharedLog sharedlog = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sharedlog()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.FileShared)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.FileShared)
  return false;
#undef DO_
}

void FileShared::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.FileShared)
  // repeated .qiuwanli.FilesSharedLog sharedlog = 1;
  for (unsigned int i = 0, n = this->sharedlog_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sharedlog(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.FileShared)
}

::google::protobuf::uint8* FileShared::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.FileShared)
  // repeated .qiuwanli.FilesSharedLog sharedlog = 1;
  for (unsigned int i = 0, n = this->sharedlog_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->sharedlog(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.FileShared)
  return target;
}

size_t FileShared::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.FileShared)
  size_t total_size = 0;

  // repeated .qiuwanli.FilesSharedLog sharedlog = 1;
  {
    unsigned int count = this->sharedlog_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sharedlog(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileShared::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.FileShared)
  GOOGLE_DCHECK_NE(&from, this);
  const FileShared* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileShared>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.FileShared)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.FileShared)
    MergeFrom(*source);
  }
}

void FileShared::MergeFrom(const FileShared& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.FileShared)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sharedlog_.MergeFrom(from.sharedlog_);
}

void FileShared::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.FileShared)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileShared::CopyFrom(const FileShared& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.FileShared)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileShared::IsInitialized() const {
  return true;
}

void FileShared::Swap(FileShared* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileShared::InternalSwap(FileShared* other) {
  sharedlog_.UnsafeArenaSwap(&other->sharedlog_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileShared::GetMetadata() const {
  protobuf_date_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_date_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileShared

// repeated .qiuwanli.FilesSharedLog sharedlog = 1;
int FileShared::sharedlog_size() const {
  return sharedlog_.size();
}
void FileShared::clear_sharedlog() {
  sharedlog_.Clear();
}
const ::qiuwanli::FilesSharedLog& FileShared::sharedlog(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileShared.sharedlog)
  return sharedlog_.Get(index);
}
::qiuwanli::FilesSharedLog* FileShared::mutable_sharedlog(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileShared.sharedlog)
  return sharedlog_.Mutable(index);
}
::qiuwanli::FilesSharedLog* FileShared::add_sharedlog() {
  // @@protoc_insertion_point(field_add:qiuwanli.FileShared.sharedlog)
  return sharedlog_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::FilesSharedLog >*
FileShared::mutable_sharedlog() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FileShared.sharedlog)
  return &sharedlog_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FilesSharedLog >&
FileShared::sharedlog() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FileShared.sharedlog)
  return sharedlog_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace qiuwanli

// @@protoc_insertion_point(global_scope)
