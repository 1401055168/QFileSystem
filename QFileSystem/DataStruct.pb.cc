// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataStruct.proto

#include "stdafx.h"
#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "DataStruct.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace qiuwanli {
class File2CilentDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<File2Cilent> {
} _File2Cilent_default_instance_;
class File2ClientTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<File2ClientTable> {
} _File2ClientTable_default_instance_;
class ClientConfigFileDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ClientConfigFile> {
} _ClientConfigFile_default_instance_;
class ClientConfigFileTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ClientConfigFileTable> {
} _ClientConfigFileTable_default_instance_;
class HeartDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Heart> {
} _Heart_default_instance_;
class HeartTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HeartTable> {
} _HeartTable_default_instance_;
class FileInfoListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FileInfoList> {
} _FileInfoList_default_instance_;
class FileInfoListTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FileInfoListTable> {
} _FileInfoListTable_default_instance_;
class BlockList4DownDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BlockList4Down> {
} _BlockList4Down_default_instance_;
class BlockList4DownTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BlockList4DownTable> {
} _BlockList4DownTable_default_instance_;
class BlockInfo2ServerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BlockInfo2Server> {
} _BlockInfo2Server_default_instance_;
class BlockInfo2ServerTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BlockInfo2ServerTable> {
} _BlockInfo2ServerTable_default_instance_;
class UserInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserInfo> {
} _UserInfo_default_instance_;
class UserInfoTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UserInfoTable> {
} _UserInfoTable_default_instance_;
class SharedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Shared> {
} _Shared_default_instance_;
class SharedTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SharedTable> {
} _SharedTable_default_instance_;
class LogsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Logs> {
} _Logs_default_instance_;
class LogTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LogTable> {
} _LogTable_default_instance_;
class BlockDownDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BlockDown> {
} _BlockDown_default_instance_;
class BlockListDownTableDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BlockListDownTable> {
} _BlockListDownTable_default_instance_;

namespace protobuf_DataStruct_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[20];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File2Cilent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File2Cilent, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File2Cilent, filesha512_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File2Cilent, cilentid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File2ClientTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(File2ClientTable, filetoclient_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConfigFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConfigFile, cilentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConfigFile, saveip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConfigFile, prikey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConfigFile, keymd5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConfigFile, totlesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConfigFile, remainsize_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConfigFileTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ClientConfigFileTable, clientinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Heart, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Heart, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Heart, remainsize_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartTable, cilentheart_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfoList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfoList, filesha512_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfoList, filemd5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfoList, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfoList, filecreatedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfoList, filechangedate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfoList, fileallblock_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfoList, filetotalsize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfoList, tag_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfoListTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileInfoListTable, filelist_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockList4Down, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockList4Down, filesha512_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockList4Down, blocknumer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockList4Down, saveserversip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockList4DownTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockList4DownTable, blocklistfordown_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo2Server, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo2Server, filesha512_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo2Server, blocknumer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo2ServerTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo2ServerTable, clientip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo2ServerTable, blockinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, userps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfo, filesha512_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserInfoTable, user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared, sharedurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared, filesha512_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared, verificationcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Shared, userid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharedTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SharedTable, sharedinfo_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, log_date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, log_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, log_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Logs, user_client_uuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogTable, logdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogTable, log_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockDown, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockDown, blocknumer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockDown, saveserversip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockListDownTable, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockListDownTable, filesha512_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockListDownTable, filemd5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockListDownTable, blocklistfordown_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(File2Cilent)},
  { 7, -1, sizeof(File2ClientTable)},
  { 12, -1, sizeof(ClientConfigFile)},
  { 22, -1, sizeof(ClientConfigFileTable)},
  { 27, -1, sizeof(Heart)},
  { 33, -1, sizeof(HeartTable)},
  { 38, -1, sizeof(FileInfoList)},
  { 50, -1, sizeof(FileInfoListTable)},
  { 55, -1, sizeof(BlockList4Down)},
  { 62, -1, sizeof(BlockList4DownTable)},
  { 67, -1, sizeof(BlockInfo2Server)},
  { 73, -1, sizeof(BlockInfo2ServerTable)},
  { 79, -1, sizeof(UserInfo)},
  { 86, -1, sizeof(UserInfoTable)},
  { 91, -1, sizeof(Shared)},
  { 99, -1, sizeof(SharedTable)},
  { 104, -1, sizeof(Logs)},
  { 113, -1, sizeof(LogTable)},
  { 119, -1, sizeof(BlockDown)},
  { 125, -1, sizeof(BlockListDownTable)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_File2Cilent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_File2ClientTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientConfigFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ClientConfigFileTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Heart_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HeartTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FileInfoList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FileInfoListTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockList4Down_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockList4DownTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockInfo2Server_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockInfo2ServerTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UserInfoTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Shared_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SharedTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Logs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogTable_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockDown_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BlockListDownTable_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "DataStruct.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 20);
}

}  // namespace

void TableStruct::Shutdown() {
  _File2Cilent_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _File2ClientTable_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ClientConfigFile_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ClientConfigFileTable_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Heart_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _HeartTable_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _FileInfoList_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _FileInfoListTable_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _BlockList4Down_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _BlockList4DownTable_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _BlockInfo2Server_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _BlockInfo2ServerTable_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _UserInfo_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _UserInfoTable_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _Shared_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _SharedTable_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _Logs_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _LogTable_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _BlockDown_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _BlockListDownTable_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _File2Cilent_default_instance_.DefaultConstruct();
  _File2ClientTable_default_instance_.DefaultConstruct();
  _ClientConfigFile_default_instance_.DefaultConstruct();
  _ClientConfigFileTable_default_instance_.DefaultConstruct();
  _Heart_default_instance_.DefaultConstruct();
  _HeartTable_default_instance_.DefaultConstruct();
  _FileInfoList_default_instance_.DefaultConstruct();
  _FileInfoListTable_default_instance_.DefaultConstruct();
  _BlockList4Down_default_instance_.DefaultConstruct();
  _BlockList4DownTable_default_instance_.DefaultConstruct();
  _BlockInfo2Server_default_instance_.DefaultConstruct();
  _BlockInfo2ServerTable_default_instance_.DefaultConstruct();
  _UserInfo_default_instance_.DefaultConstruct();
  _UserInfoTable_default_instance_.DefaultConstruct();
  _Shared_default_instance_.DefaultConstruct();
  _SharedTable_default_instance_.DefaultConstruct();
  _Logs_default_instance_.DefaultConstruct();
  _LogTable_default_instance_.DefaultConstruct();
  _BlockDown_default_instance_.DefaultConstruct();
  _BlockListDownTable_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\020DataStruct.proto\022\010qiuwanli\"E\n\013File2Cil"
      "ent\022\020\n\010FileName\030\001 \001(\t\022\022\n\nFileSHA512\030\002 \001("
      "\t\022\020\n\010CilentID\030\003 \001(\t\"\?\n\020File2ClientTable\022"
      "+\n\014FileToClient\030\001 \003(\0132\025.qiuwanli.File2Ci"
      "lent\"{\n\020ClientConfigFile\022\020\n\010CilentID\030\001 \001"
      "(\t\022\016\n\006SaveIP\030\002 \001(\t\022\016\n\006PriKey\030\003 \001(\t\022\016\n\006Ke"
      "yMD5\030\004 \001(\t\022\021\n\tTotleSize\030\005 \001(\004\022\022\n\nRemainS"
      "ize\030\006 \001(\004\"G\n\025ClientConfigFileTable\022.\n\nCl"
      "ientInfo\030\001 \003(\0132\032.qiuwanli.ClientConfigFi"
      "le\"\'\n\005Heart\022\n\n\002ID\030\001 \001(\t\022\022\n\nRemainSize\030\002 "
      "\001(\t\"2\n\nHeartTable\022$\n\013CilentHeart\030\001 \003(\0132\017"
      ".qiuwanli.Heart\"\257\001\n\014FileInfoList\022\022\n\nFile"
      "SHA512\030\001 \001(\t\022\017\n\007FileMD5\030\002 \001(\t\022\020\n\010FileNam"
      "e\030\003 \001(\t\022\026\n\016FileCreateDate\030\004 \001(\t\022\026\n\016FileC"
      "hangeDate\030\005 \001(\t\022\024\n\014FileAllBlock\030\006 \001(\004\022\025\n"
      "\rFileTotalSize\030\007 \001(\004\022\013\n\003Tag\030\010 \001(\t\"=\n\021Fil"
      "eInfoListTable\022(\n\010FileList\030\001 \003(\0132\026.qiuwa"
      "nli.FileInfoList\"O\n\016BlockList4Down\022\022\n\nFi"
      "leSHA512\030\001 \001(\t\022\022\n\nBlockNumer\030\002 \001(\t\022\025\n\rSa"
      "veServersIP\030\003 \001(\t\"I\n\023BlockList4DownTable"
      "\0222\n\020BlockListForDown\030\001 \003(\0132\030.qiuwanli.Bl"
      "ockList4Down\":\n\020BlockInfo2Server\022\022\n\nFile"
      "SHA512\030\001 \001(\t\022\022\n\nBlockNumer\030\002 \003(\r\"X\n\025Bloc"
      "kInfo2ServerTable\022\020\n\010ClientIP\030\001 \001(\t\022-\n\tB"
      "lockInfo\030\002 \003(\0132\032.qiuwanli.BlockInfo2Serv"
      "er\">\n\010UserInfo\022\016\n\006UserID\030\001 \001(\t\022\016\n\006UserPS"
      "\030\002 \001(\t\022\022\n\nFileSHA512\030\003 \003(\t\"1\n\rUserInfoTa"
      "ble\022 \n\004User\030\001 \003(\0132\022.qiuwanli.UserInfo\"Y\n"
      "\006Shared\022\021\n\tSharedUrl\030\001 \001(\t\022\022\n\nFileSHA512"
      "\030\002 \001(\t\022\030\n\020VerificationCode\030\003 \001(\t\022\016\n\006User"
      "ID\030\004 \001(\t\"3\n\013SharedTable\022$\n\nSharedInfo\030\001 "
      "\003(\0132\020.qiuwanli.Shared\"g\n\004Logs\022\017\n\007user_id"
      "\030\001 \001(\t\022\020\n\010log_date\030\002 \001(\004\022\020\n\010log_info\030\003 \001"
      "(\t\022\020\n\010log_type\030\004 \001(\014\022\030\n\020user_client_UUID"
      "\030\005 \001(\t\"8\n\010LogTable\022\017\n\007logdate\030\001 \001(\t\022\033\n\003l"
      "og\030\002 \003(\0132\016.qiuwanli.Logs\"6\n\tBlockDown\022\022\n"
      "\nBlockNumer\030\001 \001(\t\022\025\n\rSaveServersIP\030\002 \001(\t"
      "\"h\n\022BlockListDownTable\022\022\n\nFileSHA512\030\001 \001"
      "(\t\022\017\n\007FileMD5\030\002 \001(\t\022-\n\020BlockListForDown\030"
      "\003 \003(\0132\023.qiuwanli.BlockDownb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1594);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DataStruct.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_DataStruct_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int File2Cilent::kFileNameFieldNumber;
const int File2Cilent::kFileSHA512FieldNumber;
const int File2Cilent::kCilentIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

File2Cilent::File2Cilent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.File2Cilent)
}
File2Cilent::File2Cilent(const File2Cilent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  filesha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filesha512().size() > 0) {
    filesha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesha512_);
  }
  cilentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cilentid().size() > 0) {
    cilentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cilentid_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.File2Cilent)
}

void File2Cilent::SharedCtor() {
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cilentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

File2Cilent::~File2Cilent() {
  // @@protoc_insertion_point(destructor:qiuwanli.File2Cilent)
  SharedDtor();
}

void File2Cilent::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesha512_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cilentid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void File2Cilent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* File2Cilent::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[0].descriptor;
}

const File2Cilent& File2Cilent::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

File2Cilent* File2Cilent::New(::google::protobuf::Arena* arena) const {
  File2Cilent* n = new File2Cilent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void File2Cilent::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.File2Cilent)
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cilentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool File2Cilent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.File2Cilent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string FileName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.File2Cilent.FileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string FileSHA512 = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filesha512()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filesha512().data(), this->filesha512().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.File2Cilent.FileSHA512"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string CilentID = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cilentid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cilentid().data(), this->cilentid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.File2Cilent.CilentID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.File2Cilent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.File2Cilent)
  return false;
#undef DO_
}

void File2Cilent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.File2Cilent)
  // string FileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.File2Cilent.FileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // string FileSHA512 = 2;
  if (this->filesha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesha512().data(), this->filesha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.File2Cilent.FileSHA512");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filesha512(), output);
  }

  // string CilentID = 3;
  if (this->cilentid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cilentid().data(), this->cilentid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.File2Cilent.CilentID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->cilentid(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.File2Cilent)
}

::google::protobuf::uint8* File2Cilent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.File2Cilent)
  // string FileName = 1;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.File2Cilent.FileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // string FileSHA512 = 2;
  if (this->filesha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesha512().data(), this->filesha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.File2Cilent.FileSHA512");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filesha512(), target);
  }

  // string CilentID = 3;
  if (this->cilentid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cilentid().data(), this->cilentid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.File2Cilent.CilentID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->cilentid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.File2Cilent)
  return target;
}

size_t File2Cilent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.File2Cilent)
  size_t total_size = 0;

  // string FileName = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // string FileSHA512 = 2;
  if (this->filesha512().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filesha512());
  }

  // string CilentID = 3;
  if (this->cilentid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cilentid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void File2Cilent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.File2Cilent)
  GOOGLE_DCHECK_NE(&from, this);
  const File2Cilent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const File2Cilent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.File2Cilent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.File2Cilent)
    MergeFrom(*source);
  }
}

void File2Cilent::MergeFrom(const File2Cilent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.File2Cilent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.filesha512().size() > 0) {

    filesha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesha512_);
  }
  if (from.cilentid().size() > 0) {

    cilentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cilentid_);
  }
}

void File2Cilent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.File2Cilent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void File2Cilent::CopyFrom(const File2Cilent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.File2Cilent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool File2Cilent::IsInitialized() const {
  return true;
}

void File2Cilent::Swap(File2Cilent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void File2Cilent::InternalSwap(File2Cilent* other) {
  filename_.Swap(&other->filename_);
  filesha512_.Swap(&other->filesha512_);
  cilentid_.Swap(&other->cilentid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata File2Cilent::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// File2Cilent

// string FileName = 1;
void File2Cilent::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File2Cilent::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.FileName)
  return filename_.GetNoArena();
}
void File2Cilent::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.FileName)
}
#if LANG_CXX11
void File2Cilent::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.FileName)
}
#endif
void File2Cilent::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.FileName)
}
void File2Cilent::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.FileName)
}
::std::string* File2Cilent::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.FileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File2Cilent::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.FileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File2Cilent::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.FileName)
}

// string FileSHA512 = 2;
void File2Cilent::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File2Cilent::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.FileSHA512)
  return filesha512_.GetNoArena();
}
void File2Cilent::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.FileSHA512)
}
#if LANG_CXX11
void File2Cilent::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.FileSHA512)
}
#endif
void File2Cilent::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.FileSHA512)
}
void File2Cilent::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.FileSHA512)
}
::std::string* File2Cilent::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File2Cilent::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File2Cilent::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.FileSHA512)
}

// string CilentID = 3;
void File2Cilent::clear_cilentid() {
  cilentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& File2Cilent::cilentid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.CilentID)
  return cilentid_.GetNoArena();
}
void File2Cilent::set_cilentid(const ::std::string& value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.CilentID)
}
#if LANG_CXX11
void File2Cilent::set_cilentid(::std::string&& value) {
  
  cilentid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.CilentID)
}
#endif
void File2Cilent::set_cilentid(const char* value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.CilentID)
}
void File2Cilent::set_cilentid(const char* value, size_t size) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.CilentID)
}
::std::string* File2Cilent::mutable_cilentid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.CilentID)
  return cilentid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* File2Cilent::release_cilentid() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.CilentID)
  
  return cilentid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void File2Cilent::set_allocated_cilentid(::std::string* cilentid) {
  if (cilentid != NULL) {
    
  } else {
    
  }
  cilentid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cilentid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.CilentID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int File2ClientTable::kFileToClientFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

File2ClientTable::File2ClientTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.File2ClientTable)
}
File2ClientTable::File2ClientTable(const File2ClientTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      filetoclient_(from.filetoclient_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.File2ClientTable)
}

void File2ClientTable::SharedCtor() {
  _cached_size_ = 0;
}

File2ClientTable::~File2ClientTable() {
  // @@protoc_insertion_point(destructor:qiuwanli.File2ClientTable)
  SharedDtor();
}

void File2ClientTable::SharedDtor() {
}

void File2ClientTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* File2ClientTable::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[1].descriptor;
}

const File2ClientTable& File2ClientTable::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

File2ClientTable* File2ClientTable::New(::google::protobuf::Arena* arena) const {
  File2ClientTable* n = new File2ClientTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void File2ClientTable::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.File2ClientTable)
  filetoclient_.Clear();
}

bool File2ClientTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.File2ClientTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.File2Cilent FileToClient = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_filetoclient()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.File2ClientTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.File2ClientTable)
  return false;
#undef DO_
}

void File2ClientTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.File2ClientTable)
  // repeated .qiuwanli.File2Cilent FileToClient = 1;
  for (unsigned int i = 0, n = this->filetoclient_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->filetoclient(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.File2ClientTable)
}

::google::protobuf::uint8* File2ClientTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.File2ClientTable)
  // repeated .qiuwanli.File2Cilent FileToClient = 1;
  for (unsigned int i = 0, n = this->filetoclient_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->filetoclient(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.File2ClientTable)
  return target;
}

size_t File2ClientTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.File2ClientTable)
  size_t total_size = 0;

  // repeated .qiuwanli.File2Cilent FileToClient = 1;
  {
    unsigned int count = this->filetoclient_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->filetoclient(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void File2ClientTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.File2ClientTable)
  GOOGLE_DCHECK_NE(&from, this);
  const File2ClientTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const File2ClientTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.File2ClientTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.File2ClientTable)
    MergeFrom(*source);
  }
}

void File2ClientTable::MergeFrom(const File2ClientTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.File2ClientTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filetoclient_.MergeFrom(from.filetoclient_);
}

void File2ClientTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.File2ClientTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void File2ClientTable::CopyFrom(const File2ClientTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.File2ClientTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool File2ClientTable::IsInitialized() const {
  return true;
}

void File2ClientTable::Swap(File2ClientTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void File2ClientTable::InternalSwap(File2ClientTable* other) {
  filetoclient_.UnsafeArenaSwap(&other->filetoclient_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata File2ClientTable::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// File2ClientTable

// repeated .qiuwanli.File2Cilent FileToClient = 1;
int File2ClientTable::filetoclient_size() const {
  return filetoclient_.size();
}
void File2ClientTable::clear_filetoclient() {
  filetoclient_.Clear();
}
const ::qiuwanli::File2Cilent& File2ClientTable::filetoclient(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2ClientTable.FileToClient)
  return filetoclient_.Get(index);
}
::qiuwanli::File2Cilent* File2ClientTable::mutable_filetoclient(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2ClientTable.FileToClient)
  return filetoclient_.Mutable(index);
}
::qiuwanli::File2Cilent* File2ClientTable::add_filetoclient() {
  // @@protoc_insertion_point(field_add:qiuwanli.File2ClientTable.FileToClient)
  return filetoclient_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent >*
File2ClientTable::mutable_filetoclient() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.File2ClientTable.FileToClient)
  return &filetoclient_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent >&
File2ClientTable::filetoclient() const {
  // @@protoc_insertion_point(field_list:qiuwanli.File2ClientTable.FileToClient)
  return filetoclient_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientConfigFile::kCilentIDFieldNumber;
const int ClientConfigFile::kSaveIPFieldNumber;
const int ClientConfigFile::kPriKeyFieldNumber;
const int ClientConfigFile::kKeyMD5FieldNumber;
const int ClientConfigFile::kTotleSizeFieldNumber;
const int ClientConfigFile::kRemainSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientConfigFile::ClientConfigFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.ClientConfigFile)
}
ClientConfigFile::ClientConfigFile(const ClientConfigFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cilentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cilentid().size() > 0) {
    cilentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cilentid_);
  }
  saveip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.saveip().size() > 0) {
    saveip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.saveip_);
  }
  prikey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.prikey().size() > 0) {
    prikey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prikey_);
  }
  keymd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.keymd5().size() > 0) {
    keymd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keymd5_);
  }
  ::memcpy(&totlesize_, &from.totlesize_,
    reinterpret_cast<char*>(&remainsize_) -
    reinterpret_cast<char*>(&totlesize_) + sizeof(remainsize_));
  // @@protoc_insertion_point(copy_constructor:qiuwanli.ClientConfigFile)
}

void ClientConfigFile::SharedCtor() {
  cilentid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  saveip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prikey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keymd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&totlesize_, 0, reinterpret_cast<char*>(&remainsize_) -
    reinterpret_cast<char*>(&totlesize_) + sizeof(remainsize_));
  _cached_size_ = 0;
}

ClientConfigFile::~ClientConfigFile() {
  // @@protoc_insertion_point(destructor:qiuwanli.ClientConfigFile)
  SharedDtor();
}

void ClientConfigFile::SharedDtor() {
  cilentid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  saveip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prikey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keymd5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ClientConfigFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientConfigFile::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[2].descriptor;
}

const ClientConfigFile& ClientConfigFile::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientConfigFile* ClientConfigFile::New(::google::protobuf::Arena* arena) const {
  ClientConfigFile* n = new ClientConfigFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientConfigFile::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.ClientConfigFile)
  cilentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  saveip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prikey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keymd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&totlesize_, 0, reinterpret_cast<char*>(&remainsize_) -
    reinterpret_cast<char*>(&totlesize_) + sizeof(remainsize_));
}

bool ClientConfigFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.ClientConfigFile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string CilentID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cilentid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cilentid().data(), this->cilentid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.ClientConfigFile.CilentID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SaveIP = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_saveip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->saveip().data(), this->saveip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.ClientConfigFile.SaveIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string PriKey = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prikey()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prikey().data(), this->prikey().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.ClientConfigFile.PriKey"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string KeyMD5 = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keymd5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keymd5().data(), this->keymd5().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.ClientConfigFile.KeyMD5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 TotleSize = 5;
      case 5: {
        if (tag == 40u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &totlesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 RemainSize = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &remainsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.ClientConfigFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.ClientConfigFile)
  return false;
#undef DO_
}

void ClientConfigFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.ClientConfigFile)
  // string CilentID = 1;
  if (this->cilentid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cilentid().data(), this->cilentid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ClientConfigFile.CilentID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cilentid(), output);
  }

  // string SaveIP = 2;
  if (this->saveip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->saveip().data(), this->saveip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ClientConfigFile.SaveIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->saveip(), output);
  }

  // string PriKey = 3;
  if (this->prikey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prikey().data(), this->prikey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ClientConfigFile.PriKey");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->prikey(), output);
  }

  // string KeyMD5 = 4;
  if (this->keymd5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keymd5().data(), this->keymd5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ClientConfigFile.KeyMD5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->keymd5(), output);
  }

  // uint64 TotleSize = 5;
  if (this->totlesize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->totlesize(), output);
  }

  // uint64 RemainSize = 6;
  if (this->remainsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->remainsize(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.ClientConfigFile)
}

::google::protobuf::uint8* ClientConfigFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.ClientConfigFile)
  // string CilentID = 1;
  if (this->cilentid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cilentid().data(), this->cilentid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ClientConfigFile.CilentID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cilentid(), target);
  }

  // string SaveIP = 2;
  if (this->saveip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->saveip().data(), this->saveip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ClientConfigFile.SaveIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->saveip(), target);
  }

  // string PriKey = 3;
  if (this->prikey().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prikey().data(), this->prikey().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ClientConfigFile.PriKey");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->prikey(), target);
  }

  // string KeyMD5 = 4;
  if (this->keymd5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keymd5().data(), this->keymd5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.ClientConfigFile.KeyMD5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->keymd5(), target);
  }

  // uint64 TotleSize = 5;
  if (this->totlesize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->totlesize(), target);
  }

  // uint64 RemainSize = 6;
  if (this->remainsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->remainsize(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.ClientConfigFile)
  return target;
}

size_t ClientConfigFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.ClientConfigFile)
  size_t total_size = 0;

  // string CilentID = 1;
  if (this->cilentid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cilentid());
  }

  // string SaveIP = 2;
  if (this->saveip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->saveip());
  }

  // string PriKey = 3;
  if (this->prikey().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->prikey());
  }

  // string KeyMD5 = 4;
  if (this->keymd5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keymd5());
  }

  // uint64 TotleSize = 5;
  if (this->totlesize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->totlesize());
  }

  // uint64 RemainSize = 6;
  if (this->remainsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->remainsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientConfigFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.ClientConfigFile)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientConfigFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientConfigFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.ClientConfigFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.ClientConfigFile)
    MergeFrom(*source);
  }
}

void ClientConfigFile::MergeFrom(const ClientConfigFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.ClientConfigFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.cilentid().size() > 0) {

    cilentid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cilentid_);
  }
  if (from.saveip().size() > 0) {

    saveip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.saveip_);
  }
  if (from.prikey().size() > 0) {

    prikey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prikey_);
  }
  if (from.keymd5().size() > 0) {

    keymd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keymd5_);
  }
  if (from.totlesize() != 0) {
    set_totlesize(from.totlesize());
  }
  if (from.remainsize() != 0) {
    set_remainsize(from.remainsize());
  }
}

void ClientConfigFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.ClientConfigFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientConfigFile::CopyFrom(const ClientConfigFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.ClientConfigFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientConfigFile::IsInitialized() const {
  return true;
}

void ClientConfigFile::Swap(ClientConfigFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientConfigFile::InternalSwap(ClientConfigFile* other) {
  cilentid_.Swap(&other->cilentid_);
  saveip_.Swap(&other->saveip_);
  prikey_.Swap(&other->prikey_);
  keymd5_.Swap(&other->keymd5_);
  std::swap(totlesize_, other->totlesize_);
  std::swap(remainsize_, other->remainsize_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientConfigFile::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientConfigFile

// string CilentID = 1;
void ClientConfigFile::clear_cilentid() {
  cilentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientConfigFile::cilentid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.CilentID)
  return cilentid_.GetNoArena();
}
void ClientConfigFile::set_cilentid(const ::std::string& value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.CilentID)
}
#if LANG_CXX11
void ClientConfigFile::set_cilentid(::std::string&& value) {
  
  cilentid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ClientConfigFile.CilentID)
}
#endif
void ClientConfigFile::set_cilentid(const char* value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ClientConfigFile.CilentID)
}
void ClientConfigFile::set_cilentid(const char* value, size_t size) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ClientConfigFile.CilentID)
}
::std::string* ClientConfigFile::mutable_cilentid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ClientConfigFile.CilentID)
  return cilentid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientConfigFile::release_cilentid() {
  // @@protoc_insertion_point(field_release:qiuwanli.ClientConfigFile.CilentID)
  
  return cilentid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientConfigFile::set_allocated_cilentid(::std::string* cilentid) {
  if (cilentid != NULL) {
    
  } else {
    
  }
  cilentid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cilentid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ClientConfigFile.CilentID)
}

// string SaveIP = 2;
void ClientConfigFile::clear_saveip() {
  saveip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientConfigFile::saveip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.SaveIP)
  return saveip_.GetNoArena();
}
void ClientConfigFile::set_saveip(const ::std::string& value) {
  
  saveip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.SaveIP)
}
#if LANG_CXX11
void ClientConfigFile::set_saveip(::std::string&& value) {
  
  saveip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ClientConfigFile.SaveIP)
}
#endif
void ClientConfigFile::set_saveip(const char* value) {
  
  saveip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ClientConfigFile.SaveIP)
}
void ClientConfigFile::set_saveip(const char* value, size_t size) {
  
  saveip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ClientConfigFile.SaveIP)
}
::std::string* ClientConfigFile::mutable_saveip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ClientConfigFile.SaveIP)
  return saveip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientConfigFile::release_saveip() {
  // @@protoc_insertion_point(field_release:qiuwanli.ClientConfigFile.SaveIP)
  
  return saveip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientConfigFile::set_allocated_saveip(::std::string* saveip) {
  if (saveip != NULL) {
    
  } else {
    
  }
  saveip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), saveip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ClientConfigFile.SaveIP)
}

// string PriKey = 3;
void ClientConfigFile::clear_prikey() {
  prikey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientConfigFile::prikey() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.PriKey)
  return prikey_.GetNoArena();
}
void ClientConfigFile::set_prikey(const ::std::string& value) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.PriKey)
}
#if LANG_CXX11
void ClientConfigFile::set_prikey(::std::string&& value) {
  
  prikey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ClientConfigFile.PriKey)
}
#endif
void ClientConfigFile::set_prikey(const char* value) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ClientConfigFile.PriKey)
}
void ClientConfigFile::set_prikey(const char* value, size_t size) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ClientConfigFile.PriKey)
}
::std::string* ClientConfigFile::mutable_prikey() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ClientConfigFile.PriKey)
  return prikey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientConfigFile::release_prikey() {
  // @@protoc_insertion_point(field_release:qiuwanli.ClientConfigFile.PriKey)
  
  return prikey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientConfigFile::set_allocated_prikey(::std::string* prikey) {
  if (prikey != NULL) {
    
  } else {
    
  }
  prikey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prikey);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ClientConfigFile.PriKey)
}

// string KeyMD5 = 4;
void ClientConfigFile::clear_keymd5() {
  keymd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ClientConfigFile::keymd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.KeyMD5)
  return keymd5_.GetNoArena();
}
void ClientConfigFile::set_keymd5(const ::std::string& value) {
  
  keymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.KeyMD5)
}
#if LANG_CXX11
void ClientConfigFile::set_keymd5(::std::string&& value) {
  
  keymd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ClientConfigFile.KeyMD5)
}
#endif
void ClientConfigFile::set_keymd5(const char* value) {
  
  keymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ClientConfigFile.KeyMD5)
}
void ClientConfigFile::set_keymd5(const char* value, size_t size) {
  
  keymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ClientConfigFile.KeyMD5)
}
::std::string* ClientConfigFile::mutable_keymd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ClientConfigFile.KeyMD5)
  return keymd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ClientConfigFile::release_keymd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.ClientConfigFile.KeyMD5)
  
  return keymd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ClientConfigFile::set_allocated_keymd5(::std::string* keymd5) {
  if (keymd5 != NULL) {
    
  } else {
    
  }
  keymd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keymd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ClientConfigFile.KeyMD5)
}

// uint64 TotleSize = 5;
void ClientConfigFile::clear_totlesize() {
  totlesize_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ClientConfigFile::totlesize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.TotleSize)
  return totlesize_;
}
void ClientConfigFile::set_totlesize(::google::protobuf::uint64 value) {
  
  totlesize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.TotleSize)
}

// uint64 RemainSize = 6;
void ClientConfigFile::clear_remainsize() {
  remainsize_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 ClientConfigFile::remainsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.RemainSize)
  return remainsize_;
}
void ClientConfigFile::set_remainsize(::google::protobuf::uint64 value) {
  
  remainsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.RemainSize)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientConfigFileTable::kClientInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientConfigFileTable::ClientConfigFileTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.ClientConfigFileTable)
}
ClientConfigFileTable::ClientConfigFileTable(const ClientConfigFileTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      clientinfo_(from.clientinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.ClientConfigFileTable)
}

void ClientConfigFileTable::SharedCtor() {
  _cached_size_ = 0;
}

ClientConfigFileTable::~ClientConfigFileTable() {
  // @@protoc_insertion_point(destructor:qiuwanli.ClientConfigFileTable)
  SharedDtor();
}

void ClientConfigFileTable::SharedDtor() {
}

void ClientConfigFileTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientConfigFileTable::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[3].descriptor;
}

const ClientConfigFileTable& ClientConfigFileTable::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

ClientConfigFileTable* ClientConfigFileTable::New(::google::protobuf::Arena* arena) const {
  ClientConfigFileTable* n = new ClientConfigFileTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientConfigFileTable::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.ClientConfigFileTable)
  clientinfo_.Clear();
}

bool ClientConfigFileTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.ClientConfigFileTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.ClientConfigFile ClientInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_clientinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.ClientConfigFileTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.ClientConfigFileTable)
  return false;
#undef DO_
}

void ClientConfigFileTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.ClientConfigFileTable)
  // repeated .qiuwanli.ClientConfigFile ClientInfo = 1;
  for (unsigned int i = 0, n = this->clientinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->clientinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.ClientConfigFileTable)
}

::google::protobuf::uint8* ClientConfigFileTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.ClientConfigFileTable)
  // repeated .qiuwanli.ClientConfigFile ClientInfo = 1;
  for (unsigned int i = 0, n = this->clientinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->clientinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.ClientConfigFileTable)
  return target;
}

size_t ClientConfigFileTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.ClientConfigFileTable)
  size_t total_size = 0;

  // repeated .qiuwanli.ClientConfigFile ClientInfo = 1;
  {
    unsigned int count = this->clientinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->clientinfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientConfigFileTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.ClientConfigFileTable)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientConfigFileTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientConfigFileTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.ClientConfigFileTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.ClientConfigFileTable)
    MergeFrom(*source);
  }
}

void ClientConfigFileTable::MergeFrom(const ClientConfigFileTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.ClientConfigFileTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clientinfo_.MergeFrom(from.clientinfo_);
}

void ClientConfigFileTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.ClientConfigFileTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientConfigFileTable::CopyFrom(const ClientConfigFileTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.ClientConfigFileTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientConfigFileTable::IsInitialized() const {
  return true;
}

void ClientConfigFileTable::Swap(ClientConfigFileTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientConfigFileTable::InternalSwap(ClientConfigFileTable* other) {
  clientinfo_.UnsafeArenaSwap(&other->clientinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientConfigFileTable::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ClientConfigFileTable

// repeated .qiuwanli.ClientConfigFile ClientInfo = 1;
int ClientConfigFileTable::clientinfo_size() const {
  return clientinfo_.size();
}
void ClientConfigFileTable::clear_clientinfo() {
  clientinfo_.Clear();
}
const ::qiuwanli::ClientConfigFile& ClientConfigFileTable::clientinfo(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFileTable.ClientInfo)
  return clientinfo_.Get(index);
}
::qiuwanli::ClientConfigFile* ClientConfigFileTable::mutable_clientinfo(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.ClientConfigFileTable.ClientInfo)
  return clientinfo_.Mutable(index);
}
::qiuwanli::ClientConfigFile* ClientConfigFileTable::add_clientinfo() {
  // @@protoc_insertion_point(field_add:qiuwanli.ClientConfigFileTable.ClientInfo)
  return clientinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::ClientConfigFile >*
ClientConfigFileTable::mutable_clientinfo() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.ClientConfigFileTable.ClientInfo)
  return &clientinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::ClientConfigFile >&
ClientConfigFileTable::clientinfo() const {
  // @@protoc_insertion_point(field_list:qiuwanli.ClientConfigFileTable.ClientInfo)
  return clientinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Heart::kIDFieldNumber;
const int Heart::kRemainSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Heart::Heart()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.Heart)
}
Heart::Heart(const Heart& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  remainsize_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.remainsize().size() > 0) {
    remainsize_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remainsize_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.Heart)
}

void Heart::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remainsize_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Heart::~Heart() {
  // @@protoc_insertion_point(destructor:qiuwanli.Heart)
  SharedDtor();
}

void Heart::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remainsize_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Heart::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Heart::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[4].descriptor;
}

const Heart& Heart::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

Heart* Heart::New(::google::protobuf::Arena* arena) const {
  Heart* n = new Heart;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Heart::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.Heart)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  remainsize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Heart::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.Heart)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Heart.ID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string RemainSize = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_remainsize()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->remainsize().data(), this->remainsize().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Heart.RemainSize"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.Heart)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.Heart)
  return false;
#undef DO_
}

void Heart::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.Heart)
  // string ID = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Heart.ID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string RemainSize = 2;
  if (this->remainsize().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remainsize().data(), this->remainsize().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Heart.RemainSize");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->remainsize(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.Heart)
}

::google::protobuf::uint8* Heart::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.Heart)
  // string ID = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Heart.ID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string RemainSize = 2;
  if (this->remainsize().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->remainsize().data(), this->remainsize().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Heart.RemainSize");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->remainsize(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.Heart)
  return target;
}

size_t Heart::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.Heart)
  size_t total_size = 0;

  // string ID = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string RemainSize = 2;
  if (this->remainsize().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->remainsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Heart::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.Heart)
  GOOGLE_DCHECK_NE(&from, this);
  const Heart* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Heart>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.Heart)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.Heart)
    MergeFrom(*source);
  }
}

void Heart::MergeFrom(const Heart& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.Heart)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.remainsize().size() > 0) {

    remainsize_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.remainsize_);
  }
}

void Heart::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.Heart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Heart::CopyFrom(const Heart& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.Heart)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Heart::IsInitialized() const {
  return true;
}

void Heart::Swap(Heart* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Heart::InternalSwap(Heart* other) {
  id_.Swap(&other->id_);
  remainsize_.Swap(&other->remainsize_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Heart::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Heart

// string ID = 1;
void Heart::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Heart::id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Heart.ID)
  return id_.GetNoArena();
}
void Heart::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Heart.ID)
}
#if LANG_CXX11
void Heart::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Heart.ID)
}
#endif
void Heart::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Heart.ID)
}
void Heart::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Heart.ID)
}
::std::string* Heart::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Heart.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Heart::release_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.Heart.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Heart::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Heart.ID)
}

// string RemainSize = 2;
void Heart::clear_remainsize() {
  remainsize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Heart::remainsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Heart.RemainSize)
  return remainsize_.GetNoArena();
}
void Heart::set_remainsize(const ::std::string& value) {
  
  remainsize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Heart.RemainSize)
}
#if LANG_CXX11
void Heart::set_remainsize(::std::string&& value) {
  
  remainsize_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Heart.RemainSize)
}
#endif
void Heart::set_remainsize(const char* value) {
  
  remainsize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Heart.RemainSize)
}
void Heart::set_remainsize(const char* value, size_t size) {
  
  remainsize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Heart.RemainSize)
}
::std::string* Heart::mutable_remainsize() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Heart.RemainSize)
  return remainsize_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Heart::release_remainsize() {
  // @@protoc_insertion_point(field_release:qiuwanli.Heart.RemainSize)
  
  return remainsize_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Heart::set_allocated_remainsize(::std::string* remainsize) {
  if (remainsize != NULL) {
    
  } else {
    
  }
  remainsize_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remainsize);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Heart.RemainSize)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartTable::kCilentHeartFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartTable::HeartTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.HeartTable)
}
HeartTable::HeartTable(const HeartTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      cilentheart_(from.cilentheart_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.HeartTable)
}

void HeartTable::SharedCtor() {
  _cached_size_ = 0;
}

HeartTable::~HeartTable() {
  // @@protoc_insertion_point(destructor:qiuwanli.HeartTable)
  SharedDtor();
}

void HeartTable::SharedDtor() {
}

void HeartTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartTable::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[5].descriptor;
}

const HeartTable& HeartTable::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

HeartTable* HeartTable::New(::google::protobuf::Arena* arena) const {
  HeartTable* n = new HeartTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartTable::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.HeartTable)
  cilentheart_.Clear();
}

bool HeartTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.HeartTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.Heart CilentHeart = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_cilentheart()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.HeartTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.HeartTable)
  return false;
#undef DO_
}

void HeartTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.HeartTable)
  // repeated .qiuwanli.Heart CilentHeart = 1;
  for (unsigned int i = 0, n = this->cilentheart_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cilentheart(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.HeartTable)
}

::google::protobuf::uint8* HeartTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.HeartTable)
  // repeated .qiuwanli.Heart CilentHeart = 1;
  for (unsigned int i = 0, n = this->cilentheart_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->cilentheart(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.HeartTable)
  return target;
}

size_t HeartTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.HeartTable)
  size_t total_size = 0;

  // repeated .qiuwanli.Heart CilentHeart = 1;
  {
    unsigned int count = this->cilentheart_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cilentheart(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.HeartTable)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.HeartTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.HeartTable)
    MergeFrom(*source);
  }
}

void HeartTable::MergeFrom(const HeartTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.HeartTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cilentheart_.MergeFrom(from.cilentheart_);
}

void HeartTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.HeartTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartTable::CopyFrom(const HeartTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.HeartTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartTable::IsInitialized() const {
  return true;
}

void HeartTable::Swap(HeartTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartTable::InternalSwap(HeartTable* other) {
  cilentheart_.UnsafeArenaSwap(&other->cilentheart_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartTable::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartTable

// repeated .qiuwanli.Heart CilentHeart = 1;
int HeartTable::cilentheart_size() const {
  return cilentheart_.size();
}
void HeartTable::clear_cilentheart() {
  cilentheart_.Clear();
}
const ::qiuwanli::Heart& HeartTable::cilentheart(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.HeartTable.CilentHeart)
  return cilentheart_.Get(index);
}
::qiuwanli::Heart* HeartTable::mutable_cilentheart(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.HeartTable.CilentHeart)
  return cilentheart_.Mutable(index);
}
::qiuwanli::Heart* HeartTable::add_cilentheart() {
  // @@protoc_insertion_point(field_add:qiuwanli.HeartTable.CilentHeart)
  return cilentheart_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::Heart >*
HeartTable::mutable_cilentheart() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.HeartTable.CilentHeart)
  return &cilentheart_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Heart >&
HeartTable::cilentheart() const {
  // @@protoc_insertion_point(field_list:qiuwanli.HeartTable.CilentHeart)
  return cilentheart_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileInfoList::kFileSHA512FieldNumber;
const int FileInfoList::kFileMD5FieldNumber;
const int FileInfoList::kFileNameFieldNumber;
const int FileInfoList::kFileCreateDateFieldNumber;
const int FileInfoList::kFileChangeDateFieldNumber;
const int FileInfoList::kFileAllBlockFieldNumber;
const int FileInfoList::kFileTotalSizeFieldNumber;
const int FileInfoList::kTagFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileInfoList::FileInfoList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.FileInfoList)
}
FileInfoList::FileInfoList(const FileInfoList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filesha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filesha512().size() > 0) {
    filesha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesha512_);
  }
  filemd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filemd5().size() > 0) {
    filemd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filemd5_);
  }
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filename().size() > 0) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  filecreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filecreatedate().size() > 0) {
    filecreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filecreatedate_);
  }
  filechangedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filechangedate().size() > 0) {
    filechangedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filechangedate_);
  }
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.tag().size() > 0) {
    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  ::memcpy(&fileallblock_, &from.fileallblock_,
    reinterpret_cast<char*>(&filetotalsize_) -
    reinterpret_cast<char*>(&fileallblock_) + sizeof(filetotalsize_));
  // @@protoc_insertion_point(copy_constructor:qiuwanli.FileInfoList)
}

void FileInfoList::SharedCtor() {
  filesha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filecreatedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filechangedate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fileallblock_, 0, reinterpret_cast<char*>(&filetotalsize_) -
    reinterpret_cast<char*>(&fileallblock_) + sizeof(filetotalsize_));
  _cached_size_ = 0;
}

FileInfoList::~FileInfoList() {
  // @@protoc_insertion_point(destructor:qiuwanli.FileInfoList)
  SharedDtor();
}

void FileInfoList::SharedDtor() {
  filesha512_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filecreatedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filechangedate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FileInfoList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileInfoList::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[6].descriptor;
}

const FileInfoList& FileInfoList::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

FileInfoList* FileInfoList::New(::google::protobuf::Arena* arena) const {
  FileInfoList* n = new FileInfoList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileInfoList::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.FileInfoList)
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filecreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filechangedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&fileallblock_, 0, reinterpret_cast<char*>(&filetotalsize_) -
    reinterpret_cast<char*>(&fileallblock_) + sizeof(filetotalsize_));
}

bool FileInfoList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.FileInfoList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string FileSHA512 = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filesha512()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filesha512().data(), this->filesha512().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileInfoList.FileSHA512"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string FileMD5 = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filemd5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filemd5().data(), this->filemd5().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileInfoList.FileMD5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string FileName = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileInfoList.FileName"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string FileCreateDate = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filecreatedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filecreatedate().data(), this->filecreatedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileInfoList.FileCreateDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string FileChangeDate = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filechangedate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filechangedate().data(), this->filechangedate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileInfoList.FileChangeDate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 FileAllBlock = 6;
      case 6: {
        if (tag == 48u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &fileallblock_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 FileTotalSize = 7;
      case 7: {
        if (tag == 56u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &filetotalsize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Tag = 8;
      case 8: {
        if (tag == 66u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tag().data(), this->tag().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.FileInfoList.Tag"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.FileInfoList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.FileInfoList)
  return false;
#undef DO_
}

void FileInfoList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.FileInfoList)
  // string FileSHA512 = 1;
  if (this->filesha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesha512().data(), this->filesha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfoList.FileSHA512");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filesha512(), output);
  }

  // string FileMD5 = 2;
  if (this->filemd5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filemd5().data(), this->filemd5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfoList.FileMD5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filemd5(), output);
  }

  // string FileName = 3;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfoList.FileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->filename(), output);
  }

  // string FileCreateDate = 4;
  if (this->filecreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filecreatedate().data(), this->filecreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfoList.FileCreateDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filecreatedate(), output);
  }

  // string FileChangeDate = 5;
  if (this->filechangedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filechangedate().data(), this->filechangedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfoList.FileChangeDate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->filechangedate(), output);
  }

  // uint64 FileAllBlock = 6;
  if (this->fileallblock() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->fileallblock(), output);
  }

  // uint64 FileTotalSize = 7;
  if (this->filetotalsize() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->filetotalsize(), output);
  }

  // string Tag = 8;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfoList.Tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->tag(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.FileInfoList)
}

::google::protobuf::uint8* FileInfoList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.FileInfoList)
  // string FileSHA512 = 1;
  if (this->filesha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesha512().data(), this->filesha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfoList.FileSHA512");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filesha512(), target);
  }

  // string FileMD5 = 2;
  if (this->filemd5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filemd5().data(), this->filemd5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfoList.FileMD5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filemd5(), target);
  }

  // string FileName = 3;
  if (this->filename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfoList.FileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->filename(), target);
  }

  // string FileCreateDate = 4;
  if (this->filecreatedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filecreatedate().data(), this->filecreatedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfoList.FileCreateDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filecreatedate(), target);
  }

  // string FileChangeDate = 5;
  if (this->filechangedate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filechangedate().data(), this->filechangedate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfoList.FileChangeDate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->filechangedate(), target);
  }

  // uint64 FileAllBlock = 6;
  if (this->fileallblock() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->fileallblock(), target);
  }

  // uint64 FileTotalSize = 7;
  if (this->filetotalsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->filetotalsize(), target);
  }

  // string Tag = 8;
  if (this->tag().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tag().data(), this->tag().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.FileInfoList.Tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->tag(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.FileInfoList)
  return target;
}

size_t FileInfoList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.FileInfoList)
  size_t total_size = 0;

  // string FileSHA512 = 1;
  if (this->filesha512().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filesha512());
  }

  // string FileMD5 = 2;
  if (this->filemd5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filemd5());
  }

  // string FileName = 3;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filename());
  }

  // string FileCreateDate = 4;
  if (this->filecreatedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filecreatedate());
  }

  // string FileChangeDate = 5;
  if (this->filechangedate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filechangedate());
  }

  // string Tag = 8;
  if (this->tag().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tag());
  }

  // uint64 FileAllBlock = 6;
  if (this->fileallblock() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->fileallblock());
  }

  // uint64 FileTotalSize = 7;
  if (this->filetotalsize() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->filetotalsize());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileInfoList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.FileInfoList)
  GOOGLE_DCHECK_NE(&from, this);
  const FileInfoList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileInfoList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.FileInfoList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.FileInfoList)
    MergeFrom(*source);
  }
}

void FileInfoList::MergeFrom(const FileInfoList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.FileInfoList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.filesha512().size() > 0) {

    filesha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesha512_);
  }
  if (from.filemd5().size() > 0) {

    filemd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filemd5_);
  }
  if (from.filename().size() > 0) {

    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  if (from.filecreatedate().size() > 0) {

    filecreatedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filecreatedate_);
  }
  if (from.filechangedate().size() > 0) {

    filechangedate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filechangedate_);
  }
  if (from.tag().size() > 0) {

    tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_);
  }
  if (from.fileallblock() != 0) {
    set_fileallblock(from.fileallblock());
  }
  if (from.filetotalsize() != 0) {
    set_filetotalsize(from.filetotalsize());
  }
}

void FileInfoList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.FileInfoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileInfoList::CopyFrom(const FileInfoList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.FileInfoList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileInfoList::IsInitialized() const {
  return true;
}

void FileInfoList::Swap(FileInfoList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileInfoList::InternalSwap(FileInfoList* other) {
  filesha512_.Swap(&other->filesha512_);
  filemd5_.Swap(&other->filemd5_);
  filename_.Swap(&other->filename_);
  filecreatedate_.Swap(&other->filecreatedate_);
  filechangedate_.Swap(&other->filechangedate_);
  tag_.Swap(&other->tag_);
  std::swap(fileallblock_, other->fileallblock_);
  std::swap(filetotalsize_, other->filetotalsize_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileInfoList::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileInfoList

// string FileSHA512 = 1;
void FileInfoList::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfoList::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileSHA512)
  return filesha512_.GetNoArena();
}
void FileInfoList::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileSHA512)
}
#if LANG_CXX11
void FileInfoList::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.FileSHA512)
}
#endif
void FileInfoList::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.FileSHA512)
}
void FileInfoList::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.FileSHA512)
}
::std::string* FileInfoList::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfoList::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfoList::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.FileSHA512)
}

// string FileMD5 = 2;
void FileInfoList::clear_filemd5() {
  filemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfoList::filemd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileMD5)
  return filemd5_.GetNoArena();
}
void FileInfoList::set_filemd5(const ::std::string& value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileMD5)
}
#if LANG_CXX11
void FileInfoList::set_filemd5(::std::string&& value) {
  
  filemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.FileMD5)
}
#endif
void FileInfoList::set_filemd5(const char* value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.FileMD5)
}
void FileInfoList::set_filemd5(const char* value, size_t size) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.FileMD5)
}
::std::string* FileInfoList::mutable_filemd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.FileMD5)
  return filemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfoList::release_filemd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.FileMD5)
  
  return filemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfoList::set_allocated_filemd5(::std::string* filemd5) {
  if (filemd5 != NULL) {
    
  } else {
    
  }
  filemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.FileMD5)
}

// string FileName = 3;
void FileInfoList::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfoList::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileName)
  return filename_.GetNoArena();
}
void FileInfoList::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileName)
}
#if LANG_CXX11
void FileInfoList::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.FileName)
}
#endif
void FileInfoList::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.FileName)
}
void FileInfoList::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.FileName)
}
::std::string* FileInfoList::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.FileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfoList::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.FileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfoList::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.FileName)
}

// string FileCreateDate = 4;
void FileInfoList::clear_filecreatedate() {
  filecreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfoList::filecreatedate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileCreateDate)
  return filecreatedate_.GetNoArena();
}
void FileInfoList::set_filecreatedate(const ::std::string& value) {
  
  filecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileCreateDate)
}
#if LANG_CXX11
void FileInfoList::set_filecreatedate(::std::string&& value) {
  
  filecreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.FileCreateDate)
}
#endif
void FileInfoList::set_filecreatedate(const char* value) {
  
  filecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.FileCreateDate)
}
void FileInfoList::set_filecreatedate(const char* value, size_t size) {
  
  filecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.FileCreateDate)
}
::std::string* FileInfoList::mutable_filecreatedate() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.FileCreateDate)
  return filecreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfoList::release_filecreatedate() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.FileCreateDate)
  
  return filecreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfoList::set_allocated_filecreatedate(::std::string* filecreatedate) {
  if (filecreatedate != NULL) {
    
  } else {
    
  }
  filecreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filecreatedate);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.FileCreateDate)
}

// string FileChangeDate = 5;
void FileInfoList::clear_filechangedate() {
  filechangedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfoList::filechangedate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileChangeDate)
  return filechangedate_.GetNoArena();
}
void FileInfoList::set_filechangedate(const ::std::string& value) {
  
  filechangedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileChangeDate)
}
#if LANG_CXX11
void FileInfoList::set_filechangedate(::std::string&& value) {
  
  filechangedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.FileChangeDate)
}
#endif
void FileInfoList::set_filechangedate(const char* value) {
  
  filechangedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.FileChangeDate)
}
void FileInfoList::set_filechangedate(const char* value, size_t size) {
  
  filechangedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.FileChangeDate)
}
::std::string* FileInfoList::mutable_filechangedate() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.FileChangeDate)
  return filechangedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfoList::release_filechangedate() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.FileChangeDate)
  
  return filechangedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfoList::set_allocated_filechangedate(::std::string* filechangedate) {
  if (filechangedate != NULL) {
    
  } else {
    
  }
  filechangedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filechangedate);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.FileChangeDate)
}

// uint64 FileAllBlock = 6;
void FileInfoList::clear_fileallblock() {
  fileallblock_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 FileInfoList::fileallblock() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileAllBlock)
  return fileallblock_;
}
void FileInfoList::set_fileallblock(::google::protobuf::uint64 value) {
  
  fileallblock_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileAllBlock)
}

// uint64 FileTotalSize = 7;
void FileInfoList::clear_filetotalsize() {
  filetotalsize_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 FileInfoList::filetotalsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileTotalSize)
  return filetotalsize_;
}
void FileInfoList::set_filetotalsize(::google::protobuf::uint64 value) {
  
  filetotalsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileTotalSize)
}

// string Tag = 8;
void FileInfoList::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& FileInfoList::tag() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.Tag)
  return tag_.GetNoArena();
}
void FileInfoList::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.Tag)
}
#if LANG_CXX11
void FileInfoList::set_tag(::std::string&& value) {
  
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.Tag)
}
#endif
void FileInfoList::set_tag(const char* value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.Tag)
}
void FileInfoList::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.Tag)
}
::std::string* FileInfoList::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.Tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FileInfoList::release_tag() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.Tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FileInfoList::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.Tag)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FileInfoListTable::kFileListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FileInfoListTable::FileInfoListTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.FileInfoListTable)
}
FileInfoListTable::FileInfoListTable(const FileInfoListTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      filelist_(from.filelist_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.FileInfoListTable)
}

void FileInfoListTable::SharedCtor() {
  _cached_size_ = 0;
}

FileInfoListTable::~FileInfoListTable() {
  // @@protoc_insertion_point(destructor:qiuwanli.FileInfoListTable)
  SharedDtor();
}

void FileInfoListTable::SharedDtor() {
}

void FileInfoListTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileInfoListTable::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[7].descriptor;
}

const FileInfoListTable& FileInfoListTable::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

FileInfoListTable* FileInfoListTable::New(::google::protobuf::Arena* arena) const {
  FileInfoListTable* n = new FileInfoListTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FileInfoListTable::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.FileInfoListTable)
  filelist_.Clear();
}

bool FileInfoListTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.FileInfoListTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.FileInfoList FileList = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_filelist()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.FileInfoListTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.FileInfoListTable)
  return false;
#undef DO_
}

void FileInfoListTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.FileInfoListTable)
  // repeated .qiuwanli.FileInfoList FileList = 1;
  for (unsigned int i = 0, n = this->filelist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->filelist(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.FileInfoListTable)
}

::google::protobuf::uint8* FileInfoListTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.FileInfoListTable)
  // repeated .qiuwanli.FileInfoList FileList = 1;
  for (unsigned int i = 0, n = this->filelist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->filelist(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.FileInfoListTable)
  return target;
}

size_t FileInfoListTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.FileInfoListTable)
  size_t total_size = 0;

  // repeated .qiuwanli.FileInfoList FileList = 1;
  {
    unsigned int count = this->filelist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->filelist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileInfoListTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.FileInfoListTable)
  GOOGLE_DCHECK_NE(&from, this);
  const FileInfoListTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FileInfoListTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.FileInfoListTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.FileInfoListTable)
    MergeFrom(*source);
  }
}

void FileInfoListTable::MergeFrom(const FileInfoListTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.FileInfoListTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filelist_.MergeFrom(from.filelist_);
}

void FileInfoListTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.FileInfoListTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileInfoListTable::CopyFrom(const FileInfoListTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.FileInfoListTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileInfoListTable::IsInitialized() const {
  return true;
}

void FileInfoListTable::Swap(FileInfoListTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FileInfoListTable::InternalSwap(FileInfoListTable* other) {
  filelist_.UnsafeArenaSwap(&other->filelist_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FileInfoListTable::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FileInfoListTable

// repeated .qiuwanli.FileInfoList FileList = 1;
int FileInfoListTable::filelist_size() const {
  return filelist_.size();
}
void FileInfoListTable::clear_filelist() {
  filelist_.Clear();
}
const ::qiuwanli::FileInfoList& FileInfoListTable::filelist(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoListTable.FileList)
  return filelist_.Get(index);
}
::qiuwanli::FileInfoList* FileInfoListTable::mutable_filelist(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoListTable.FileList)
  return filelist_.Mutable(index);
}
::qiuwanli::FileInfoList* FileInfoListTable::add_filelist() {
  // @@protoc_insertion_point(field_add:qiuwanli.FileInfoListTable.FileList)
  return filelist_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfoList >*
FileInfoListTable::mutable_filelist() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FileInfoListTable.FileList)
  return &filelist_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfoList >&
FileInfoListTable::filelist() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FileInfoListTable.FileList)
  return filelist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockList4Down::kFileSHA512FieldNumber;
const int BlockList4Down::kBlockNumerFieldNumber;
const int BlockList4Down::kSaveServersIPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockList4Down::BlockList4Down()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.BlockList4Down)
}
BlockList4Down::BlockList4Down(const BlockList4Down& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filesha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filesha512().size() > 0) {
    filesha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesha512_);
  }
  blocknumer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.blocknumer().size() > 0) {
    blocknumer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blocknumer_);
  }
  saveserversip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.saveserversip().size() > 0) {
    saveserversip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.saveserversip_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.BlockList4Down)
}

void BlockList4Down::SharedCtor() {
  filesha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blocknumer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  saveserversip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BlockList4Down::~BlockList4Down() {
  // @@protoc_insertion_point(destructor:qiuwanli.BlockList4Down)
  SharedDtor();
}

void BlockList4Down::SharedDtor() {
  filesha512_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blocknumer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  saveserversip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlockList4Down::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockList4Down::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[8].descriptor;
}

const BlockList4Down& BlockList4Down::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlockList4Down* BlockList4Down::New(::google::protobuf::Arena* arena) const {
  BlockList4Down* n = new BlockList4Down;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockList4Down::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.BlockList4Down)
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blocknumer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  saveserversip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BlockList4Down::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.BlockList4Down)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string FileSHA512 = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filesha512()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filesha512().data(), this->filesha512().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.BlockList4Down.FileSHA512"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string BlockNumer = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_blocknumer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->blocknumer().data(), this->blocknumer().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.BlockList4Down.BlockNumer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SaveServersIP = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_saveserversip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->saveserversip().data(), this->saveserversip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.BlockList4Down.SaveServersIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.BlockList4Down)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.BlockList4Down)
  return false;
#undef DO_
}

void BlockList4Down::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.BlockList4Down)
  // string FileSHA512 = 1;
  if (this->filesha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesha512().data(), this->filesha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockList4Down.FileSHA512");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filesha512(), output);
  }

  // string BlockNumer = 2;
  if (this->blocknumer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->blocknumer().data(), this->blocknumer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockList4Down.BlockNumer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->blocknumer(), output);
  }

  // string SaveServersIP = 3;
  if (this->saveserversip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->saveserversip().data(), this->saveserversip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockList4Down.SaveServersIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->saveserversip(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.BlockList4Down)
}

::google::protobuf::uint8* BlockList4Down::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.BlockList4Down)
  // string FileSHA512 = 1;
  if (this->filesha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesha512().data(), this->filesha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockList4Down.FileSHA512");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filesha512(), target);
  }

  // string BlockNumer = 2;
  if (this->blocknumer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->blocknumer().data(), this->blocknumer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockList4Down.BlockNumer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->blocknumer(), target);
  }

  // string SaveServersIP = 3;
  if (this->saveserversip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->saveserversip().data(), this->saveserversip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockList4Down.SaveServersIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->saveserversip(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.BlockList4Down)
  return target;
}

size_t BlockList4Down::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.BlockList4Down)
  size_t total_size = 0;

  // string FileSHA512 = 1;
  if (this->filesha512().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filesha512());
  }

  // string BlockNumer = 2;
  if (this->blocknumer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->blocknumer());
  }

  // string SaveServersIP = 3;
  if (this->saveserversip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->saveserversip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockList4Down::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.BlockList4Down)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockList4Down* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockList4Down>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.BlockList4Down)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.BlockList4Down)
    MergeFrom(*source);
  }
}

void BlockList4Down::MergeFrom(const BlockList4Down& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.BlockList4Down)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.filesha512().size() > 0) {

    filesha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesha512_);
  }
  if (from.blocknumer().size() > 0) {

    blocknumer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blocknumer_);
  }
  if (from.saveserversip().size() > 0) {

    saveserversip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.saveserversip_);
  }
}

void BlockList4Down::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.BlockList4Down)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockList4Down::CopyFrom(const BlockList4Down& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.BlockList4Down)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockList4Down::IsInitialized() const {
  return true;
}

void BlockList4Down::Swap(BlockList4Down* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockList4Down::InternalSwap(BlockList4Down* other) {
  filesha512_.Swap(&other->filesha512_);
  blocknumer_.Swap(&other->blocknumer_);
  saveserversip_.Swap(&other->saveserversip_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockList4Down::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockList4Down

// string FileSHA512 = 1;
void BlockList4Down::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockList4Down::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockList4Down.FileSHA512)
  return filesha512_.GetNoArena();
}
void BlockList4Down::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockList4Down.FileSHA512)
}
#if LANG_CXX11
void BlockList4Down::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockList4Down.FileSHA512)
}
#endif
void BlockList4Down::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockList4Down.FileSHA512)
}
void BlockList4Down::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockList4Down.FileSHA512)
}
::std::string* BlockList4Down::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockList4Down.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockList4Down::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockList4Down.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockList4Down::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockList4Down.FileSHA512)
}

// string BlockNumer = 2;
void BlockList4Down::clear_blocknumer() {
  blocknumer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockList4Down::blocknumer() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockList4Down.BlockNumer)
  return blocknumer_.GetNoArena();
}
void BlockList4Down::set_blocknumer(const ::std::string& value) {
  
  blocknumer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockList4Down.BlockNumer)
}
#if LANG_CXX11
void BlockList4Down::set_blocknumer(::std::string&& value) {
  
  blocknumer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockList4Down.BlockNumer)
}
#endif
void BlockList4Down::set_blocknumer(const char* value) {
  
  blocknumer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockList4Down.BlockNumer)
}
void BlockList4Down::set_blocknumer(const char* value, size_t size) {
  
  blocknumer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockList4Down.BlockNumer)
}
::std::string* BlockList4Down::mutable_blocknumer() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockList4Down.BlockNumer)
  return blocknumer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockList4Down::release_blocknumer() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockList4Down.BlockNumer)
  
  return blocknumer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockList4Down::set_allocated_blocknumer(::std::string* blocknumer) {
  if (blocknumer != NULL) {
    
  } else {
    
  }
  blocknumer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blocknumer);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockList4Down.BlockNumer)
}

// string SaveServersIP = 3;
void BlockList4Down::clear_saveserversip() {
  saveserversip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockList4Down::saveserversip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockList4Down.SaveServersIP)
  return saveserversip_.GetNoArena();
}
void BlockList4Down::set_saveserversip(const ::std::string& value) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockList4Down.SaveServersIP)
}
#if LANG_CXX11
void BlockList4Down::set_saveserversip(::std::string&& value) {
  
  saveserversip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockList4Down.SaveServersIP)
}
#endif
void BlockList4Down::set_saveserversip(const char* value) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockList4Down.SaveServersIP)
}
void BlockList4Down::set_saveserversip(const char* value, size_t size) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockList4Down.SaveServersIP)
}
::std::string* BlockList4Down::mutable_saveserversip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockList4Down.SaveServersIP)
  return saveserversip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockList4Down::release_saveserversip() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockList4Down.SaveServersIP)
  
  return saveserversip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockList4Down::set_allocated_saveserversip(::std::string* saveserversip) {
  if (saveserversip != NULL) {
    
  } else {
    
  }
  saveserversip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), saveserversip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockList4Down.SaveServersIP)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockList4DownTable::kBlockListForDownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockList4DownTable::BlockList4DownTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.BlockList4DownTable)
}
BlockList4DownTable::BlockList4DownTable(const BlockList4DownTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      blocklistfordown_(from.blocklistfordown_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.BlockList4DownTable)
}

void BlockList4DownTable::SharedCtor() {
  _cached_size_ = 0;
}

BlockList4DownTable::~BlockList4DownTable() {
  // @@protoc_insertion_point(destructor:qiuwanli.BlockList4DownTable)
  SharedDtor();
}

void BlockList4DownTable::SharedDtor() {
}

void BlockList4DownTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockList4DownTable::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[9].descriptor;
}

const BlockList4DownTable& BlockList4DownTable::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlockList4DownTable* BlockList4DownTable::New(::google::protobuf::Arena* arena) const {
  BlockList4DownTable* n = new BlockList4DownTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockList4DownTable::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.BlockList4DownTable)
  blocklistfordown_.Clear();
}

bool BlockList4DownTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.BlockList4DownTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.BlockList4Down BlockListForDown = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_blocklistfordown()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.BlockList4DownTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.BlockList4DownTable)
  return false;
#undef DO_
}

void BlockList4DownTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.BlockList4DownTable)
  // repeated .qiuwanli.BlockList4Down BlockListForDown = 1;
  for (unsigned int i = 0, n = this->blocklistfordown_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->blocklistfordown(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.BlockList4DownTable)
}

::google::protobuf::uint8* BlockList4DownTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.BlockList4DownTable)
  // repeated .qiuwanli.BlockList4Down BlockListForDown = 1;
  for (unsigned int i = 0, n = this->blocklistfordown_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->blocklistfordown(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.BlockList4DownTable)
  return target;
}

size_t BlockList4DownTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.BlockList4DownTable)
  size_t total_size = 0;

  // repeated .qiuwanli.BlockList4Down BlockListForDown = 1;
  {
    unsigned int count = this->blocklistfordown_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->blocklistfordown(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockList4DownTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.BlockList4DownTable)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockList4DownTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockList4DownTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.BlockList4DownTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.BlockList4DownTable)
    MergeFrom(*source);
  }
}

void BlockList4DownTable::MergeFrom(const BlockList4DownTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.BlockList4DownTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  blocklistfordown_.MergeFrom(from.blocklistfordown_);
}

void BlockList4DownTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.BlockList4DownTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockList4DownTable::CopyFrom(const BlockList4DownTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.BlockList4DownTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockList4DownTable::IsInitialized() const {
  return true;
}

void BlockList4DownTable::Swap(BlockList4DownTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockList4DownTable::InternalSwap(BlockList4DownTable* other) {
  blocklistfordown_.UnsafeArenaSwap(&other->blocklistfordown_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockList4DownTable::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockList4DownTable

// repeated .qiuwanli.BlockList4Down BlockListForDown = 1;
int BlockList4DownTable::blocklistfordown_size() const {
  return blocklistfordown_.size();
}
void BlockList4DownTable::clear_blocklistfordown() {
  blocklistfordown_.Clear();
}
const ::qiuwanli::BlockList4Down& BlockList4DownTable::blocklistfordown(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockList4DownTable.BlockListForDown)
  return blocklistfordown_.Get(index);
}
::qiuwanli::BlockList4Down* BlockList4DownTable::mutable_blocklistfordown(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockList4DownTable.BlockListForDown)
  return blocklistfordown_.Mutable(index);
}
::qiuwanli::BlockList4Down* BlockList4DownTable::add_blocklistfordown() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockList4DownTable.BlockListForDown)
  return blocklistfordown_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockList4Down >*
BlockList4DownTable::mutable_blocklistfordown() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockList4DownTable.BlockListForDown)
  return &blocklistfordown_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockList4Down >&
BlockList4DownTable::blocklistfordown() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockList4DownTable.BlockListForDown)
  return blocklistfordown_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockInfo2Server::kFileSHA512FieldNumber;
const int BlockInfo2Server::kBlockNumerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockInfo2Server::BlockInfo2Server()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.BlockInfo2Server)
}
BlockInfo2Server::BlockInfo2Server(const BlockInfo2Server& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      blocknumer_(from.blocknumer_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filesha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filesha512().size() > 0) {
    filesha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesha512_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.BlockInfo2Server)
}

void BlockInfo2Server::SharedCtor() {
  filesha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BlockInfo2Server::~BlockInfo2Server() {
  // @@protoc_insertion_point(destructor:qiuwanli.BlockInfo2Server)
  SharedDtor();
}

void BlockInfo2Server::SharedDtor() {
  filesha512_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlockInfo2Server::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockInfo2Server::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[10].descriptor;
}

const BlockInfo2Server& BlockInfo2Server::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlockInfo2Server* BlockInfo2Server::New(::google::protobuf::Arena* arena) const {
  BlockInfo2Server* n = new BlockInfo2Server;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockInfo2Server::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.BlockInfo2Server)
  blocknumer_.Clear();
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BlockInfo2Server::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.BlockInfo2Server)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string FileSHA512 = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filesha512()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filesha512().data(), this->filesha512().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.BlockInfo2Server.FileSHA512"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 BlockNumer = 2;
      case 2: {
        if (tag == 18u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_blocknumer())));
        } else if (tag == 16u) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18u, input, this->mutable_blocknumer())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.BlockInfo2Server)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.BlockInfo2Server)
  return false;
#undef DO_
}

void BlockInfo2Server::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.BlockInfo2Server)
  // string FileSHA512 = 1;
  if (this->filesha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesha512().data(), this->filesha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockInfo2Server.FileSHA512");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filesha512(), output);
  }

  // repeated uint32 BlockNumer = 2;
  if (this->blocknumer_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_blocknumer_cached_byte_size_);
  }
  for (int i = 0; i < this->blocknumer_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->blocknumer(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.BlockInfo2Server)
}

::google::protobuf::uint8* BlockInfo2Server::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.BlockInfo2Server)
  // string FileSHA512 = 1;
  if (this->filesha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesha512().data(), this->filesha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockInfo2Server.FileSHA512");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filesha512(), target);
  }

  // repeated uint32 BlockNumer = 2;
  if (this->blocknumer_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _blocknumer_cached_byte_size_, target);
  }
  for (int i = 0; i < this->blocknumer_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->blocknumer(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.BlockInfo2Server)
  return target;
}

size_t BlockInfo2Server::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.BlockInfo2Server)
  size_t total_size = 0;

  // repeated uint32 BlockNumer = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->blocknumer_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _blocknumer_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string FileSHA512 = 1;
  if (this->filesha512().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filesha512());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockInfo2Server::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.BlockInfo2Server)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockInfo2Server* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockInfo2Server>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.BlockInfo2Server)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.BlockInfo2Server)
    MergeFrom(*source);
  }
}

void BlockInfo2Server::MergeFrom(const BlockInfo2Server& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.BlockInfo2Server)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  blocknumer_.MergeFrom(from.blocknumer_);
  if (from.filesha512().size() > 0) {

    filesha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesha512_);
  }
}

void BlockInfo2Server::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.BlockInfo2Server)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockInfo2Server::CopyFrom(const BlockInfo2Server& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.BlockInfo2Server)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockInfo2Server::IsInitialized() const {
  return true;
}

void BlockInfo2Server::Swap(BlockInfo2Server* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockInfo2Server::InternalSwap(BlockInfo2Server* other) {
  blocknumer_.UnsafeArenaSwap(&other->blocknumer_);
  filesha512_.Swap(&other->filesha512_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockInfo2Server::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockInfo2Server

// string FileSHA512 = 1;
void BlockInfo2Server::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockInfo2Server::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo2Server.FileSHA512)
  return filesha512_.GetNoArena();
}
void BlockInfo2Server::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo2Server.FileSHA512)
}
#if LANG_CXX11
void BlockInfo2Server::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockInfo2Server.FileSHA512)
}
#endif
void BlockInfo2Server::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockInfo2Server.FileSHA512)
}
void BlockInfo2Server::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockInfo2Server.FileSHA512)
}
::std::string* BlockInfo2Server::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfo2Server.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockInfo2Server::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockInfo2Server.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockInfo2Server::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockInfo2Server.FileSHA512)
}

// repeated uint32 BlockNumer = 2;
int BlockInfo2Server::blocknumer_size() const {
  return blocknumer_.size();
}
void BlockInfo2Server::clear_blocknumer() {
  blocknumer_.Clear();
}
::google::protobuf::uint32 BlockInfo2Server::blocknumer(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo2Server.BlockNumer)
  return blocknumer_.Get(index);
}
void BlockInfo2Server::set_blocknumer(int index, ::google::protobuf::uint32 value) {
  blocknumer_.Set(index, value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo2Server.BlockNumer)
}
void BlockInfo2Server::add_blocknumer(::google::protobuf::uint32 value) {
  blocknumer_.Add(value);
  // @@protoc_insertion_point(field_add:qiuwanli.BlockInfo2Server.BlockNumer)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BlockInfo2Server::blocknumer() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockInfo2Server.BlockNumer)
  return blocknumer_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BlockInfo2Server::mutable_blocknumer() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockInfo2Server.BlockNumer)
  return &blocknumer_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockInfo2ServerTable::kClientIPFieldNumber;
const int BlockInfo2ServerTable::kBlockInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockInfo2ServerTable::BlockInfo2ServerTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.BlockInfo2ServerTable)
}
BlockInfo2ServerTable::BlockInfo2ServerTable(const BlockInfo2ServerTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      blockinfo_(from.blockinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clientip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.clientip().size() > 0) {
    clientip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientip_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.BlockInfo2ServerTable)
}

void BlockInfo2ServerTable::SharedCtor() {
  clientip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BlockInfo2ServerTable::~BlockInfo2ServerTable() {
  // @@protoc_insertion_point(destructor:qiuwanli.BlockInfo2ServerTable)
  SharedDtor();
}

void BlockInfo2ServerTable::SharedDtor() {
  clientip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlockInfo2ServerTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockInfo2ServerTable::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[11].descriptor;
}

const BlockInfo2ServerTable& BlockInfo2ServerTable::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlockInfo2ServerTable* BlockInfo2ServerTable::New(::google::protobuf::Arena* arena) const {
  BlockInfo2ServerTable* n = new BlockInfo2ServerTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockInfo2ServerTable::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.BlockInfo2ServerTable)
  blockinfo_.Clear();
  clientip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BlockInfo2ServerTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.BlockInfo2ServerTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ClientIP = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->clientip().data(), this->clientip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.BlockInfo2ServerTable.ClientIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .qiuwanli.BlockInfo2Server BlockInfo = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_blockinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.BlockInfo2ServerTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.BlockInfo2ServerTable)
  return false;
#undef DO_
}

void BlockInfo2ServerTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.BlockInfo2ServerTable)
  // string ClientIP = 1;
  if (this->clientip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientip().data(), this->clientip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockInfo2ServerTable.ClientIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->clientip(), output);
  }

  // repeated .qiuwanli.BlockInfo2Server BlockInfo = 2;
  for (unsigned int i = 0, n = this->blockinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->blockinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.BlockInfo2ServerTable)
}

::google::protobuf::uint8* BlockInfo2ServerTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.BlockInfo2ServerTable)
  // string ClientIP = 1;
  if (this->clientip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->clientip().data(), this->clientip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockInfo2ServerTable.ClientIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->clientip(), target);
  }

  // repeated .qiuwanli.BlockInfo2Server BlockInfo = 2;
  for (unsigned int i = 0, n = this->blockinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->blockinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.BlockInfo2ServerTable)
  return target;
}

size_t BlockInfo2ServerTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.BlockInfo2ServerTable)
  size_t total_size = 0;

  // repeated .qiuwanli.BlockInfo2Server BlockInfo = 2;
  {
    unsigned int count = this->blockinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->blockinfo(i));
    }
  }

  // string ClientIP = 1;
  if (this->clientip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->clientip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockInfo2ServerTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.BlockInfo2ServerTable)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockInfo2ServerTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockInfo2ServerTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.BlockInfo2ServerTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.BlockInfo2ServerTable)
    MergeFrom(*source);
  }
}

void BlockInfo2ServerTable::MergeFrom(const BlockInfo2ServerTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.BlockInfo2ServerTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  blockinfo_.MergeFrom(from.blockinfo_);
  if (from.clientip().size() > 0) {

    clientip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.clientip_);
  }
}

void BlockInfo2ServerTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.BlockInfo2ServerTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockInfo2ServerTable::CopyFrom(const BlockInfo2ServerTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.BlockInfo2ServerTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockInfo2ServerTable::IsInitialized() const {
  return true;
}

void BlockInfo2ServerTable::Swap(BlockInfo2ServerTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockInfo2ServerTable::InternalSwap(BlockInfo2ServerTable* other) {
  blockinfo_.UnsafeArenaSwap(&other->blockinfo_);
  clientip_.Swap(&other->clientip_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockInfo2ServerTable::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockInfo2ServerTable

// string ClientIP = 1;
void BlockInfo2ServerTable::clear_clientip() {
  clientip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockInfo2ServerTable::clientip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo2ServerTable.ClientIP)
  return clientip_.GetNoArena();
}
void BlockInfo2ServerTable::set_clientip(const ::std::string& value) {
  
  clientip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo2ServerTable.ClientIP)
}
#if LANG_CXX11
void BlockInfo2ServerTable::set_clientip(::std::string&& value) {
  
  clientip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockInfo2ServerTable.ClientIP)
}
#endif
void BlockInfo2ServerTable::set_clientip(const char* value) {
  
  clientip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockInfo2ServerTable.ClientIP)
}
void BlockInfo2ServerTable::set_clientip(const char* value, size_t size) {
  
  clientip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockInfo2ServerTable.ClientIP)
}
::std::string* BlockInfo2ServerTable::mutable_clientip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfo2ServerTable.ClientIP)
  return clientip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockInfo2ServerTable::release_clientip() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockInfo2ServerTable.ClientIP)
  
  return clientip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockInfo2ServerTable::set_allocated_clientip(::std::string* clientip) {
  if (clientip != NULL) {
    
  } else {
    
  }
  clientip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockInfo2ServerTable.ClientIP)
}

// repeated .qiuwanli.BlockInfo2Server BlockInfo = 2;
int BlockInfo2ServerTable::blockinfo_size() const {
  return blockinfo_.size();
}
void BlockInfo2ServerTable::clear_blockinfo() {
  blockinfo_.Clear();
}
const ::qiuwanli::BlockInfo2Server& BlockInfo2ServerTable::blockinfo(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo2ServerTable.BlockInfo)
  return blockinfo_.Get(index);
}
::qiuwanli::BlockInfo2Server* BlockInfo2ServerTable::mutable_blockinfo(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfo2ServerTable.BlockInfo)
  return blockinfo_.Mutable(index);
}
::qiuwanli::BlockInfo2Server* BlockInfo2ServerTable::add_blockinfo() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockInfo2ServerTable.BlockInfo)
  return blockinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo2Server >*
BlockInfo2ServerTable::mutable_blockinfo() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockInfo2ServerTable.BlockInfo)
  return &blockinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo2Server >&
BlockInfo2ServerTable::blockinfo() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockInfo2ServerTable.BlockInfo)
  return blockinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfo::kUserIDFieldNumber;
const int UserInfo::kUserPSFieldNumber;
const int UserInfo::kFileSHA512FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfo::UserInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.UserInfo)
}
UserInfo::UserInfo(const UserInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      filesha512_(from.filesha512_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  userps_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userps().size() > 0) {
    userps_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userps_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.UserInfo)
}

void UserInfo::SharedCtor() {
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userps_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UserInfo::~UserInfo() {
  // @@protoc_insertion_point(destructor:qiuwanli.UserInfo)
  SharedDtor();
}

void UserInfo::SharedDtor() {
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userps_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfo::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[12].descriptor;
}

const UserInfo& UserInfo::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserInfo* UserInfo::New(::google::protobuf::Arena* arena) const {
  UserInfo* n = new UserInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.UserInfo)
  filesha512_.Clear();
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UserInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.UserInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string UserID = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.UserInfo.UserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UserPS = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userps()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userps().data(), this->userps().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.UserInfo.UserPS"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string FileSHA512 = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_filesha512()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filesha512(this->filesha512_size() - 1).data(),
            this->filesha512(this->filesha512_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.UserInfo.FileSHA512"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.UserInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.UserInfo)
  return false;
#undef DO_
}

void UserInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.UserInfo)
  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.UserInfo.UserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->userid(), output);
  }

  // string UserPS = 2;
  if (this->userps().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userps().data(), this->userps().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.UserInfo.UserPS");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->userps(), output);
  }

  // repeated string FileSHA512 = 3;
  for (int i = 0; i < this->filesha512_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesha512(i).data(), this->filesha512(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.UserInfo.FileSHA512");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->filesha512(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.UserInfo)
}

::google::protobuf::uint8* UserInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.UserInfo)
  // string UserID = 1;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.UserInfo.UserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->userid(), target);
  }

  // string UserPS = 2;
  if (this->userps().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userps().data(), this->userps().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.UserInfo.UserPS");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->userps(), target);
  }

  // repeated string FileSHA512 = 3;
  for (int i = 0; i < this->filesha512_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesha512(i).data(), this->filesha512(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.UserInfo.FileSHA512");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->filesha512(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.UserInfo)
  return target;
}

size_t UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.UserInfo)
  size_t total_size = 0;

  // repeated string FileSHA512 = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->filesha512_size());
  for (int i = 0; i < this->filesha512_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->filesha512(i));
  }

  // string UserID = 1;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  // string UserPS = 2;
  if (this->userps().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userps());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.UserInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.UserInfo)
    MergeFrom(*source);
  }
}

void UserInfo::MergeFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.UserInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filesha512_.MergeFrom(from.filesha512_);
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  if (from.userps().size() > 0) {

    userps_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userps_);
  }
}

void UserInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfo::CopyFrom(const UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfo::IsInitialized() const {
  return true;
}

void UserInfo::Swap(UserInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfo::InternalSwap(UserInfo* other) {
  filesha512_.UnsafeArenaSwap(&other->filesha512_);
  userid_.Swap(&other->userid_);
  userps_.Swap(&other->userps_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfo::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfo

// string UserID = 1;
void UserInfo::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::userid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.UserInfo.UserID)
  return userid_.GetNoArena();
}
void UserInfo::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.UserInfo.UserID)
}
#if LANG_CXX11
void UserInfo::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.UserInfo.UserID)
}
#endif
void UserInfo::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.UserInfo.UserID)
}
void UserInfo::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.UserInfo.UserID)
}
::std::string* UserInfo::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.UserInfo.UserID)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_userid() {
  // @@protoc_insertion_point(field_release:qiuwanli.UserInfo.UserID)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.UserInfo.UserID)
}

// string UserPS = 2;
void UserInfo::clear_userps() {
  userps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserInfo::userps() const {
  // @@protoc_insertion_point(field_get:qiuwanli.UserInfo.UserPS)
  return userps_.GetNoArena();
}
void UserInfo::set_userps(const ::std::string& value) {
  
  userps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.UserInfo.UserPS)
}
#if LANG_CXX11
void UserInfo::set_userps(::std::string&& value) {
  
  userps_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.UserInfo.UserPS)
}
#endif
void UserInfo::set_userps(const char* value) {
  
  userps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.UserInfo.UserPS)
}
void UserInfo::set_userps(const char* value, size_t size) {
  
  userps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.UserInfo.UserPS)
}
::std::string* UserInfo::mutable_userps() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.UserInfo.UserPS)
  return userps_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserInfo::release_userps() {
  // @@protoc_insertion_point(field_release:qiuwanli.UserInfo.UserPS)
  
  return userps_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserInfo::set_allocated_userps(::std::string* userps) {
  if (userps != NULL) {
    
  } else {
    
  }
  userps_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userps);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.UserInfo.UserPS)
}

// repeated string FileSHA512 = 3;
int UserInfo::filesha512_size() const {
  return filesha512_.size();
}
void UserInfo::clear_filesha512() {
  filesha512_.Clear();
}
const ::std::string& UserInfo::filesha512(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.UserInfo.FileSHA512)
  return filesha512_.Get(index);
}
::std::string* UserInfo::mutable_filesha512(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.UserInfo.FileSHA512)
  return filesha512_.Mutable(index);
}
void UserInfo::set_filesha512(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:qiuwanli.UserInfo.FileSHA512)
  filesha512_.Mutable(index)->assign(value);
}
void UserInfo::set_filesha512(int index, const char* value) {
  filesha512_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:qiuwanli.UserInfo.FileSHA512)
}
void UserInfo::set_filesha512(int index, const char* value, size_t size) {
  filesha512_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.UserInfo.FileSHA512)
}
::std::string* UserInfo::add_filesha512() {
  // @@protoc_insertion_point(field_add_mutable:qiuwanli.UserInfo.FileSHA512)
  return filesha512_.Add();
}
void UserInfo::add_filesha512(const ::std::string& value) {
  filesha512_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:qiuwanli.UserInfo.FileSHA512)
}
void UserInfo::add_filesha512(const char* value) {
  filesha512_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:qiuwanli.UserInfo.FileSHA512)
}
void UserInfo::add_filesha512(const char* value, size_t size) {
  filesha512_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:qiuwanli.UserInfo.FileSHA512)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
UserInfo::filesha512() const {
  // @@protoc_insertion_point(field_list:qiuwanli.UserInfo.FileSHA512)
  return filesha512_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
UserInfo::mutable_filesha512() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.UserInfo.FileSHA512)
  return &filesha512_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserInfoTable::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserInfoTable::UserInfoTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.UserInfoTable)
}
UserInfoTable::UserInfoTable(const UserInfoTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      user_(from.user_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.UserInfoTable)
}

void UserInfoTable::SharedCtor() {
  _cached_size_ = 0;
}

UserInfoTable::~UserInfoTable() {
  // @@protoc_insertion_point(destructor:qiuwanli.UserInfoTable)
  SharedDtor();
}

void UserInfoTable::SharedDtor() {
}

void UserInfoTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserInfoTable::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[13].descriptor;
}

const UserInfoTable& UserInfoTable::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

UserInfoTable* UserInfoTable::New(::google::protobuf::Arena* arena) const {
  UserInfoTable* n = new UserInfoTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserInfoTable::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.UserInfoTable)
  user_.Clear();
}

bool UserInfoTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.UserInfoTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.UserInfo User = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_user()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.UserInfoTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.UserInfoTable)
  return false;
#undef DO_
}

void UserInfoTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.UserInfoTable)
  // repeated .qiuwanli.UserInfo User = 1;
  for (unsigned int i = 0, n = this->user_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->user(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.UserInfoTable)
}

::google::protobuf::uint8* UserInfoTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.UserInfoTable)
  // repeated .qiuwanli.UserInfo User = 1;
  for (unsigned int i = 0, n = this->user_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->user(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.UserInfoTable)
  return target;
}

size_t UserInfoTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.UserInfoTable)
  size_t total_size = 0;

  // repeated .qiuwanli.UserInfo User = 1;
  {
    unsigned int count = this->user_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->user(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserInfoTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.UserInfoTable)
  GOOGLE_DCHECK_NE(&from, this);
  const UserInfoTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserInfoTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.UserInfoTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.UserInfoTable)
    MergeFrom(*source);
  }
}

void UserInfoTable::MergeFrom(const UserInfoTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.UserInfoTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_.MergeFrom(from.user_);
}

void UserInfoTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.UserInfoTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserInfoTable::CopyFrom(const UserInfoTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.UserInfoTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserInfoTable::IsInitialized() const {
  return true;
}

void UserInfoTable::Swap(UserInfoTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserInfoTable::InternalSwap(UserInfoTable* other) {
  user_.UnsafeArenaSwap(&other->user_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserInfoTable::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserInfoTable

// repeated .qiuwanli.UserInfo User = 1;
int UserInfoTable::user_size() const {
  return user_.size();
}
void UserInfoTable::clear_user() {
  user_.Clear();
}
const ::qiuwanli::UserInfo& UserInfoTable::user(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.UserInfoTable.User)
  return user_.Get(index);
}
::qiuwanli::UserInfo* UserInfoTable::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.UserInfoTable.User)
  return user_.Mutable(index);
}
::qiuwanli::UserInfo* UserInfoTable::add_user() {
  // @@protoc_insertion_point(field_add:qiuwanli.UserInfoTable.User)
  return user_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::UserInfo >*
UserInfoTable::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.UserInfoTable.User)
  return &user_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::UserInfo >&
UserInfoTable::user() const {
  // @@protoc_insertion_point(field_list:qiuwanli.UserInfoTable.User)
  return user_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Shared::kSharedUrlFieldNumber;
const int Shared::kFileSHA512FieldNumber;
const int Shared::kVerificationCodeFieldNumber;
const int Shared::kUserIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Shared::Shared()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.Shared)
}
Shared::Shared(const Shared& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sharedurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sharedurl().size() > 0) {
    sharedurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sharedurl_);
  }
  filesha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filesha512().size() > 0) {
    filesha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesha512_);
  }
  verificationcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.verificationcode().size() > 0) {
    verificationcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verificationcode_);
  }
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.userid().size() > 0) {
    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.Shared)
}

void Shared::SharedCtor() {
  sharedurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verificationcode_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Shared::~Shared() {
  // @@protoc_insertion_point(destructor:qiuwanli.Shared)
  SharedDtor();
}

void Shared::SharedDtor() {
  sharedurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesha512_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verificationcode_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Shared::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Shared::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[14].descriptor;
}

const Shared& Shared::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

Shared* Shared::New(::google::protobuf::Arena* arena) const {
  Shared* n = new Shared;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Shared::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.Shared)
  sharedurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  verificationcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Shared::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.Shared)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string SharedUrl = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sharedurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sharedurl().data(), this->sharedurl().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Shared.SharedUrl"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string FileSHA512 = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filesha512()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filesha512().data(), this->filesha512().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Shared.FileSHA512"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string VerificationCode = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_verificationcode()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->verificationcode().data(), this->verificationcode().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Shared.VerificationCode"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string UserID = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_userid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->userid().data(), this->userid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Shared.UserID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.Shared)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.Shared)
  return false;
#undef DO_
}

void Shared::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.Shared)
  // string SharedUrl = 1;
  if (this->sharedurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sharedurl().data(), this->sharedurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Shared.SharedUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sharedurl(), output);
  }

  // string FileSHA512 = 2;
  if (this->filesha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesha512().data(), this->filesha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Shared.FileSHA512");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filesha512(), output);
  }

  // string VerificationCode = 3;
  if (this->verificationcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verificationcode().data(), this->verificationcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Shared.VerificationCode");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->verificationcode(), output);
  }

  // string UserID = 4;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Shared.UserID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->userid(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.Shared)
}

::google::protobuf::uint8* Shared::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.Shared)
  // string SharedUrl = 1;
  if (this->sharedurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sharedurl().data(), this->sharedurl().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Shared.SharedUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sharedurl(), target);
  }

  // string FileSHA512 = 2;
  if (this->filesha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesha512().data(), this->filesha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Shared.FileSHA512");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filesha512(), target);
  }

  // string VerificationCode = 3;
  if (this->verificationcode().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->verificationcode().data(), this->verificationcode().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Shared.VerificationCode");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->verificationcode(), target);
  }

  // string UserID = 4;
  if (this->userid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->userid().data(), this->userid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Shared.UserID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->userid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.Shared)
  return target;
}

size_t Shared::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.Shared)
  size_t total_size = 0;

  // string SharedUrl = 1;
  if (this->sharedurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sharedurl());
  }

  // string FileSHA512 = 2;
  if (this->filesha512().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filesha512());
  }

  // string VerificationCode = 3;
  if (this->verificationcode().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->verificationcode());
  }

  // string UserID = 4;
  if (this->userid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Shared::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.Shared)
  GOOGLE_DCHECK_NE(&from, this);
  const Shared* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Shared>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.Shared)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.Shared)
    MergeFrom(*source);
  }
}

void Shared::MergeFrom(const Shared& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.Shared)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.sharedurl().size() > 0) {

    sharedurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sharedurl_);
  }
  if (from.filesha512().size() > 0) {

    filesha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesha512_);
  }
  if (from.verificationcode().size() > 0) {

    verificationcode_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.verificationcode_);
  }
  if (from.userid().size() > 0) {

    userid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.userid_);
  }
}

void Shared::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.Shared)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Shared::CopyFrom(const Shared& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.Shared)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Shared::IsInitialized() const {
  return true;
}

void Shared::Swap(Shared* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Shared::InternalSwap(Shared* other) {
  sharedurl_.Swap(&other->sharedurl_);
  filesha512_.Swap(&other->filesha512_);
  verificationcode_.Swap(&other->verificationcode_);
  userid_.Swap(&other->userid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Shared::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Shared

// string SharedUrl = 1;
void Shared::clear_sharedurl() {
  sharedurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Shared::sharedurl() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Shared.SharedUrl)
  return sharedurl_.GetNoArena();
}
void Shared::set_sharedurl(const ::std::string& value) {
  
  sharedurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Shared.SharedUrl)
}
#if LANG_CXX11
void Shared::set_sharedurl(::std::string&& value) {
  
  sharedurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Shared.SharedUrl)
}
#endif
void Shared::set_sharedurl(const char* value) {
  
  sharedurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Shared.SharedUrl)
}
void Shared::set_sharedurl(const char* value, size_t size) {
  
  sharedurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Shared.SharedUrl)
}
::std::string* Shared::mutable_sharedurl() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Shared.SharedUrl)
  return sharedurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Shared::release_sharedurl() {
  // @@protoc_insertion_point(field_release:qiuwanli.Shared.SharedUrl)
  
  return sharedurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Shared::set_allocated_sharedurl(::std::string* sharedurl) {
  if (sharedurl != NULL) {
    
  } else {
    
  }
  sharedurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sharedurl);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Shared.SharedUrl)
}

// string FileSHA512 = 2;
void Shared::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Shared::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Shared.FileSHA512)
  return filesha512_.GetNoArena();
}
void Shared::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Shared.FileSHA512)
}
#if LANG_CXX11
void Shared::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Shared.FileSHA512)
}
#endif
void Shared::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Shared.FileSHA512)
}
void Shared::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Shared.FileSHA512)
}
::std::string* Shared::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Shared.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Shared::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.Shared.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Shared::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Shared.FileSHA512)
}

// string VerificationCode = 3;
void Shared::clear_verificationcode() {
  verificationcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Shared::verificationcode() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Shared.VerificationCode)
  return verificationcode_.GetNoArena();
}
void Shared::set_verificationcode(const ::std::string& value) {
  
  verificationcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Shared.VerificationCode)
}
#if LANG_CXX11
void Shared::set_verificationcode(::std::string&& value) {
  
  verificationcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Shared.VerificationCode)
}
#endif
void Shared::set_verificationcode(const char* value) {
  
  verificationcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Shared.VerificationCode)
}
void Shared::set_verificationcode(const char* value, size_t size) {
  
  verificationcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Shared.VerificationCode)
}
::std::string* Shared::mutable_verificationcode() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Shared.VerificationCode)
  return verificationcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Shared::release_verificationcode() {
  // @@protoc_insertion_point(field_release:qiuwanli.Shared.VerificationCode)
  
  return verificationcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Shared::set_allocated_verificationcode(::std::string* verificationcode) {
  if (verificationcode != NULL) {
    
  } else {
    
  }
  verificationcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verificationcode);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Shared.VerificationCode)
}

// string UserID = 4;
void Shared::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Shared::userid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Shared.UserID)
  return userid_.GetNoArena();
}
void Shared::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Shared.UserID)
}
#if LANG_CXX11
void Shared::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Shared.UserID)
}
#endif
void Shared::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Shared.UserID)
}
void Shared::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Shared.UserID)
}
::std::string* Shared::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Shared.UserID)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Shared::release_userid() {
  // @@protoc_insertion_point(field_release:qiuwanli.Shared.UserID)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Shared::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Shared.UserID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SharedTable::kSharedInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SharedTable::SharedTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.SharedTable)
}
SharedTable::SharedTable(const SharedTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      sharedinfo_(from.sharedinfo_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qiuwanli.SharedTable)
}

void SharedTable::SharedCtor() {
  _cached_size_ = 0;
}

SharedTable::~SharedTable() {
  // @@protoc_insertion_point(destructor:qiuwanli.SharedTable)
  SharedDtor();
}

void SharedTable::SharedDtor() {
}

void SharedTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SharedTable::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[15].descriptor;
}

const SharedTable& SharedTable::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

SharedTable* SharedTable::New(::google::protobuf::Arena* arena) const {
  SharedTable* n = new SharedTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SharedTable::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.SharedTable)
  sharedinfo_.Clear();
}

bool SharedTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.SharedTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .qiuwanli.Shared SharedInfo = 1;
      case 1: {
        if (tag == 10u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sharedinfo()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.SharedTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.SharedTable)
  return false;
#undef DO_
}

void SharedTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.SharedTable)
  // repeated .qiuwanli.Shared SharedInfo = 1;
  for (unsigned int i = 0, n = this->sharedinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sharedinfo(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.SharedTable)
}

::google::protobuf::uint8* SharedTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.SharedTable)
  // repeated .qiuwanli.Shared SharedInfo = 1;
  for (unsigned int i = 0, n = this->sharedinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->sharedinfo(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.SharedTable)
  return target;
}

size_t SharedTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.SharedTable)
  size_t total_size = 0;

  // repeated .qiuwanli.Shared SharedInfo = 1;
  {
    unsigned int count = this->sharedinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sharedinfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SharedTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.SharedTable)
  GOOGLE_DCHECK_NE(&from, this);
  const SharedTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SharedTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.SharedTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.SharedTable)
    MergeFrom(*source);
  }
}

void SharedTable::MergeFrom(const SharedTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.SharedTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sharedinfo_.MergeFrom(from.sharedinfo_);
}

void SharedTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.SharedTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SharedTable::CopyFrom(const SharedTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.SharedTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SharedTable::IsInitialized() const {
  return true;
}

void SharedTable::Swap(SharedTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SharedTable::InternalSwap(SharedTable* other) {
  sharedinfo_.UnsafeArenaSwap(&other->sharedinfo_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SharedTable::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SharedTable

// repeated .qiuwanli.Shared SharedInfo = 1;
int SharedTable::sharedinfo_size() const {
  return sharedinfo_.size();
}
void SharedTable::clear_sharedinfo() {
  sharedinfo_.Clear();
}
const ::qiuwanli::Shared& SharedTable::sharedinfo(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.SharedTable.SharedInfo)
  return sharedinfo_.Get(index);
}
::qiuwanli::Shared* SharedTable::mutable_sharedinfo(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.SharedTable.SharedInfo)
  return sharedinfo_.Mutable(index);
}
::qiuwanli::Shared* SharedTable::add_sharedinfo() {
  // @@protoc_insertion_point(field_add:qiuwanli.SharedTable.SharedInfo)
  return sharedinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::Shared >*
SharedTable::mutable_sharedinfo() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.SharedTable.SharedInfo)
  return &sharedinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Shared >&
SharedTable::sharedinfo() const {
  // @@protoc_insertion_point(field_list:qiuwanli.SharedTable.SharedInfo)
  return sharedinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Logs::kUserIdFieldNumber;
const int Logs::kLogDateFieldNumber;
const int Logs::kLogInfoFieldNumber;
const int Logs::kLogTypeFieldNumber;
const int Logs::kUserClientUUIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Logs::Logs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.Logs)
}
Logs::Logs(const Logs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  log_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_info().size() > 0) {
    log_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_info_);
  }
  log_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.log_type().size() > 0) {
    log_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_type_);
  }
  user_client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_client_uuid().size() > 0) {
    user_client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_uuid_);
  }
  log_date_ = from.log_date_;
  // @@protoc_insertion_point(copy_constructor:qiuwanli.Logs)
}

void Logs::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_date_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

Logs::~Logs() {
  // @@protoc_insertion_point(destructor:qiuwanli.Logs)
  SharedDtor();
}

void Logs::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Logs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Logs::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[16].descriptor;
}

const Logs& Logs::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

Logs* Logs::New(::google::protobuf::Arena* arena) const {
  Logs* n = new Logs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Logs::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.Logs)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_date_ = GOOGLE_ULONGLONG(0);
}

bool Logs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.Logs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Logs.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 log_date = 2;
      case 2: {
        if (tag == 16u) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &log_date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string log_info = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_log_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->log_info().data(), this->log_info().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Logs.log_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes log_type = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_log_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_client_UUID = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_client_uuid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_client_uuid().data(), this->user_client_uuid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.Logs.user_client_UUID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.Logs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.Logs)
  return false;
#undef DO_
}

void Logs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.Logs)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // uint64 log_date = 2;
  if (this->log_date() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->log_date(), output);
  }

  // string log_info = 3;
  if (this->log_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_info().data(), this->log_info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.log_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->log_info(), output);
  }

  // bytes log_type = 4;
  if (this->log_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->log_type(), output);
  }

  // string user_client_UUID = 5;
  if (this->user_client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_client_uuid().data(), this->user_client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.user_client_UUID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->user_client_uuid(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.Logs)
}

::google::protobuf::uint8* Logs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.Logs)
  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // uint64 log_date = 2;
  if (this->log_date() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->log_date(), target);
  }

  // string log_info = 3;
  if (this->log_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->log_info().data(), this->log_info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.log_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->log_info(), target);
  }

  // bytes log_type = 4;
  if (this->log_type().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->log_type(), target);
  }

  // string user_client_UUID = 5;
  if (this->user_client_uuid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_client_uuid().data(), this->user_client_uuid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.Logs.user_client_UUID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->user_client_uuid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.Logs)
  return target;
}

size_t Logs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.Logs)
  size_t total_size = 0;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string log_info = 3;
  if (this->log_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->log_info());
  }

  // bytes log_type = 4;
  if (this->log_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->log_type());
  }

  // string user_client_UUID = 5;
  if (this->user_client_uuid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_client_uuid());
  }

  // uint64 log_date = 2;
  if (this->log_date() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->log_date());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Logs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.Logs)
  GOOGLE_DCHECK_NE(&from, this);
  const Logs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Logs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.Logs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.Logs)
    MergeFrom(*source);
  }
}

void Logs::MergeFrom(const Logs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.Logs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.log_info().size() > 0) {

    log_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_info_);
  }
  if (from.log_type().size() > 0) {

    log_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.log_type_);
  }
  if (from.user_client_uuid().size() > 0) {

    user_client_uuid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_client_uuid_);
  }
  if (from.log_date() != 0) {
    set_log_date(from.log_date());
  }
}

void Logs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.Logs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Logs::CopyFrom(const Logs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.Logs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Logs::IsInitialized() const {
  return true;
}

void Logs::Swap(Logs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Logs::InternalSwap(Logs* other) {
  user_id_.Swap(&other->user_id_);
  log_info_.Swap(&other->log_info_);
  log_type_.Swap(&other->log_type_);
  user_client_uuid_.Swap(&other->user_client_uuid_);
  std::swap(log_date_, other->log_date_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Logs::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[16];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Logs

// string user_id = 1;
void Logs::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Logs::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.user_id)
  return user_id_.GetNoArena();
}
void Logs::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.user_id)
}
#if LANG_CXX11
void Logs::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.user_id)
}
#endif
void Logs::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.user_id)
}
void Logs::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.user_id)
}
::std::string* Logs::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Logs::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Logs::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.user_id)
}

// uint64 log_date = 2;
void Logs::clear_log_date() {
  log_date_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 Logs::log_date() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_date)
  return log_date_;
}
void Logs::set_log_date(::google::protobuf::uint64 value) {
  
  log_date_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_date)
}

// string log_info = 3;
void Logs::clear_log_info() {
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Logs::log_info() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_info)
  return log_info_.GetNoArena();
}
void Logs::set_log_info(const ::std::string& value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_info)
}
#if LANG_CXX11
void Logs::set_log_info(::std::string&& value) {
  
  log_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_info)
}
#endif
void Logs::set_log_info(const char* value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_info)
}
void Logs::set_log_info(const char* value, size_t size) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_info)
}
::std::string* Logs::mutable_log_info() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_info)
  return log_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Logs::release_log_info() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_info)
  
  return log_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Logs::set_allocated_log_info(::std::string* log_info) {
  if (log_info != NULL) {
    
  } else {
    
  }
  log_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_info);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_info)
}

// bytes log_type = 4;
void Logs::clear_log_type() {
  log_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Logs::log_type() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_type)
  return log_type_.GetNoArena();
}
void Logs::set_log_type(const ::std::string& value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_type)
}
#if LANG_CXX11
void Logs::set_log_type(::std::string&& value) {
  
  log_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_type)
}
#endif
void Logs::set_log_type(const char* value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_type)
}
void Logs::set_log_type(const void* value, size_t size) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_type)
}
::std::string* Logs::mutable_log_type() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_type)
  return log_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Logs::release_log_type() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_type)
  
  return log_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Logs::set_allocated_log_type(::std::string* log_type) {
  if (log_type != NULL) {
    
  } else {
    
  }
  log_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_type);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_type)
}

// string user_client_UUID = 5;
void Logs::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Logs::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
void Logs::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.user_client_UUID)
}
#if LANG_CXX11
void Logs::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.user_client_UUID)
}
#endif
void Logs::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.user_client_UUID)
}
void Logs::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.user_client_UUID)
}
::std::string* Logs::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Logs::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Logs::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.user_client_UUID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogTable::kLogdateFieldNumber;
const int LogTable::kLogFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogTable::LogTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.LogTable)
}
LogTable::LogTable(const LogTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      log_(from.log_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  logdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.logdate().size() > 0) {
    logdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logdate_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.LogTable)
}

void LogTable::SharedCtor() {
  logdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LogTable::~LogTable() {
  // @@protoc_insertion_point(destructor:qiuwanli.LogTable)
  SharedDtor();
}

void LogTable::SharedDtor() {
  logdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogTable::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[17].descriptor;
}

const LogTable& LogTable::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogTable* LogTable::New(::google::protobuf::Arena* arena) const {
  LogTable* n = new LogTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogTable::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.LogTable)
  log_.Clear();
  logdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LogTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.LogTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string logdate = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_logdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->logdate().data(), this->logdate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.LogTable.logdate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .qiuwanli.Logs log = 2;
      case 2: {
        if (tag == 18u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_log()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.LogTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.LogTable)
  return false;
#undef DO_
}

void LogTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.LogTable)
  // string logdate = 1;
  if (this->logdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logdate().data(), this->logdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.LogTable.logdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->logdate(), output);
  }

  // repeated .qiuwanli.Logs log = 2;
  for (unsigned int i = 0, n = this->log_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->log(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.LogTable)
}

::google::protobuf::uint8* LogTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.LogTable)
  // string logdate = 1;
  if (this->logdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->logdate().data(), this->logdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.LogTable.logdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->logdate(), target);
  }

  // repeated .qiuwanli.Logs log = 2;
  for (unsigned int i = 0, n = this->log_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->log(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.LogTable)
  return target;
}

size_t LogTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.LogTable)
  size_t total_size = 0;

  // repeated .qiuwanli.Logs log = 2;
  {
    unsigned int count = this->log_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->log(i));
    }
  }

  // string logdate = 1;
  if (this->logdate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->logdate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.LogTable)
  GOOGLE_DCHECK_NE(&from, this);
  const LogTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.LogTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.LogTable)
    MergeFrom(*source);
  }
}

void LogTable::MergeFrom(const LogTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.LogTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  log_.MergeFrom(from.log_);
  if (from.logdate().size() > 0) {

    logdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.logdate_);
  }
}

void LogTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.LogTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogTable::CopyFrom(const LogTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.LogTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogTable::IsInitialized() const {
  return true;
}

void LogTable::Swap(LogTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogTable::InternalSwap(LogTable* other) {
  log_.UnsafeArenaSwap(&other->log_);
  logdate_.Swap(&other->logdate_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogTable::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[17];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogTable

// string logdate = 1;
void LogTable::clear_logdate() {
  logdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LogTable::logdate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.LogTable.logdate)
  return logdate_.GetNoArena();
}
void LogTable::set_logdate(const ::std::string& value) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.LogTable.logdate)
}
#if LANG_CXX11
void LogTable::set_logdate(::std::string&& value) {
  
  logdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.LogTable.logdate)
}
#endif
void LogTable::set_logdate(const char* value) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.LogTable.logdate)
}
void LogTable::set_logdate(const char* value, size_t size) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.LogTable.logdate)
}
::std::string* LogTable::mutable_logdate() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.LogTable.logdate)
  return logdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LogTable::release_logdate() {
  // @@protoc_insertion_point(field_release:qiuwanli.LogTable.logdate)
  
  return logdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LogTable::set_allocated_logdate(::std::string* logdate) {
  if (logdate != NULL) {
    
  } else {
    
  }
  logdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logdate);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.LogTable.logdate)
}

// repeated .qiuwanli.Logs log = 2;
int LogTable::log_size() const {
  return log_.size();
}
void LogTable::clear_log() {
  log_.Clear();
}
const ::qiuwanli::Logs& LogTable::log(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.LogTable.log)
  return log_.Get(index);
}
::qiuwanli::Logs* LogTable::mutable_log(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.LogTable.log)
  return log_.Mutable(index);
}
::qiuwanli::Logs* LogTable::add_log() {
  // @@protoc_insertion_point(field_add:qiuwanli.LogTable.log)
  return log_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >*
LogTable::mutable_log() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.LogTable.log)
  return &log_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >&
LogTable::log() const {
  // @@protoc_insertion_point(field_list:qiuwanli.LogTable.log)
  return log_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockDown::kBlockNumerFieldNumber;
const int BlockDown::kSaveServersIPFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockDown::BlockDown()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.BlockDown)
}
BlockDown::BlockDown(const BlockDown& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  blocknumer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.blocknumer().size() > 0) {
    blocknumer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blocknumer_);
  }
  saveserversip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.saveserversip().size() > 0) {
    saveserversip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.saveserversip_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.BlockDown)
}

void BlockDown::SharedCtor() {
  blocknumer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  saveserversip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BlockDown::~BlockDown() {
  // @@protoc_insertion_point(destructor:qiuwanli.BlockDown)
  SharedDtor();
}

void BlockDown::SharedDtor() {
  blocknumer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  saveserversip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlockDown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockDown::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[18].descriptor;
}

const BlockDown& BlockDown::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlockDown* BlockDown::New(::google::protobuf::Arena* arena) const {
  BlockDown* n = new BlockDown;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockDown::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.BlockDown)
  blocknumer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  saveserversip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BlockDown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.BlockDown)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string BlockNumer = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_blocknumer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->blocknumer().data(), this->blocknumer().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.BlockDown.BlockNumer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string SaveServersIP = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_saveserversip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->saveserversip().data(), this->saveserversip().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.BlockDown.SaveServersIP"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.BlockDown)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.BlockDown)
  return false;
#undef DO_
}

void BlockDown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.BlockDown)
  // string BlockNumer = 1;
  if (this->blocknumer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->blocknumer().data(), this->blocknumer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockDown.BlockNumer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->blocknumer(), output);
  }

  // string SaveServersIP = 2;
  if (this->saveserversip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->saveserversip().data(), this->saveserversip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockDown.SaveServersIP");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->saveserversip(), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.BlockDown)
}

::google::protobuf::uint8* BlockDown::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.BlockDown)
  // string BlockNumer = 1;
  if (this->blocknumer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->blocknumer().data(), this->blocknumer().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockDown.BlockNumer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->blocknumer(), target);
  }

  // string SaveServersIP = 2;
  if (this->saveserversip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->saveserversip().data(), this->saveserversip().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockDown.SaveServersIP");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->saveserversip(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.BlockDown)
  return target;
}

size_t BlockDown::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.BlockDown)
  size_t total_size = 0;

  // string BlockNumer = 1;
  if (this->blocknumer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->blocknumer());
  }

  // string SaveServersIP = 2;
  if (this->saveserversip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->saveserversip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockDown::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.BlockDown)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockDown* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockDown>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.BlockDown)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.BlockDown)
    MergeFrom(*source);
  }
}

void BlockDown::MergeFrom(const BlockDown& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.BlockDown)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.blocknumer().size() > 0) {

    blocknumer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blocknumer_);
  }
  if (from.saveserversip().size() > 0) {

    saveserversip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.saveserversip_);
  }
}

void BlockDown::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.BlockDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockDown::CopyFrom(const BlockDown& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.BlockDown)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockDown::IsInitialized() const {
  return true;
}

void BlockDown::Swap(BlockDown* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockDown::InternalSwap(BlockDown* other) {
  blocknumer_.Swap(&other->blocknumer_);
  saveserversip_.Swap(&other->saveserversip_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockDown::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[18];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockDown

// string BlockNumer = 1;
void BlockDown::clear_blocknumer() {
  blocknumer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockDown::blocknumer() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockDown.BlockNumer)
  return blocknumer_.GetNoArena();
}
void BlockDown::set_blocknumer(const ::std::string& value) {
  
  blocknumer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockDown.BlockNumer)
}
#if LANG_CXX11
void BlockDown::set_blocknumer(::std::string&& value) {
  
  blocknumer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockDown.BlockNumer)
}
#endif
void BlockDown::set_blocknumer(const char* value) {
  
  blocknumer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockDown.BlockNumer)
}
void BlockDown::set_blocknumer(const char* value, size_t size) {
  
  blocknumer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockDown.BlockNumer)
}
::std::string* BlockDown::mutable_blocknumer() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockDown.BlockNumer)
  return blocknumer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockDown::release_blocknumer() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockDown.BlockNumer)
  
  return blocknumer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockDown::set_allocated_blocknumer(::std::string* blocknumer) {
  if (blocknumer != NULL) {
    
  } else {
    
  }
  blocknumer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blocknumer);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockDown.BlockNumer)
}

// string SaveServersIP = 2;
void BlockDown::clear_saveserversip() {
  saveserversip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockDown::saveserversip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockDown.SaveServersIP)
  return saveserversip_.GetNoArena();
}
void BlockDown::set_saveserversip(const ::std::string& value) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockDown.SaveServersIP)
}
#if LANG_CXX11
void BlockDown::set_saveserversip(::std::string&& value) {
  
  saveserversip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockDown.SaveServersIP)
}
#endif
void BlockDown::set_saveserversip(const char* value) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockDown.SaveServersIP)
}
void BlockDown::set_saveserversip(const char* value, size_t size) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockDown.SaveServersIP)
}
::std::string* BlockDown::mutable_saveserversip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockDown.SaveServersIP)
  return saveserversip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockDown::release_saveserversip() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockDown.SaveServersIP)
  
  return saveserversip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockDown::set_allocated_saveserversip(::std::string* saveserversip) {
  if (saveserversip != NULL) {
    
  } else {
    
  }
  saveserversip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), saveserversip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockDown.SaveServersIP)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockListDownTable::kFileSHA512FieldNumber;
const int BlockListDownTable::kFileMD5FieldNumber;
const int BlockListDownTable::kBlockListForDownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockListDownTable::BlockListDownTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_DataStruct_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:qiuwanli.BlockListDownTable)
}
BlockListDownTable::BlockListDownTable(const BlockListDownTable& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      blocklistfordown_(from.blocklistfordown_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filesha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filesha512().size() > 0) {
    filesha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesha512_);
  }
  filemd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.filemd5().size() > 0) {
    filemd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filemd5_);
  }
  // @@protoc_insertion_point(copy_constructor:qiuwanli.BlockListDownTable)
}

void BlockListDownTable::SharedCtor() {
  filesha512_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

BlockListDownTable::~BlockListDownTable() {
  // @@protoc_insertion_point(destructor:qiuwanli.BlockListDownTable)
  SharedDtor();
}

void BlockListDownTable::SharedDtor() {
  filesha512_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlockListDownTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockListDownTable::descriptor() {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[19].descriptor;
}

const BlockListDownTable& BlockListDownTable::default_instance() {
  protobuf_DataStruct_2eproto::InitDefaults();
  return *internal_default_instance();
}

BlockListDownTable* BlockListDownTable::New(::google::protobuf::Arena* arena) const {
  BlockListDownTable* n = new BlockListDownTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BlockListDownTable::Clear() {
// @@protoc_insertion_point(message_clear_start:qiuwanli.BlockListDownTable)
  blocklistfordown_.Clear();
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool BlockListDownTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:qiuwanli.BlockListDownTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string FileSHA512 = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filesha512()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filesha512().data(), this->filesha512().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.BlockListDownTable.FileSHA512"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string FileMD5 = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filemd5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filemd5().data(), this->filemd5().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "qiuwanli.BlockListDownTable.FileMD5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .qiuwanli.BlockDown BlockListForDown = 3;
      case 3: {
        if (tag == 26u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_blocklistfordown()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:qiuwanli.BlockListDownTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:qiuwanli.BlockListDownTable)
  return false;
#undef DO_
}

void BlockListDownTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:qiuwanli.BlockListDownTable)
  // string FileSHA512 = 1;
  if (this->filesha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesha512().data(), this->filesha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockListDownTable.FileSHA512");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filesha512(), output);
  }

  // string FileMD5 = 2;
  if (this->filemd5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filemd5().data(), this->filemd5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockListDownTable.FileMD5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filemd5(), output);
  }

  // repeated .qiuwanli.BlockDown BlockListForDown = 3;
  for (unsigned int i = 0, n = this->blocklistfordown_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->blocklistfordown(i), output);
  }

  // @@protoc_insertion_point(serialize_end:qiuwanli.BlockListDownTable)
}

::google::protobuf::uint8* BlockListDownTable::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:qiuwanli.BlockListDownTable)
  // string FileSHA512 = 1;
  if (this->filesha512().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filesha512().data(), this->filesha512().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockListDownTable.FileSHA512");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filesha512(), target);
  }

  // string FileMD5 = 2;
  if (this->filemd5().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filemd5().data(), this->filemd5().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "qiuwanli.BlockListDownTable.FileMD5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filemd5(), target);
  }

  // repeated .qiuwanli.BlockDown BlockListForDown = 3;
  for (unsigned int i = 0, n = this->blocklistfordown_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->blocklistfordown(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:qiuwanli.BlockListDownTable)
  return target;
}

size_t BlockListDownTable::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qiuwanli.BlockListDownTable)
  size_t total_size = 0;

  // repeated .qiuwanli.BlockDown BlockListForDown = 3;
  {
    unsigned int count = this->blocklistfordown_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->blocklistfordown(i));
    }
  }

  // string FileSHA512 = 1;
  if (this->filesha512().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filesha512());
  }

  // string FileMD5 = 2;
  if (this->filemd5().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->filemd5());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockListDownTable::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:qiuwanli.BlockListDownTable)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockListDownTable* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockListDownTable>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:qiuwanli.BlockListDownTable)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:qiuwanli.BlockListDownTable)
    MergeFrom(*source);
  }
}

void BlockListDownTable::MergeFrom(const BlockListDownTable& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qiuwanli.BlockListDownTable)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  blocklistfordown_.MergeFrom(from.blocklistfordown_);
  if (from.filesha512().size() > 0) {

    filesha512_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filesha512_);
  }
  if (from.filemd5().size() > 0) {

    filemd5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filemd5_);
  }
}

void BlockListDownTable::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:qiuwanli.BlockListDownTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockListDownTable::CopyFrom(const BlockListDownTable& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qiuwanli.BlockListDownTable)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockListDownTable::IsInitialized() const {
  return true;
}

void BlockListDownTable::Swap(BlockListDownTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockListDownTable::InternalSwap(BlockListDownTable* other) {
  blocklistfordown_.UnsafeArenaSwap(&other->blocklistfordown_);
  filesha512_.Swap(&other->filesha512_);
  filemd5_.Swap(&other->filemd5_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BlockListDownTable::GetMetadata() const {
  protobuf_DataStruct_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_DataStruct_2eproto::file_level_metadata[19];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BlockListDownTable

// string FileSHA512 = 1;
void BlockListDownTable::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockListDownTable::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListDownTable.FileSHA512)
  return filesha512_.GetNoArena();
}
void BlockListDownTable::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockListDownTable.FileSHA512)
}
#if LANG_CXX11
void BlockListDownTable::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockListDownTable.FileSHA512)
}
#endif
void BlockListDownTable::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockListDownTable.FileSHA512)
}
void BlockListDownTable::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockListDownTable.FileSHA512)
}
::std::string* BlockListDownTable::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListDownTable.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockListDownTable::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockListDownTable.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockListDownTable::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockListDownTable.FileSHA512)
}

// string FileMD5 = 2;
void BlockListDownTable::clear_filemd5() {
  filemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BlockListDownTable::filemd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListDownTable.FileMD5)
  return filemd5_.GetNoArena();
}
void BlockListDownTable::set_filemd5(const ::std::string& value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockListDownTable.FileMD5)
}
#if LANG_CXX11
void BlockListDownTable::set_filemd5(::std::string&& value) {
  
  filemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockListDownTable.FileMD5)
}
#endif
void BlockListDownTable::set_filemd5(const char* value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockListDownTable.FileMD5)
}
void BlockListDownTable::set_filemd5(const char* value, size_t size) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockListDownTable.FileMD5)
}
::std::string* BlockListDownTable::mutable_filemd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListDownTable.FileMD5)
  return filemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BlockListDownTable::release_filemd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockListDownTable.FileMD5)
  
  return filemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BlockListDownTable::set_allocated_filemd5(::std::string* filemd5) {
  if (filemd5 != NULL) {
    
  } else {
    
  }
  filemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockListDownTable.FileMD5)
}

// repeated .qiuwanli.BlockDown BlockListForDown = 3;
int BlockListDownTable::blocklistfordown_size() const {
  return blocklistfordown_.size();
}
void BlockListDownTable::clear_blocklistfordown() {
  blocklistfordown_.Clear();
}
const ::qiuwanli::BlockDown& BlockListDownTable::blocklistfordown(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListDownTable.BlockListForDown)
  return blocklistfordown_.Get(index);
}
::qiuwanli::BlockDown* BlockListDownTable::mutable_blocklistfordown(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListDownTable.BlockListForDown)
  return blocklistfordown_.Mutable(index);
}
::qiuwanli::BlockDown* BlockListDownTable::add_blocklistfordown() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockListDownTable.BlockListForDown)
  return blocklistfordown_.Add();
}
::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockDown >*
BlockListDownTable::mutable_blocklistfordown() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockListDownTable.BlockListForDown)
  return &blocklistfordown_;
}
const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockDown >&
BlockListDownTable::blocklistfordown() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockListDownTable.BlockListForDown)
  return blocklistfordown_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace qiuwanli

// @@protoc_insertion_point(global_scope)
