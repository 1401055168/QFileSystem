// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: date.proto

#ifndef PROTOBUF_date_2eproto__INCLUDED
#define PROTOBUF_date_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace qiuwanli {
class AllLog;
class AllLogDefaultTypeInternal;
extern AllLogDefaultTypeInternal _AllLog_default_instance_;
class File2Cilent;
class File2CilentDefaultTypeInternal;
extern File2CilentDefaultTypeInternal _File2Cilent_default_instance_;
class File2ClientServers;
class File2ClientServersDefaultTypeInternal;
extern File2ClientServersDefaultTypeInternal _File2ClientServers_default_instance_;
class ID2IP;
class ID2IPDefaultTypeInternal;
extern ID2IPDefaultTypeInternal _ID2IP_default_instance_;
class ID2IPTable;
class ID2IPTableDefaultTypeInternal;
extern ID2IPTableDefaultTypeInternal _ID2IPTable_default_instance_;
class Logs;
class LogsDefaultTypeInternal;
extern LogsDefaultTypeInternal _Logs_default_instance_;
}  // namespace qiuwanli

namespace qiuwanli {

namespace protobuf_date_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_date_2eproto

// ===================================================================

class Logs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.Logs) */ {
 public:
  Logs();
  virtual ~Logs();

  Logs(const Logs& from);

  inline Logs& operator=(const Logs& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Logs& default_instance();

  static inline const Logs* internal_default_instance() {
    return reinterpret_cast<const Logs*>(
               &_Logs_default_instance_);
  }

  void Swap(Logs* other);

  // implements Message ----------------------------------------------

  inline Logs* New() const PROTOBUF_FINAL { return New(NULL); }

  Logs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Logs& from);
  void MergeFrom(const Logs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Logs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string log_info = 3;
  void clear_log_info();
  static const int kLogInfoFieldNumber = 3;
  const ::std::string& log_info() const;
  void set_log_info(const ::std::string& value);
  #if LANG_CXX11
  void set_log_info(::std::string&& value);
  #endif
  void set_log_info(const char* value);
  void set_log_info(const char* value, size_t size);
  ::std::string* mutable_log_info();
  ::std::string* release_log_info();
  void set_allocated_log_info(::std::string* log_info);

  // bytes log_type = 4;
  void clear_log_type();
  static const int kLogTypeFieldNumber = 4;
  const ::std::string& log_type() const;
  void set_log_type(const ::std::string& value);
  #if LANG_CXX11
  void set_log_type(::std::string&& value);
  #endif
  void set_log_type(const char* value);
  void set_log_type(const void* value, size_t size);
  ::std::string* mutable_log_type();
  ::std::string* release_log_type();
  void set_allocated_log_type(::std::string* log_type);

  // string user_client_UUID = 5;
  void clear_user_client_uuid();
  static const int kUserClientUUIDFieldNumber = 5;
  const ::std::string& user_client_uuid() const;
  void set_user_client_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_user_client_uuid(::std::string&& value);
  #endif
  void set_user_client_uuid(const char* value);
  void set_user_client_uuid(const char* value, size_t size);
  ::std::string* mutable_user_client_uuid();
  ::std::string* release_user_client_uuid();
  void set_allocated_user_client_uuid(::std::string* user_client_uuid);

  // uint64 log_date = 2;
  void clear_log_date();
  static const int kLogDateFieldNumber = 2;
  ::google::protobuf::uint64 log_date() const;
  void set_log_date(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.Logs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr log_info_;
  ::google::protobuf::internal::ArenaStringPtr log_type_;
  ::google::protobuf::internal::ArenaStringPtr user_client_uuid_;
  ::google::protobuf::uint64 log_date_;
  mutable int _cached_size_;
  friend struct  protobuf_date_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllLog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.AllLog) */ {
 public:
  AllLog();
  virtual ~AllLog();

  AllLog(const AllLog& from);

  inline AllLog& operator=(const AllLog& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllLog& default_instance();

  static inline const AllLog* internal_default_instance() {
    return reinterpret_cast<const AllLog*>(
               &_AllLog_default_instance_);
  }

  void Swap(AllLog* other);

  // implements Message ----------------------------------------------

  inline AllLog* New() const PROTOBUF_FINAL { return New(NULL); }

  AllLog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AllLog& from);
  void MergeFrom(const AllLog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AllLog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.Logs log = 2;
  int log_size() const;
  void clear_log();
  static const int kLogFieldNumber = 2;
  const ::qiuwanli::Logs& log(int index) const;
  ::qiuwanli::Logs* mutable_log(int index);
  ::qiuwanli::Logs* add_log();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >*
      mutable_log();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >&
      log() const;

  // string logdate = 1;
  void clear_logdate();
  static const int kLogdateFieldNumber = 1;
  const ::std::string& logdate() const;
  void set_logdate(const ::std::string& value);
  #if LANG_CXX11
  void set_logdate(::std::string&& value);
  #endif
  void set_logdate(const char* value);
  void set_logdate(const char* value, size_t size);
  ::std::string* mutable_logdate();
  ::std::string* release_logdate();
  void set_allocated_logdate(::std::string* logdate);

  // @@protoc_insertion_point(class_scope:qiuwanli.AllLog)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs > log_;
  ::google::protobuf::internal::ArenaStringPtr logdate_;
  mutable int _cached_size_;
  friend struct  protobuf_date_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class File2Cilent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.File2Cilent) */ {
 public:
  File2Cilent();
  virtual ~File2Cilent();

  File2Cilent(const File2Cilent& from);

  inline File2Cilent& operator=(const File2Cilent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const File2Cilent& default_instance();

  static inline const File2Cilent* internal_default_instance() {
    return reinterpret_cast<const File2Cilent*>(
               &_File2Cilent_default_instance_);
  }

  void Swap(File2Cilent* other);

  // implements Message ----------------------------------------------

  inline File2Cilent* New() const PROTOBUF_FINAL { return New(NULL); }

  File2Cilent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const File2Cilent& from);
  void MergeFrom(const File2Cilent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(File2Cilent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string FileName = 1;
  void clear_filename();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // string SHA512 = 2;
  void clear_sha512();
  static const int kSHA512FieldNumber = 2;
  const ::std::string& sha512() const;
  void set_sha512(const ::std::string& value);
  #if LANG_CXX11
  void set_sha512(::std::string&& value);
  #endif
  void set_sha512(const char* value);
  void set_sha512(const char* value, size_t size);
  ::std::string* mutable_sha512();
  ::std::string* release_sha512();
  void set_allocated_sha512(::std::string* sha512);

  // string CilentID = 3;
  void clear_cilentid();
  static const int kCilentIDFieldNumber = 3;
  const ::std::string& cilentid() const;
  void set_cilentid(const ::std::string& value);
  #if LANG_CXX11
  void set_cilentid(::std::string&& value);
  #endif
  void set_cilentid(const char* value);
  void set_cilentid(const char* value, size_t size);
  ::std::string* mutable_cilentid();
  ::std::string* release_cilentid();
  void set_allocated_cilentid(::std::string* cilentid);

  // string CreateDate = 4;
  void clear_createdate();
  static const int kCreateDateFieldNumber = 4;
  const ::std::string& createdate() const;
  void set_createdate(const ::std::string& value);
  #if LANG_CXX11
  void set_createdate(::std::string&& value);
  #endif
  void set_createdate(const char* value);
  void set_createdate(const char* value, size_t size);
  ::std::string* mutable_createdate();
  ::std::string* release_createdate();
  void set_allocated_createdate(::std::string* createdate);

  // @@protoc_insertion_point(class_scope:qiuwanli.File2Cilent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr sha512_;
  ::google::protobuf::internal::ArenaStringPtr cilentid_;
  ::google::protobuf::internal::ArenaStringPtr createdate_;
  mutable int _cached_size_;
  friend struct  protobuf_date_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class File2ClientServers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.File2ClientServers) */ {
 public:
  File2ClientServers();
  virtual ~File2ClientServers();

  File2ClientServers(const File2ClientServers& from);

  inline File2ClientServers& operator=(const File2ClientServers& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const File2ClientServers& default_instance();

  static inline const File2ClientServers* internal_default_instance() {
    return reinterpret_cast<const File2ClientServers*>(
               &_File2ClientServers_default_instance_);
  }

  void Swap(File2ClientServers* other);

  // implements Message ----------------------------------------------

  inline File2ClientServers* New() const PROTOBUF_FINAL { return New(NULL); }

  File2ClientServers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const File2ClientServers& from);
  void MergeFrom(const File2ClientServers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(File2ClientServers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.File2Cilent client = 1;
  int client_size() const;
  void clear_client();
  static const int kClientFieldNumber = 1;
  const ::qiuwanli::File2Cilent& client(int index) const;
  ::qiuwanli::File2Cilent* mutable_client(int index);
  ::qiuwanli::File2Cilent* add_client();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent >*
      mutable_client();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent >&
      client() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.File2ClientServers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent > client_;
  mutable int _cached_size_;
  friend struct  protobuf_date_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ID2IP : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.ID2IP) */ {
 public:
  ID2IP();
  virtual ~ID2IP();

  ID2IP(const ID2IP& from);

  inline ID2IP& operator=(const ID2IP& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ID2IP& default_instance();

  static inline const ID2IP* internal_default_instance() {
    return reinterpret_cast<const ID2IP*>(
               &_ID2IP_default_instance_);
  }

  void Swap(ID2IP* other);

  // implements Message ----------------------------------------------

  inline ID2IP* New() const PROTOBUF_FINAL { return New(NULL); }

  ID2IP* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ID2IP& from);
  void MergeFrom(const ID2IP& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ID2IP* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string CilentID = 1;
  void clear_cilentid();
  static const int kCilentIDFieldNumber = 1;
  const ::std::string& cilentid() const;
  void set_cilentid(const ::std::string& value);
  #if LANG_CXX11
  void set_cilentid(::std::string&& value);
  #endif
  void set_cilentid(const char* value);
  void set_cilentid(const char* value, size_t size);
  ::std::string* mutable_cilentid();
  ::std::string* release_cilentid();
  void set_allocated_cilentid(::std::string* cilentid);

  // string IP = 2;
  void clear_ip();
  static const int kIPFieldNumber = 2;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // string PriKey = 3;
  void clear_prikey();
  static const int kPriKeyFieldNumber = 3;
  const ::std::string& prikey() const;
  void set_prikey(const ::std::string& value);
  #if LANG_CXX11
  void set_prikey(::std::string&& value);
  #endif
  void set_prikey(const char* value);
  void set_prikey(const char* value, size_t size);
  ::std::string* mutable_prikey();
  ::std::string* release_prikey();
  void set_allocated_prikey(::std::string* prikey);

  // string KeyMD5 = 4;
  void clear_keymd5();
  static const int kKeyMD5FieldNumber = 4;
  const ::std::string& keymd5() const;
  void set_keymd5(const ::std::string& value);
  #if LANG_CXX11
  void set_keymd5(::std::string&& value);
  #endif
  void set_keymd5(const char* value);
  void set_keymd5(const char* value, size_t size);
  ::std::string* mutable_keymd5();
  ::std::string* release_keymd5();
  void set_allocated_keymd5(::std::string* keymd5);

  // string Others = 5;
  void clear_others();
  static const int kOthersFieldNumber = 5;
  const ::std::string& others() const;
  void set_others(const ::std::string& value);
  #if LANG_CXX11
  void set_others(::std::string&& value);
  #endif
  void set_others(const char* value);
  void set_others(const char* value, size_t size);
  ::std::string* mutable_others();
  ::std::string* release_others();
  void set_allocated_others(::std::string* others);

  // @@protoc_insertion_point(class_scope:qiuwanli.ID2IP)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cilentid_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr prikey_;
  ::google::protobuf::internal::ArenaStringPtr keymd5_;
  ::google::protobuf::internal::ArenaStringPtr others_;
  mutable int _cached_size_;
  friend struct  protobuf_date_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ID2IPTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.ID2IPTable) */ {
 public:
  ID2IPTable();
  virtual ~ID2IPTable();

  ID2IPTable(const ID2IPTable& from);

  inline ID2IPTable& operator=(const ID2IPTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ID2IPTable& default_instance();

  static inline const ID2IPTable* internal_default_instance() {
    return reinterpret_cast<const ID2IPTable*>(
               &_ID2IPTable_default_instance_);
  }

  void Swap(ID2IPTable* other);

  // implements Message ----------------------------------------------

  inline ID2IPTable* New() const PROTOBUF_FINAL { return New(NULL); }

  ID2IPTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ID2IPTable& from);
  void MergeFrom(const ID2IPTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ID2IPTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.ID2IP ip = 1;
  int ip_size() const;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::qiuwanli::ID2IP& ip(int index) const;
  ::qiuwanli::ID2IP* mutable_ip(int index);
  ::qiuwanli::ID2IP* add_ip();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::ID2IP >*
      mutable_ip();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::ID2IP >&
      ip() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.ID2IPTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::ID2IP > ip_;
  mutable int _cached_size_;
  friend struct  protobuf_date_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Logs

// string user_id = 1;
inline void Logs::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.user_id)
  return user_id_.GetNoArena();
}
inline void Logs::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.user_id)
}
#if LANG_CXX11
inline void Logs::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.user_id)
}
#endif
inline void Logs::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.user_id)
}
inline void Logs::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.user_id)
}
inline ::std::string* Logs::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.user_id)
}

// uint64 log_date = 2;
inline void Logs::clear_log_date() {
  log_date_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Logs::log_date() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_date)
  return log_date_;
}
inline void Logs::set_log_date(::google::protobuf::uint64 value) {
  
  log_date_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_date)
}

// string log_info = 3;
inline void Logs::clear_log_info() {
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::log_info() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_info)
  return log_info_.GetNoArena();
}
inline void Logs::set_log_info(const ::std::string& value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_info)
}
#if LANG_CXX11
inline void Logs::set_log_info(::std::string&& value) {
  
  log_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_info)
}
#endif
inline void Logs::set_log_info(const char* value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_info)
}
inline void Logs::set_log_info(const char* value, size_t size) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_info)
}
inline ::std::string* Logs::mutable_log_info() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_info)
  return log_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_log_info() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_info)
  
  return log_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_log_info(::std::string* log_info) {
  if (log_info != NULL) {
    
  } else {
    
  }
  log_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_info);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_info)
}

// bytes log_type = 4;
inline void Logs::clear_log_type() {
  log_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::log_type() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_type)
  return log_type_.GetNoArena();
}
inline void Logs::set_log_type(const ::std::string& value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_type)
}
#if LANG_CXX11
inline void Logs::set_log_type(::std::string&& value) {
  
  log_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_type)
}
#endif
inline void Logs::set_log_type(const char* value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_type)
}
inline void Logs::set_log_type(const void* value, size_t size) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_type)
}
inline ::std::string* Logs::mutable_log_type() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_type)
  return log_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_log_type() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_type)
  
  return log_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_log_type(::std::string* log_type) {
  if (log_type != NULL) {
    
  } else {
    
  }
  log_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_type);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_type)
}

// string user_client_UUID = 5;
inline void Logs::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
inline void Logs::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.user_client_UUID)
}
#if LANG_CXX11
inline void Logs::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.user_client_UUID)
}
#endif
inline void Logs::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.user_client_UUID)
}
inline void Logs::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.user_client_UUID)
}
inline ::std::string* Logs::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.user_client_UUID)
}

// -------------------------------------------------------------------

// AllLog

// string logdate = 1;
inline void AllLog::clear_logdate() {
  logdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AllLog::logdate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.AllLog.logdate)
  return logdate_.GetNoArena();
}
inline void AllLog::set_logdate(const ::std::string& value) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.AllLog.logdate)
}
#if LANG_CXX11
inline void AllLog::set_logdate(::std::string&& value) {
  
  logdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.AllLog.logdate)
}
#endif
inline void AllLog::set_logdate(const char* value) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.AllLog.logdate)
}
inline void AllLog::set_logdate(const char* value, size_t size) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.AllLog.logdate)
}
inline ::std::string* AllLog::mutable_logdate() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.AllLog.logdate)
  return logdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AllLog::release_logdate() {
  // @@protoc_insertion_point(field_release:qiuwanli.AllLog.logdate)
  
  return logdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AllLog::set_allocated_logdate(::std::string* logdate) {
  if (logdate != NULL) {
    
  } else {
    
  }
  logdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logdate);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.AllLog.logdate)
}

// repeated .qiuwanli.Logs log = 2;
inline int AllLog::log_size() const {
  return log_.size();
}
inline void AllLog::clear_log() {
  log_.Clear();
}
inline const ::qiuwanli::Logs& AllLog::log(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.AllLog.log)
  return log_.Get(index);
}
inline ::qiuwanli::Logs* AllLog::mutable_log(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.AllLog.log)
  return log_.Mutable(index);
}
inline ::qiuwanli::Logs* AllLog::add_log() {
  // @@protoc_insertion_point(field_add:qiuwanli.AllLog.log)
  return log_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >*
AllLog::mutable_log() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.AllLog.log)
  return &log_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >&
AllLog::log() const {
  // @@protoc_insertion_point(field_list:qiuwanli.AllLog.log)
  return log_;
}

// -------------------------------------------------------------------

// File2Cilent

// string FileName = 1;
inline void File2Cilent::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File2Cilent::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.FileName)
  return filename_.GetNoArena();
}
inline void File2Cilent::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.FileName)
}
#if LANG_CXX11
inline void File2Cilent::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.FileName)
}
#endif
inline void File2Cilent::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.FileName)
}
inline void File2Cilent::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.FileName)
}
inline ::std::string* File2Cilent::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.FileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File2Cilent::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.FileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File2Cilent::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.FileName)
}

// string SHA512 = 2;
inline void File2Cilent::clear_sha512() {
  sha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File2Cilent::sha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.SHA512)
  return sha512_.GetNoArena();
}
inline void File2Cilent::set_sha512(const ::std::string& value) {
  
  sha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.SHA512)
}
#if LANG_CXX11
inline void File2Cilent::set_sha512(::std::string&& value) {
  
  sha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.SHA512)
}
#endif
inline void File2Cilent::set_sha512(const char* value) {
  
  sha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.SHA512)
}
inline void File2Cilent::set_sha512(const char* value, size_t size) {
  
  sha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.SHA512)
}
inline ::std::string* File2Cilent::mutable_sha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.SHA512)
  return sha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File2Cilent::release_sha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.SHA512)
  
  return sha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File2Cilent::set_allocated_sha512(::std::string* sha512) {
  if (sha512 != NULL) {
    
  } else {
    
  }
  sha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.SHA512)
}

// string CilentID = 3;
inline void File2Cilent::clear_cilentid() {
  cilentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File2Cilent::cilentid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.CilentID)
  return cilentid_.GetNoArena();
}
inline void File2Cilent::set_cilentid(const ::std::string& value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.CilentID)
}
#if LANG_CXX11
inline void File2Cilent::set_cilentid(::std::string&& value) {
  
  cilentid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.CilentID)
}
#endif
inline void File2Cilent::set_cilentid(const char* value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.CilentID)
}
inline void File2Cilent::set_cilentid(const char* value, size_t size) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.CilentID)
}
inline ::std::string* File2Cilent::mutable_cilentid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.CilentID)
  return cilentid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File2Cilent::release_cilentid() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.CilentID)
  
  return cilentid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File2Cilent::set_allocated_cilentid(::std::string* cilentid) {
  if (cilentid != NULL) {
    
  } else {
    
  }
  cilentid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cilentid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.CilentID)
}

// string CreateDate = 4;
inline void File2Cilent::clear_createdate() {
  createdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File2Cilent::createdate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.CreateDate)
  return createdate_.GetNoArena();
}
inline void File2Cilent::set_createdate(const ::std::string& value) {
  
  createdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.CreateDate)
}
#if LANG_CXX11
inline void File2Cilent::set_createdate(::std::string&& value) {
  
  createdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.CreateDate)
}
#endif
inline void File2Cilent::set_createdate(const char* value) {
  
  createdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.CreateDate)
}
inline void File2Cilent::set_createdate(const char* value, size_t size) {
  
  createdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.CreateDate)
}
inline ::std::string* File2Cilent::mutable_createdate() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.CreateDate)
  return createdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File2Cilent::release_createdate() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.CreateDate)
  
  return createdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File2Cilent::set_allocated_createdate(::std::string* createdate) {
  if (createdate != NULL) {
    
  } else {
    
  }
  createdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), createdate);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.CreateDate)
}

// -------------------------------------------------------------------

// File2ClientServers

// repeated .qiuwanli.File2Cilent client = 1;
inline int File2ClientServers::client_size() const {
  return client_.size();
}
inline void File2ClientServers::clear_client() {
  client_.Clear();
}
inline const ::qiuwanli::File2Cilent& File2ClientServers::client(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2ClientServers.client)
  return client_.Get(index);
}
inline ::qiuwanli::File2Cilent* File2ClientServers::mutable_client(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2ClientServers.client)
  return client_.Mutable(index);
}
inline ::qiuwanli::File2Cilent* File2ClientServers::add_client() {
  // @@protoc_insertion_point(field_add:qiuwanli.File2ClientServers.client)
  return client_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent >*
File2ClientServers::mutable_client() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.File2ClientServers.client)
  return &client_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent >&
File2ClientServers::client() const {
  // @@protoc_insertion_point(field_list:qiuwanli.File2ClientServers.client)
  return client_;
}

// -------------------------------------------------------------------

// ID2IP

// string CilentID = 1;
inline void ID2IP::clear_cilentid() {
  cilentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ID2IP::cilentid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ID2IP.CilentID)
  return cilentid_.GetNoArena();
}
inline void ID2IP::set_cilentid(const ::std::string& value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ID2IP.CilentID)
}
#if LANG_CXX11
inline void ID2IP::set_cilentid(::std::string&& value) {
  
  cilentid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ID2IP.CilentID)
}
#endif
inline void ID2IP::set_cilentid(const char* value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ID2IP.CilentID)
}
inline void ID2IP::set_cilentid(const char* value, size_t size) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ID2IP.CilentID)
}
inline ::std::string* ID2IP::mutable_cilentid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ID2IP.CilentID)
  return cilentid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ID2IP::release_cilentid() {
  // @@protoc_insertion_point(field_release:qiuwanli.ID2IP.CilentID)
  
  return cilentid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ID2IP::set_allocated_cilentid(::std::string* cilentid) {
  if (cilentid != NULL) {
    
  } else {
    
  }
  cilentid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cilentid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ID2IP.CilentID)
}

// string IP = 2;
inline void ID2IP::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ID2IP::ip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ID2IP.IP)
  return ip_.GetNoArena();
}
inline void ID2IP::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ID2IP.IP)
}
#if LANG_CXX11
inline void ID2IP::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ID2IP.IP)
}
#endif
inline void ID2IP::set_ip(const char* value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ID2IP.IP)
}
inline void ID2IP::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ID2IP.IP)
}
inline ::std::string* ID2IP::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ID2IP.IP)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ID2IP::release_ip() {
  // @@protoc_insertion_point(field_release:qiuwanli.ID2IP.IP)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ID2IP::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ID2IP.IP)
}

// string PriKey = 3;
inline void ID2IP::clear_prikey() {
  prikey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ID2IP::prikey() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ID2IP.PriKey)
  return prikey_.GetNoArena();
}
inline void ID2IP::set_prikey(const ::std::string& value) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ID2IP.PriKey)
}
#if LANG_CXX11
inline void ID2IP::set_prikey(::std::string&& value) {
  
  prikey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ID2IP.PriKey)
}
#endif
inline void ID2IP::set_prikey(const char* value) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ID2IP.PriKey)
}
inline void ID2IP::set_prikey(const char* value, size_t size) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ID2IP.PriKey)
}
inline ::std::string* ID2IP::mutable_prikey() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ID2IP.PriKey)
  return prikey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ID2IP::release_prikey() {
  // @@protoc_insertion_point(field_release:qiuwanli.ID2IP.PriKey)
  
  return prikey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ID2IP::set_allocated_prikey(::std::string* prikey) {
  if (prikey != NULL) {
    
  } else {
    
  }
  prikey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prikey);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ID2IP.PriKey)
}

// string KeyMD5 = 4;
inline void ID2IP::clear_keymd5() {
  keymd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ID2IP::keymd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ID2IP.KeyMD5)
  return keymd5_.GetNoArena();
}
inline void ID2IP::set_keymd5(const ::std::string& value) {
  
  keymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ID2IP.KeyMD5)
}
#if LANG_CXX11
inline void ID2IP::set_keymd5(::std::string&& value) {
  
  keymd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ID2IP.KeyMD5)
}
#endif
inline void ID2IP::set_keymd5(const char* value) {
  
  keymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ID2IP.KeyMD5)
}
inline void ID2IP::set_keymd5(const char* value, size_t size) {
  
  keymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ID2IP.KeyMD5)
}
inline ::std::string* ID2IP::mutable_keymd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ID2IP.KeyMD5)
  return keymd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ID2IP::release_keymd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.ID2IP.KeyMD5)
  
  return keymd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ID2IP::set_allocated_keymd5(::std::string* keymd5) {
  if (keymd5 != NULL) {
    
  } else {
    
  }
  keymd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keymd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ID2IP.KeyMD5)
}

// string Others = 5;
inline void ID2IP::clear_others() {
  others_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ID2IP::others() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ID2IP.Others)
  return others_.GetNoArena();
}
inline void ID2IP::set_others(const ::std::string& value) {
  
  others_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ID2IP.Others)
}
#if LANG_CXX11
inline void ID2IP::set_others(::std::string&& value) {
  
  others_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ID2IP.Others)
}
#endif
inline void ID2IP::set_others(const char* value) {
  
  others_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ID2IP.Others)
}
inline void ID2IP::set_others(const char* value, size_t size) {
  
  others_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ID2IP.Others)
}
inline ::std::string* ID2IP::mutable_others() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ID2IP.Others)
  return others_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ID2IP::release_others() {
  // @@protoc_insertion_point(field_release:qiuwanli.ID2IP.Others)
  
  return others_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ID2IP::set_allocated_others(::std::string* others) {
  if (others != NULL) {
    
  } else {
    
  }
  others_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), others);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ID2IP.Others)
}

// -------------------------------------------------------------------

// ID2IPTable

// repeated .qiuwanli.ID2IP ip = 1;
inline int ID2IPTable::ip_size() const {
  return ip_.size();
}
inline void ID2IPTable::clear_ip() {
  ip_.Clear();
}
inline const ::qiuwanli::ID2IP& ID2IPTable::ip(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.ID2IPTable.ip)
  return ip_.Get(index);
}
inline ::qiuwanli::ID2IP* ID2IPTable::mutable_ip(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.ID2IPTable.ip)
  return ip_.Mutable(index);
}
inline ::qiuwanli::ID2IP* ID2IPTable::add_ip() {
  // @@protoc_insertion_point(field_add:qiuwanli.ID2IPTable.ip)
  return ip_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::ID2IP >*
ID2IPTable::mutable_ip() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.ID2IPTable.ip)
  return &ip_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::ID2IP >&
ID2IPTable::ip() const {
  // @@protoc_insertion_point(field_list:qiuwanli.ID2IPTable.ip)
  return ip_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace qiuwanli

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_date_2eproto__INCLUDED
