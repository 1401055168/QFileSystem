// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DataStruct.proto

#ifndef PROTOBUF_DataStruct_2eproto__INCLUDED
#define PROTOBUF_DataStruct_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace qiuwanli {
class BlockDown;
class BlockDownDefaultTypeInternal;
extern BlockDownDefaultTypeInternal _BlockDown_default_instance_;
class BlockInfo2Server;
class BlockInfo2ServerDefaultTypeInternal;
extern BlockInfo2ServerDefaultTypeInternal _BlockInfo2Server_default_instance_;
class BlockInfo2ServerTable;
class BlockInfo2ServerTableDefaultTypeInternal;
extern BlockInfo2ServerTableDefaultTypeInternal _BlockInfo2ServerTable_default_instance_;
class BlockList4Down;
class BlockList4DownDefaultTypeInternal;
extern BlockList4DownDefaultTypeInternal _BlockList4Down_default_instance_;
class BlockList4DownTable;
class BlockList4DownTableDefaultTypeInternal;
extern BlockList4DownTableDefaultTypeInternal _BlockList4DownTable_default_instance_;
class BlockListDownTable;
class BlockListDownTableDefaultTypeInternal;
extern BlockListDownTableDefaultTypeInternal _BlockListDownTable_default_instance_;
class ClientConfigFile;
class ClientConfigFileDefaultTypeInternal;
extern ClientConfigFileDefaultTypeInternal _ClientConfigFile_default_instance_;
class ClientConfigFileTable;
class ClientConfigFileTableDefaultTypeInternal;
extern ClientConfigFileTableDefaultTypeInternal _ClientConfigFileTable_default_instance_;
class File2Cilent;
class File2CilentDefaultTypeInternal;
extern File2CilentDefaultTypeInternal _File2Cilent_default_instance_;
class File2ClientTable;
class File2ClientTableDefaultTypeInternal;
extern File2ClientTableDefaultTypeInternal _File2ClientTable_default_instance_;
class FileInfoList;
class FileInfoListDefaultTypeInternal;
extern FileInfoListDefaultTypeInternal _FileInfoList_default_instance_;
class FileInfoListTable;
class FileInfoListTableDefaultTypeInternal;
extern FileInfoListTableDefaultTypeInternal _FileInfoListTable_default_instance_;
class Heart;
class HeartDefaultTypeInternal;
extern HeartDefaultTypeInternal _Heart_default_instance_;
class HeartTable;
class HeartTableDefaultTypeInternal;
extern HeartTableDefaultTypeInternal _HeartTable_default_instance_;
class LogTable;
class LogTableDefaultTypeInternal;
extern LogTableDefaultTypeInternal _LogTable_default_instance_;
class Logs;
class LogsDefaultTypeInternal;
extern LogsDefaultTypeInternal _Logs_default_instance_;
class Shared;
class SharedDefaultTypeInternal;
extern SharedDefaultTypeInternal _Shared_default_instance_;
class SharedTable;
class SharedTableDefaultTypeInternal;
extern SharedTableDefaultTypeInternal _SharedTable_default_instance_;
class UserInfo;
class UserInfoDefaultTypeInternal;
extern UserInfoDefaultTypeInternal _UserInfo_default_instance_;
class UserInfoTable;
class UserInfoTableDefaultTypeInternal;
extern UserInfoTableDefaultTypeInternal _UserInfoTable_default_instance_;
}  // namespace qiuwanli

namespace qiuwanli {

namespace protobuf_DataStruct_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_DataStruct_2eproto

// ===================================================================

class File2Cilent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.File2Cilent) */ {
 public:
  File2Cilent();
  virtual ~File2Cilent();

  File2Cilent(const File2Cilent& from);

  inline File2Cilent& operator=(const File2Cilent& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const File2Cilent& default_instance();

  static inline const File2Cilent* internal_default_instance() {
    return reinterpret_cast<const File2Cilent*>(
               &_File2Cilent_default_instance_);
  }

  void Swap(File2Cilent* other);

  // implements Message ----------------------------------------------

  inline File2Cilent* New() const PROTOBUF_FINAL { return New(NULL); }

  File2Cilent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const File2Cilent& from);
  void MergeFrom(const File2Cilent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(File2Cilent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string FileName = 1;
  void clear_filename();
  static const int kFileNameFieldNumber = 1;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // string FileSHA512 = 2;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 2;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // string CilentID = 3;
  void clear_cilentid();
  static const int kCilentIDFieldNumber = 3;
  const ::std::string& cilentid() const;
  void set_cilentid(const ::std::string& value);
  #if LANG_CXX11
  void set_cilentid(::std::string&& value);
  #endif
  void set_cilentid(const char* value);
  void set_cilentid(const char* value, size_t size);
  ::std::string* mutable_cilentid();
  ::std::string* release_cilentid();
  void set_allocated_cilentid(::std::string* cilentid);

  // @@protoc_insertion_point(class_scope:qiuwanli.File2Cilent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  ::google::protobuf::internal::ArenaStringPtr cilentid_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class File2ClientTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.File2ClientTable) */ {
 public:
  File2ClientTable();
  virtual ~File2ClientTable();

  File2ClientTable(const File2ClientTable& from);

  inline File2ClientTable& operator=(const File2ClientTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const File2ClientTable& default_instance();

  static inline const File2ClientTable* internal_default_instance() {
    return reinterpret_cast<const File2ClientTable*>(
               &_File2ClientTable_default_instance_);
  }

  void Swap(File2ClientTable* other);

  // implements Message ----------------------------------------------

  inline File2ClientTable* New() const PROTOBUF_FINAL { return New(NULL); }

  File2ClientTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const File2ClientTable& from);
  void MergeFrom(const File2ClientTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(File2ClientTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.File2Cilent FileToClient = 1;
  int filetoclient_size() const;
  void clear_filetoclient();
  static const int kFileToClientFieldNumber = 1;
  const ::qiuwanli::File2Cilent& filetoclient(int index) const;
  ::qiuwanli::File2Cilent* mutable_filetoclient(int index);
  ::qiuwanli::File2Cilent* add_filetoclient();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent >*
      mutable_filetoclient();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent >&
      filetoclient() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.File2ClientTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent > filetoclient_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientConfigFile : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.ClientConfigFile) */ {
 public:
  ClientConfigFile();
  virtual ~ClientConfigFile();

  ClientConfigFile(const ClientConfigFile& from);

  inline ClientConfigFile& operator=(const ClientConfigFile& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientConfigFile& default_instance();

  static inline const ClientConfigFile* internal_default_instance() {
    return reinterpret_cast<const ClientConfigFile*>(
               &_ClientConfigFile_default_instance_);
  }

  void Swap(ClientConfigFile* other);

  // implements Message ----------------------------------------------

  inline ClientConfigFile* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientConfigFile* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientConfigFile& from);
  void MergeFrom(const ClientConfigFile& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientConfigFile* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string CilentID = 1;
  void clear_cilentid();
  static const int kCilentIDFieldNumber = 1;
  const ::std::string& cilentid() const;
  void set_cilentid(const ::std::string& value);
  #if LANG_CXX11
  void set_cilentid(::std::string&& value);
  #endif
  void set_cilentid(const char* value);
  void set_cilentid(const char* value, size_t size);
  ::std::string* mutable_cilentid();
  ::std::string* release_cilentid();
  void set_allocated_cilentid(::std::string* cilentid);

  // string SaveIP = 2;
  void clear_saveip();
  static const int kSaveIPFieldNumber = 2;
  const ::std::string& saveip() const;
  void set_saveip(const ::std::string& value);
  #if LANG_CXX11
  void set_saveip(::std::string&& value);
  #endif
  void set_saveip(const char* value);
  void set_saveip(const char* value, size_t size);
  ::std::string* mutable_saveip();
  ::std::string* release_saveip();
  void set_allocated_saveip(::std::string* saveip);

  // string PriKey = 3;
  void clear_prikey();
  static const int kPriKeyFieldNumber = 3;
  const ::std::string& prikey() const;
  void set_prikey(const ::std::string& value);
  #if LANG_CXX11
  void set_prikey(::std::string&& value);
  #endif
  void set_prikey(const char* value);
  void set_prikey(const char* value, size_t size);
  ::std::string* mutable_prikey();
  ::std::string* release_prikey();
  void set_allocated_prikey(::std::string* prikey);

  // string KeyMD5 = 4;
  void clear_keymd5();
  static const int kKeyMD5FieldNumber = 4;
  const ::std::string& keymd5() const;
  void set_keymd5(const ::std::string& value);
  #if LANG_CXX11
  void set_keymd5(::std::string&& value);
  #endif
  void set_keymd5(const char* value);
  void set_keymd5(const char* value, size_t size);
  ::std::string* mutable_keymd5();
  ::std::string* release_keymd5();
  void set_allocated_keymd5(::std::string* keymd5);

  // uint64 TotleSize = 5;
  void clear_totlesize();
  static const int kTotleSizeFieldNumber = 5;
  ::google::protobuf::uint64 totlesize() const;
  void set_totlesize(::google::protobuf::uint64 value);

  // uint64 RemainSize = 6;
  void clear_remainsize();
  static const int kRemainSizeFieldNumber = 6;
  ::google::protobuf::uint64 remainsize() const;
  void set_remainsize(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.ClientConfigFile)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cilentid_;
  ::google::protobuf::internal::ArenaStringPtr saveip_;
  ::google::protobuf::internal::ArenaStringPtr prikey_;
  ::google::protobuf::internal::ArenaStringPtr keymd5_;
  ::google::protobuf::uint64 totlesize_;
  ::google::protobuf::uint64 remainsize_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClientConfigFileTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.ClientConfigFileTable) */ {
 public:
  ClientConfigFileTable();
  virtual ~ClientConfigFileTable();

  ClientConfigFileTable(const ClientConfigFileTable& from);

  inline ClientConfigFileTable& operator=(const ClientConfigFileTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientConfigFileTable& default_instance();

  static inline const ClientConfigFileTable* internal_default_instance() {
    return reinterpret_cast<const ClientConfigFileTable*>(
               &_ClientConfigFileTable_default_instance_);
  }

  void Swap(ClientConfigFileTable* other);

  // implements Message ----------------------------------------------

  inline ClientConfigFileTable* New() const PROTOBUF_FINAL { return New(NULL); }

  ClientConfigFileTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClientConfigFileTable& from);
  void MergeFrom(const ClientConfigFileTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClientConfigFileTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.ClientConfigFile ClientInfo = 1;
  int clientinfo_size() const;
  void clear_clientinfo();
  static const int kClientInfoFieldNumber = 1;
  const ::qiuwanli::ClientConfigFile& clientinfo(int index) const;
  ::qiuwanli::ClientConfigFile* mutable_clientinfo(int index);
  ::qiuwanli::ClientConfigFile* add_clientinfo();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::ClientConfigFile >*
      mutable_clientinfo();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::ClientConfigFile >&
      clientinfo() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.ClientConfigFileTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::ClientConfigFile > clientinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Heart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.Heart) */ {
 public:
  Heart();
  virtual ~Heart();

  Heart(const Heart& from);

  inline Heart& operator=(const Heart& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Heart& default_instance();

  static inline const Heart* internal_default_instance() {
    return reinterpret_cast<const Heart*>(
               &_Heart_default_instance_);
  }

  void Swap(Heart* other);

  // implements Message ----------------------------------------------

  inline Heart* New() const PROTOBUF_FINAL { return New(NULL); }

  Heart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Heart& from);
  void MergeFrom(const Heart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Heart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ID = 1;
  void clear_id();
  static const int kIDFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string RemainSize = 2;
  void clear_remainsize();
  static const int kRemainSizeFieldNumber = 2;
  const ::std::string& remainsize() const;
  void set_remainsize(const ::std::string& value);
  #if LANG_CXX11
  void set_remainsize(::std::string&& value);
  #endif
  void set_remainsize(const char* value);
  void set_remainsize(const char* value, size_t size);
  ::std::string* mutable_remainsize();
  ::std::string* release_remainsize();
  void set_allocated_remainsize(::std::string* remainsize);

  // @@protoc_insertion_point(class_scope:qiuwanli.Heart)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr remainsize_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.HeartTable) */ {
 public:
  HeartTable();
  virtual ~HeartTable();

  HeartTable(const HeartTable& from);

  inline HeartTable& operator=(const HeartTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartTable& default_instance();

  static inline const HeartTable* internal_default_instance() {
    return reinterpret_cast<const HeartTable*>(
               &_HeartTable_default_instance_);
  }

  void Swap(HeartTable* other);

  // implements Message ----------------------------------------------

  inline HeartTable* New() const PROTOBUF_FINAL { return New(NULL); }

  HeartTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartTable& from);
  void MergeFrom(const HeartTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.Heart CilentHeart = 1;
  int cilentheart_size() const;
  void clear_cilentheart();
  static const int kCilentHeartFieldNumber = 1;
  const ::qiuwanli::Heart& cilentheart(int index) const;
  ::qiuwanli::Heart* mutable_cilentheart(int index);
  ::qiuwanli::Heart* add_cilentheart();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Heart >*
      mutable_cilentheart();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Heart >&
      cilentheart() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.HeartTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Heart > cilentheart_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileInfoList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileInfoList) */ {
 public:
  FileInfoList();
  virtual ~FileInfoList();

  FileInfoList(const FileInfoList& from);

  inline FileInfoList& operator=(const FileInfoList& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileInfoList& default_instance();

  static inline const FileInfoList* internal_default_instance() {
    return reinterpret_cast<const FileInfoList*>(
               &_FileInfoList_default_instance_);
  }

  void Swap(FileInfoList* other);

  // implements Message ----------------------------------------------

  inline FileInfoList* New() const PROTOBUF_FINAL { return New(NULL); }

  FileInfoList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileInfoList& from);
  void MergeFrom(const FileInfoList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileInfoList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string FileSHA512 = 1;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 1;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // string FileMD5 = 2;
  void clear_filemd5();
  static const int kFileMD5FieldNumber = 2;
  const ::std::string& filemd5() const;
  void set_filemd5(const ::std::string& value);
  #if LANG_CXX11
  void set_filemd5(::std::string&& value);
  #endif
  void set_filemd5(const char* value);
  void set_filemd5(const char* value, size_t size);
  ::std::string* mutable_filemd5();
  ::std::string* release_filemd5();
  void set_allocated_filemd5(::std::string* filemd5);

  // string FileName = 3;
  void clear_filename();
  static const int kFileNameFieldNumber = 3;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // string FileCreateDate = 4;
  void clear_filecreatedate();
  static const int kFileCreateDateFieldNumber = 4;
  const ::std::string& filecreatedate() const;
  void set_filecreatedate(const ::std::string& value);
  #if LANG_CXX11
  void set_filecreatedate(::std::string&& value);
  #endif
  void set_filecreatedate(const char* value);
  void set_filecreatedate(const char* value, size_t size);
  ::std::string* mutable_filecreatedate();
  ::std::string* release_filecreatedate();
  void set_allocated_filecreatedate(::std::string* filecreatedate);

  // string FileChangeDate = 5;
  void clear_filechangedate();
  static const int kFileChangeDateFieldNumber = 5;
  const ::std::string& filechangedate() const;
  void set_filechangedate(const ::std::string& value);
  #if LANG_CXX11
  void set_filechangedate(::std::string&& value);
  #endif
  void set_filechangedate(const char* value);
  void set_filechangedate(const char* value, size_t size);
  ::std::string* mutable_filechangedate();
  ::std::string* release_filechangedate();
  void set_allocated_filechangedate(::std::string* filechangedate);

  // string Tag = 8;
  void clear_tag();
  static const int kTagFieldNumber = 8;
  const ::std::string& tag() const;
  void set_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_tag(::std::string&& value);
  #endif
  void set_tag(const char* value);
  void set_tag(const char* value, size_t size);
  ::std::string* mutable_tag();
  ::std::string* release_tag();
  void set_allocated_tag(::std::string* tag);

  // uint64 FileAllBlock = 6;
  void clear_fileallblock();
  static const int kFileAllBlockFieldNumber = 6;
  ::google::protobuf::uint64 fileallblock() const;
  void set_fileallblock(::google::protobuf::uint64 value);

  // uint64 FileTotalSize = 7;
  void clear_filetotalsize();
  static const int kFileTotalSizeFieldNumber = 7;
  ::google::protobuf::uint64 filetotalsize() const;
  void set_filetotalsize(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.FileInfoList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  ::google::protobuf::internal::ArenaStringPtr filemd5_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr filecreatedate_;
  ::google::protobuf::internal::ArenaStringPtr filechangedate_;
  ::google::protobuf::internal::ArenaStringPtr tag_;
  ::google::protobuf::uint64 fileallblock_;
  ::google::protobuf::uint64 filetotalsize_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FileInfoListTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.FileInfoListTable) */ {
 public:
  FileInfoListTable();
  virtual ~FileInfoListTable();

  FileInfoListTable(const FileInfoListTable& from);

  inline FileInfoListTable& operator=(const FileInfoListTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileInfoListTable& default_instance();

  static inline const FileInfoListTable* internal_default_instance() {
    return reinterpret_cast<const FileInfoListTable*>(
               &_FileInfoListTable_default_instance_);
  }

  void Swap(FileInfoListTable* other);

  // implements Message ----------------------------------------------

  inline FileInfoListTable* New() const PROTOBUF_FINAL { return New(NULL); }

  FileInfoListTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FileInfoListTable& from);
  void MergeFrom(const FileInfoListTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FileInfoListTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.FileInfoList FileList = 1;
  int filelist_size() const;
  void clear_filelist();
  static const int kFileListFieldNumber = 1;
  const ::qiuwanli::FileInfoList& filelist(int index) const;
  ::qiuwanli::FileInfoList* mutable_filelist(int index);
  ::qiuwanli::FileInfoList* add_filelist();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfoList >*
      mutable_filelist();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfoList >&
      filelist() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.FileInfoListTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfoList > filelist_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockList4Down : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockList4Down) */ {
 public:
  BlockList4Down();
  virtual ~BlockList4Down();

  BlockList4Down(const BlockList4Down& from);

  inline BlockList4Down& operator=(const BlockList4Down& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockList4Down& default_instance();

  static inline const BlockList4Down* internal_default_instance() {
    return reinterpret_cast<const BlockList4Down*>(
               &_BlockList4Down_default_instance_);
  }

  void Swap(BlockList4Down* other);

  // implements Message ----------------------------------------------

  inline BlockList4Down* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockList4Down* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockList4Down& from);
  void MergeFrom(const BlockList4Down& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockList4Down* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string FileSHA512 = 1;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 1;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // string BlockNumer = 2;
  void clear_blocknumer();
  static const int kBlockNumerFieldNumber = 2;
  const ::std::string& blocknumer() const;
  void set_blocknumer(const ::std::string& value);
  #if LANG_CXX11
  void set_blocknumer(::std::string&& value);
  #endif
  void set_blocknumer(const char* value);
  void set_blocknumer(const char* value, size_t size);
  ::std::string* mutable_blocknumer();
  ::std::string* release_blocknumer();
  void set_allocated_blocknumer(::std::string* blocknumer);

  // string SaveServersIP = 3;
  void clear_saveserversip();
  static const int kSaveServersIPFieldNumber = 3;
  const ::std::string& saveserversip() const;
  void set_saveserversip(const ::std::string& value);
  #if LANG_CXX11
  void set_saveserversip(::std::string&& value);
  #endif
  void set_saveserversip(const char* value);
  void set_saveserversip(const char* value, size_t size);
  ::std::string* mutable_saveserversip();
  ::std::string* release_saveserversip();
  void set_allocated_saveserversip(::std::string* saveserversip);

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockList4Down)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  ::google::protobuf::internal::ArenaStringPtr blocknumer_;
  ::google::protobuf::internal::ArenaStringPtr saveserversip_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockList4DownTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockList4DownTable) */ {
 public:
  BlockList4DownTable();
  virtual ~BlockList4DownTable();

  BlockList4DownTable(const BlockList4DownTable& from);

  inline BlockList4DownTable& operator=(const BlockList4DownTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockList4DownTable& default_instance();

  static inline const BlockList4DownTable* internal_default_instance() {
    return reinterpret_cast<const BlockList4DownTable*>(
               &_BlockList4DownTable_default_instance_);
  }

  void Swap(BlockList4DownTable* other);

  // implements Message ----------------------------------------------

  inline BlockList4DownTable* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockList4DownTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockList4DownTable& from);
  void MergeFrom(const BlockList4DownTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockList4DownTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.BlockList4Down BlockListForDown = 1;
  int blocklistfordown_size() const;
  void clear_blocklistfordown();
  static const int kBlockListForDownFieldNumber = 1;
  const ::qiuwanli::BlockList4Down& blocklistfordown(int index) const;
  ::qiuwanli::BlockList4Down* mutable_blocklistfordown(int index);
  ::qiuwanli::BlockList4Down* add_blocklistfordown();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockList4Down >*
      mutable_blocklistfordown();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockList4Down >&
      blocklistfordown() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockList4DownTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockList4Down > blocklistfordown_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockInfo2Server : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockInfo2Server) */ {
 public:
  BlockInfo2Server();
  virtual ~BlockInfo2Server();

  BlockInfo2Server(const BlockInfo2Server& from);

  inline BlockInfo2Server& operator=(const BlockInfo2Server& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockInfo2Server& default_instance();

  static inline const BlockInfo2Server* internal_default_instance() {
    return reinterpret_cast<const BlockInfo2Server*>(
               &_BlockInfo2Server_default_instance_);
  }

  void Swap(BlockInfo2Server* other);

  // implements Message ----------------------------------------------

  inline BlockInfo2Server* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockInfo2Server* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockInfo2Server& from);
  void MergeFrom(const BlockInfo2Server& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockInfo2Server* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 BlockNumer = 2;
  int blocknumer_size() const;
  void clear_blocknumer();
  static const int kBlockNumerFieldNumber = 2;
  ::google::protobuf::uint32 blocknumer(int index) const;
  void set_blocknumer(int index, ::google::protobuf::uint32 value);
  void add_blocknumer(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      blocknumer() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_blocknumer();

  // string FileSHA512 = 1;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 1;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockInfo2Server)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > blocknumer_;
  mutable int _blocknumer_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockInfo2ServerTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockInfo2ServerTable) */ {
 public:
  BlockInfo2ServerTable();
  virtual ~BlockInfo2ServerTable();

  BlockInfo2ServerTable(const BlockInfo2ServerTable& from);

  inline BlockInfo2ServerTable& operator=(const BlockInfo2ServerTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockInfo2ServerTable& default_instance();

  static inline const BlockInfo2ServerTable* internal_default_instance() {
    return reinterpret_cast<const BlockInfo2ServerTable*>(
               &_BlockInfo2ServerTable_default_instance_);
  }

  void Swap(BlockInfo2ServerTable* other);

  // implements Message ----------------------------------------------

  inline BlockInfo2ServerTable* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockInfo2ServerTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockInfo2ServerTable& from);
  void MergeFrom(const BlockInfo2ServerTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockInfo2ServerTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.BlockInfo2Server BlockInfo = 2;
  int blockinfo_size() const;
  void clear_blockinfo();
  static const int kBlockInfoFieldNumber = 2;
  const ::qiuwanli::BlockInfo2Server& blockinfo(int index) const;
  ::qiuwanli::BlockInfo2Server* mutable_blockinfo(int index);
  ::qiuwanli::BlockInfo2Server* add_blockinfo();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo2Server >*
      mutable_blockinfo();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo2Server >&
      blockinfo() const;

  // string ClientIP = 1;
  void clear_clientip();
  static const int kClientIPFieldNumber = 1;
  const ::std::string& clientip() const;
  void set_clientip(const ::std::string& value);
  #if LANG_CXX11
  void set_clientip(::std::string&& value);
  #endif
  void set_clientip(const char* value);
  void set_clientip(const char* value, size_t size);
  ::std::string* mutable_clientip();
  ::std::string* release_clientip();
  void set_allocated_clientip(::std::string* clientip);

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockInfo2ServerTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo2Server > blockinfo_;
  ::google::protobuf::internal::ArenaStringPtr clientip_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.UserInfo) */ {
 public:
  UserInfo();
  virtual ~UserInfo();

  UserInfo(const UserInfo& from);

  inline UserInfo& operator=(const UserInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfo& default_instance();

  static inline const UserInfo* internal_default_instance() {
    return reinterpret_cast<const UserInfo*>(
               &_UserInfo_default_instance_);
  }

  void Swap(UserInfo* other);

  // implements Message ----------------------------------------------

  inline UserInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  UserInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserInfo& from);
  void MergeFrom(const UserInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string FileSHA512 = 3;
  int filesha512_size() const;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 3;
  const ::std::string& filesha512(int index) const;
  ::std::string* mutable_filesha512(int index);
  void set_filesha512(int index, const ::std::string& value);
  void set_filesha512(int index, const char* value);
  void set_filesha512(int index, const char* value, size_t size);
  ::std::string* add_filesha512();
  void add_filesha512(const ::std::string& value);
  void add_filesha512(const char* value);
  void add_filesha512(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& filesha512() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_filesha512();

  // string UserID = 1;
  void clear_userid();
  static const int kUserIDFieldNumber = 1;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // string UserPS = 2;
  void clear_userps();
  static const int kUserPSFieldNumber = 2;
  const ::std::string& userps() const;
  void set_userps(const ::std::string& value);
  #if LANG_CXX11
  void set_userps(::std::string&& value);
  #endif
  void set_userps(const char* value);
  void set_userps(const char* value, size_t size);
  ::std::string* mutable_userps();
  ::std::string* release_userps();
  void set_allocated_userps(::std::string* userps);

  // @@protoc_insertion_point(class_scope:qiuwanli.UserInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> filesha512_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  ::google::protobuf::internal::ArenaStringPtr userps_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UserInfoTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.UserInfoTable) */ {
 public:
  UserInfoTable();
  virtual ~UserInfoTable();

  UserInfoTable(const UserInfoTable& from);

  inline UserInfoTable& operator=(const UserInfoTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfoTable& default_instance();

  static inline const UserInfoTable* internal_default_instance() {
    return reinterpret_cast<const UserInfoTable*>(
               &_UserInfoTable_default_instance_);
  }

  void Swap(UserInfoTable* other);

  // implements Message ----------------------------------------------

  inline UserInfoTable* New() const PROTOBUF_FINAL { return New(NULL); }

  UserInfoTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UserInfoTable& from);
  void MergeFrom(const UserInfoTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UserInfoTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.UserInfo User = 1;
  int user_size() const;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::qiuwanli::UserInfo& user(int index) const;
  ::qiuwanli::UserInfo* mutable_user(int index);
  ::qiuwanli::UserInfo* add_user();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::UserInfo >*
      mutable_user();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::UserInfo >&
      user() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.UserInfoTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::UserInfo > user_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Shared : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.Shared) */ {
 public:
  Shared();
  virtual ~Shared();

  Shared(const Shared& from);

  inline Shared& operator=(const Shared& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Shared& default_instance();

  static inline const Shared* internal_default_instance() {
    return reinterpret_cast<const Shared*>(
               &_Shared_default_instance_);
  }

  void Swap(Shared* other);

  // implements Message ----------------------------------------------

  inline Shared* New() const PROTOBUF_FINAL { return New(NULL); }

  Shared* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Shared& from);
  void MergeFrom(const Shared& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Shared* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string SharedUrl = 1;
  void clear_sharedurl();
  static const int kSharedUrlFieldNumber = 1;
  const ::std::string& sharedurl() const;
  void set_sharedurl(const ::std::string& value);
  #if LANG_CXX11
  void set_sharedurl(::std::string&& value);
  #endif
  void set_sharedurl(const char* value);
  void set_sharedurl(const char* value, size_t size);
  ::std::string* mutable_sharedurl();
  ::std::string* release_sharedurl();
  void set_allocated_sharedurl(::std::string* sharedurl);

  // string FileSHA512 = 2;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 2;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // string VerificationCode = 3;
  void clear_verificationcode();
  static const int kVerificationCodeFieldNumber = 3;
  const ::std::string& verificationcode() const;
  void set_verificationcode(const ::std::string& value);
  #if LANG_CXX11
  void set_verificationcode(::std::string&& value);
  #endif
  void set_verificationcode(const char* value);
  void set_verificationcode(const char* value, size_t size);
  ::std::string* mutable_verificationcode();
  ::std::string* release_verificationcode();
  void set_allocated_verificationcode(::std::string* verificationcode);

  // string UserID = 4;
  void clear_userid();
  static const int kUserIDFieldNumber = 4;
  const ::std::string& userid() const;
  void set_userid(const ::std::string& value);
  #if LANG_CXX11
  void set_userid(::std::string&& value);
  #endif
  void set_userid(const char* value);
  void set_userid(const char* value, size_t size);
  ::std::string* mutable_userid();
  ::std::string* release_userid();
  void set_allocated_userid(::std::string* userid);

  // @@protoc_insertion_point(class_scope:qiuwanli.Shared)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sharedurl_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  ::google::protobuf::internal::ArenaStringPtr verificationcode_;
  ::google::protobuf::internal::ArenaStringPtr userid_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SharedTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.SharedTable) */ {
 public:
  SharedTable();
  virtual ~SharedTable();

  SharedTable(const SharedTable& from);

  inline SharedTable& operator=(const SharedTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SharedTable& default_instance();

  static inline const SharedTable* internal_default_instance() {
    return reinterpret_cast<const SharedTable*>(
               &_SharedTable_default_instance_);
  }

  void Swap(SharedTable* other);

  // implements Message ----------------------------------------------

  inline SharedTable* New() const PROTOBUF_FINAL { return New(NULL); }

  SharedTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SharedTable& from);
  void MergeFrom(const SharedTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SharedTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.Shared SharedInfo = 1;
  int sharedinfo_size() const;
  void clear_sharedinfo();
  static const int kSharedInfoFieldNumber = 1;
  const ::qiuwanli::Shared& sharedinfo(int index) const;
  ::qiuwanli::Shared* mutable_sharedinfo(int index);
  ::qiuwanli::Shared* add_sharedinfo();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Shared >*
      mutable_sharedinfo();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Shared >&
      sharedinfo() const;

  // @@protoc_insertion_point(class_scope:qiuwanli.SharedTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Shared > sharedinfo_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Logs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.Logs) */ {
 public:
  Logs();
  virtual ~Logs();

  Logs(const Logs& from);

  inline Logs& operator=(const Logs& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Logs& default_instance();

  static inline const Logs* internal_default_instance() {
    return reinterpret_cast<const Logs*>(
               &_Logs_default_instance_);
  }

  void Swap(Logs* other);

  // implements Message ----------------------------------------------

  inline Logs* New() const PROTOBUF_FINAL { return New(NULL); }

  Logs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Logs& from);
  void MergeFrom(const Logs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Logs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  #if LANG_CXX11
  void set_user_id(::std::string&& value);
  #endif
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // string log_info = 3;
  void clear_log_info();
  static const int kLogInfoFieldNumber = 3;
  const ::std::string& log_info() const;
  void set_log_info(const ::std::string& value);
  #if LANG_CXX11
  void set_log_info(::std::string&& value);
  #endif
  void set_log_info(const char* value);
  void set_log_info(const char* value, size_t size);
  ::std::string* mutable_log_info();
  ::std::string* release_log_info();
  void set_allocated_log_info(::std::string* log_info);

  // bytes log_type = 4;
  void clear_log_type();
  static const int kLogTypeFieldNumber = 4;
  const ::std::string& log_type() const;
  void set_log_type(const ::std::string& value);
  #if LANG_CXX11
  void set_log_type(::std::string&& value);
  #endif
  void set_log_type(const char* value);
  void set_log_type(const void* value, size_t size);
  ::std::string* mutable_log_type();
  ::std::string* release_log_type();
  void set_allocated_log_type(::std::string* log_type);

  // string user_client_UUID = 5;
  void clear_user_client_uuid();
  static const int kUserClientUUIDFieldNumber = 5;
  const ::std::string& user_client_uuid() const;
  void set_user_client_uuid(const ::std::string& value);
  #if LANG_CXX11
  void set_user_client_uuid(::std::string&& value);
  #endif
  void set_user_client_uuid(const char* value);
  void set_user_client_uuid(const char* value, size_t size);
  ::std::string* mutable_user_client_uuid();
  ::std::string* release_user_client_uuid();
  void set_allocated_user_client_uuid(::std::string* user_client_uuid);

  // uint64 log_date = 2;
  void clear_log_date();
  static const int kLogDateFieldNumber = 2;
  ::google::protobuf::uint64 log_date() const;
  void set_log_date(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:qiuwanli.Logs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr log_info_;
  ::google::protobuf::internal::ArenaStringPtr log_type_;
  ::google::protobuf::internal::ArenaStringPtr user_client_uuid_;
  ::google::protobuf::uint64 log_date_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.LogTable) */ {
 public:
  LogTable();
  virtual ~LogTable();

  LogTable(const LogTable& from);

  inline LogTable& operator=(const LogTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogTable& default_instance();

  static inline const LogTable* internal_default_instance() {
    return reinterpret_cast<const LogTable*>(
               &_LogTable_default_instance_);
  }

  void Swap(LogTable* other);

  // implements Message ----------------------------------------------

  inline LogTable* New() const PROTOBUF_FINAL { return New(NULL); }

  LogTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LogTable& from);
  void MergeFrom(const LogTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LogTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.Logs log = 2;
  int log_size() const;
  void clear_log();
  static const int kLogFieldNumber = 2;
  const ::qiuwanli::Logs& log(int index) const;
  ::qiuwanli::Logs* mutable_log(int index);
  ::qiuwanli::Logs* add_log();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >*
      mutable_log();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >&
      log() const;

  // string logdate = 1;
  void clear_logdate();
  static const int kLogdateFieldNumber = 1;
  const ::std::string& logdate() const;
  void set_logdate(const ::std::string& value);
  #if LANG_CXX11
  void set_logdate(::std::string&& value);
  #endif
  void set_logdate(const char* value);
  void set_logdate(const char* value, size_t size);
  ::std::string* mutable_logdate();
  ::std::string* release_logdate();
  void set_allocated_logdate(::std::string* logdate);

  // @@protoc_insertion_point(class_scope:qiuwanli.LogTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs > log_;
  ::google::protobuf::internal::ArenaStringPtr logdate_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockDown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockDown) */ {
 public:
  BlockDown();
  virtual ~BlockDown();

  BlockDown(const BlockDown& from);

  inline BlockDown& operator=(const BlockDown& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockDown& default_instance();

  static inline const BlockDown* internal_default_instance() {
    return reinterpret_cast<const BlockDown*>(
               &_BlockDown_default_instance_);
  }

  void Swap(BlockDown* other);

  // implements Message ----------------------------------------------

  inline BlockDown* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockDown* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockDown& from);
  void MergeFrom(const BlockDown& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockDown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string BlockNumer = 1;
  void clear_blocknumer();
  static const int kBlockNumerFieldNumber = 1;
  const ::std::string& blocknumer() const;
  void set_blocknumer(const ::std::string& value);
  #if LANG_CXX11
  void set_blocknumer(::std::string&& value);
  #endif
  void set_blocknumer(const char* value);
  void set_blocknumer(const char* value, size_t size);
  ::std::string* mutable_blocknumer();
  ::std::string* release_blocknumer();
  void set_allocated_blocknumer(::std::string* blocknumer);

  // string SaveServersIP = 2;
  void clear_saveserversip();
  static const int kSaveServersIPFieldNumber = 2;
  const ::std::string& saveserversip() const;
  void set_saveserversip(const ::std::string& value);
  #if LANG_CXX11
  void set_saveserversip(::std::string&& value);
  #endif
  void set_saveserversip(const char* value);
  void set_saveserversip(const char* value, size_t size);
  ::std::string* mutable_saveserversip();
  ::std::string* release_saveserversip();
  void set_allocated_saveserversip(::std::string* saveserversip);

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockDown)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr blocknumer_;
  ::google::protobuf::internal::ArenaStringPtr saveserversip_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockListDownTable : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:qiuwanli.BlockListDownTable) */ {
 public:
  BlockListDownTable();
  virtual ~BlockListDownTable();

  BlockListDownTable(const BlockListDownTable& from);

  inline BlockListDownTable& operator=(const BlockListDownTable& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockListDownTable& default_instance();

  static inline const BlockListDownTable* internal_default_instance() {
    return reinterpret_cast<const BlockListDownTable*>(
               &_BlockListDownTable_default_instance_);
  }

  void Swap(BlockListDownTable* other);

  // implements Message ----------------------------------------------

  inline BlockListDownTable* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockListDownTable* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockListDownTable& from);
  void MergeFrom(const BlockListDownTable& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockListDownTable* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .qiuwanli.BlockDown BlockListForDown = 3;
  int blocklistfordown_size() const;
  void clear_blocklistfordown();
  static const int kBlockListForDownFieldNumber = 3;
  const ::qiuwanli::BlockDown& blocklistfordown(int index) const;
  ::qiuwanli::BlockDown* mutable_blocklistfordown(int index);
  ::qiuwanli::BlockDown* add_blocklistfordown();
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockDown >*
      mutable_blocklistfordown();
  const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockDown >&
      blocklistfordown() const;

  // string FileSHA512 = 1;
  void clear_filesha512();
  static const int kFileSHA512FieldNumber = 1;
  const ::std::string& filesha512() const;
  void set_filesha512(const ::std::string& value);
  #if LANG_CXX11
  void set_filesha512(::std::string&& value);
  #endif
  void set_filesha512(const char* value);
  void set_filesha512(const char* value, size_t size);
  ::std::string* mutable_filesha512();
  ::std::string* release_filesha512();
  void set_allocated_filesha512(::std::string* filesha512);

  // string FileMD5 = 2;
  void clear_filemd5();
  static const int kFileMD5FieldNumber = 2;
  const ::std::string& filemd5() const;
  void set_filemd5(const ::std::string& value);
  #if LANG_CXX11
  void set_filemd5(::std::string&& value);
  #endif
  void set_filemd5(const char* value);
  void set_filemd5(const char* value, size_t size);
  ::std::string* mutable_filemd5();
  ::std::string* release_filemd5();
  void set_allocated_filemd5(::std::string* filemd5);

  // @@protoc_insertion_point(class_scope:qiuwanli.BlockListDownTable)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockDown > blocklistfordown_;
  ::google::protobuf::internal::ArenaStringPtr filesha512_;
  ::google::protobuf::internal::ArenaStringPtr filemd5_;
  mutable int _cached_size_;
  friend struct  protobuf_DataStruct_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// File2Cilent

// string FileName = 1;
inline void File2Cilent::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File2Cilent::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.FileName)
  return filename_.GetNoArena();
}
inline void File2Cilent::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.FileName)
}
#if LANG_CXX11
inline void File2Cilent::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.FileName)
}
#endif
inline void File2Cilent::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.FileName)
}
inline void File2Cilent::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.FileName)
}
inline ::std::string* File2Cilent::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.FileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File2Cilent::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.FileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File2Cilent::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.FileName)
}

// string FileSHA512 = 2;
inline void File2Cilent::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File2Cilent::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void File2Cilent::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.FileSHA512)
}
#if LANG_CXX11
inline void File2Cilent::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.FileSHA512)
}
#endif
inline void File2Cilent::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.FileSHA512)
}
inline void File2Cilent::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.FileSHA512)
}
inline ::std::string* File2Cilent::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File2Cilent::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File2Cilent::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.FileSHA512)
}

// string CilentID = 3;
inline void File2Cilent::clear_cilentid() {
  cilentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& File2Cilent::cilentid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2Cilent.CilentID)
  return cilentid_.GetNoArena();
}
inline void File2Cilent::set_cilentid(const ::std::string& value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.File2Cilent.CilentID)
}
#if LANG_CXX11
inline void File2Cilent::set_cilentid(::std::string&& value) {
  
  cilentid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.File2Cilent.CilentID)
}
#endif
inline void File2Cilent::set_cilentid(const char* value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.File2Cilent.CilentID)
}
inline void File2Cilent::set_cilentid(const char* value, size_t size) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.File2Cilent.CilentID)
}
inline ::std::string* File2Cilent::mutable_cilentid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2Cilent.CilentID)
  return cilentid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* File2Cilent::release_cilentid() {
  // @@protoc_insertion_point(field_release:qiuwanli.File2Cilent.CilentID)
  
  return cilentid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void File2Cilent::set_allocated_cilentid(::std::string* cilentid) {
  if (cilentid != NULL) {
    
  } else {
    
  }
  cilentid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cilentid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.File2Cilent.CilentID)
}

// -------------------------------------------------------------------

// File2ClientTable

// repeated .qiuwanli.File2Cilent FileToClient = 1;
inline int File2ClientTable::filetoclient_size() const {
  return filetoclient_.size();
}
inline void File2ClientTable::clear_filetoclient() {
  filetoclient_.Clear();
}
inline const ::qiuwanli::File2Cilent& File2ClientTable::filetoclient(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.File2ClientTable.FileToClient)
  return filetoclient_.Get(index);
}
inline ::qiuwanli::File2Cilent* File2ClientTable::mutable_filetoclient(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.File2ClientTable.FileToClient)
  return filetoclient_.Mutable(index);
}
inline ::qiuwanli::File2Cilent* File2ClientTable::add_filetoclient() {
  // @@protoc_insertion_point(field_add:qiuwanli.File2ClientTable.FileToClient)
  return filetoclient_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent >*
File2ClientTable::mutable_filetoclient() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.File2ClientTable.FileToClient)
  return &filetoclient_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::File2Cilent >&
File2ClientTable::filetoclient() const {
  // @@protoc_insertion_point(field_list:qiuwanli.File2ClientTable.FileToClient)
  return filetoclient_;
}

// -------------------------------------------------------------------

// ClientConfigFile

// string CilentID = 1;
inline void ClientConfigFile::clear_cilentid() {
  cilentid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientConfigFile::cilentid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.CilentID)
  return cilentid_.GetNoArena();
}
inline void ClientConfigFile::set_cilentid(const ::std::string& value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.CilentID)
}
#if LANG_CXX11
inline void ClientConfigFile::set_cilentid(::std::string&& value) {
  
  cilentid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ClientConfigFile.CilentID)
}
#endif
inline void ClientConfigFile::set_cilentid(const char* value) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ClientConfigFile.CilentID)
}
inline void ClientConfigFile::set_cilentid(const char* value, size_t size) {
  
  cilentid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ClientConfigFile.CilentID)
}
inline ::std::string* ClientConfigFile::mutable_cilentid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ClientConfigFile.CilentID)
  return cilentid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientConfigFile::release_cilentid() {
  // @@protoc_insertion_point(field_release:qiuwanli.ClientConfigFile.CilentID)
  
  return cilentid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientConfigFile::set_allocated_cilentid(::std::string* cilentid) {
  if (cilentid != NULL) {
    
  } else {
    
  }
  cilentid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cilentid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ClientConfigFile.CilentID)
}

// string SaveIP = 2;
inline void ClientConfigFile::clear_saveip() {
  saveip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientConfigFile::saveip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.SaveIP)
  return saveip_.GetNoArena();
}
inline void ClientConfigFile::set_saveip(const ::std::string& value) {
  
  saveip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.SaveIP)
}
#if LANG_CXX11
inline void ClientConfigFile::set_saveip(::std::string&& value) {
  
  saveip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ClientConfigFile.SaveIP)
}
#endif
inline void ClientConfigFile::set_saveip(const char* value) {
  
  saveip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ClientConfigFile.SaveIP)
}
inline void ClientConfigFile::set_saveip(const char* value, size_t size) {
  
  saveip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ClientConfigFile.SaveIP)
}
inline ::std::string* ClientConfigFile::mutable_saveip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ClientConfigFile.SaveIP)
  return saveip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientConfigFile::release_saveip() {
  // @@protoc_insertion_point(field_release:qiuwanli.ClientConfigFile.SaveIP)
  
  return saveip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientConfigFile::set_allocated_saveip(::std::string* saveip) {
  if (saveip != NULL) {
    
  } else {
    
  }
  saveip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), saveip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ClientConfigFile.SaveIP)
}

// string PriKey = 3;
inline void ClientConfigFile::clear_prikey() {
  prikey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientConfigFile::prikey() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.PriKey)
  return prikey_.GetNoArena();
}
inline void ClientConfigFile::set_prikey(const ::std::string& value) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.PriKey)
}
#if LANG_CXX11
inline void ClientConfigFile::set_prikey(::std::string&& value) {
  
  prikey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ClientConfigFile.PriKey)
}
#endif
inline void ClientConfigFile::set_prikey(const char* value) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ClientConfigFile.PriKey)
}
inline void ClientConfigFile::set_prikey(const char* value, size_t size) {
  
  prikey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ClientConfigFile.PriKey)
}
inline ::std::string* ClientConfigFile::mutable_prikey() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ClientConfigFile.PriKey)
  return prikey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientConfigFile::release_prikey() {
  // @@protoc_insertion_point(field_release:qiuwanli.ClientConfigFile.PriKey)
  
  return prikey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientConfigFile::set_allocated_prikey(::std::string* prikey) {
  if (prikey != NULL) {
    
  } else {
    
  }
  prikey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prikey);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ClientConfigFile.PriKey)
}

// string KeyMD5 = 4;
inline void ClientConfigFile::clear_keymd5() {
  keymd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClientConfigFile::keymd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.KeyMD5)
  return keymd5_.GetNoArena();
}
inline void ClientConfigFile::set_keymd5(const ::std::string& value) {
  
  keymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.KeyMD5)
}
#if LANG_CXX11
inline void ClientConfigFile::set_keymd5(::std::string&& value) {
  
  keymd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.ClientConfigFile.KeyMD5)
}
#endif
inline void ClientConfigFile::set_keymd5(const char* value) {
  
  keymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.ClientConfigFile.KeyMD5)
}
inline void ClientConfigFile::set_keymd5(const char* value, size_t size) {
  
  keymd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.ClientConfigFile.KeyMD5)
}
inline ::std::string* ClientConfigFile::mutable_keymd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.ClientConfigFile.KeyMD5)
  return keymd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClientConfigFile::release_keymd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.ClientConfigFile.KeyMD5)
  
  return keymd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClientConfigFile::set_allocated_keymd5(::std::string* keymd5) {
  if (keymd5 != NULL) {
    
  } else {
    
  }
  keymd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keymd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.ClientConfigFile.KeyMD5)
}

// uint64 TotleSize = 5;
inline void ClientConfigFile::clear_totlesize() {
  totlesize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientConfigFile::totlesize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.TotleSize)
  return totlesize_;
}
inline void ClientConfigFile::set_totlesize(::google::protobuf::uint64 value) {
  
  totlesize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.TotleSize)
}

// uint64 RemainSize = 6;
inline void ClientConfigFile::clear_remainsize() {
  remainsize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ClientConfigFile::remainsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFile.RemainSize)
  return remainsize_;
}
inline void ClientConfigFile::set_remainsize(::google::protobuf::uint64 value) {
  
  remainsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.ClientConfigFile.RemainSize)
}

// -------------------------------------------------------------------

// ClientConfigFileTable

// repeated .qiuwanli.ClientConfigFile ClientInfo = 1;
inline int ClientConfigFileTable::clientinfo_size() const {
  return clientinfo_.size();
}
inline void ClientConfigFileTable::clear_clientinfo() {
  clientinfo_.Clear();
}
inline const ::qiuwanli::ClientConfigFile& ClientConfigFileTable::clientinfo(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.ClientConfigFileTable.ClientInfo)
  return clientinfo_.Get(index);
}
inline ::qiuwanli::ClientConfigFile* ClientConfigFileTable::mutable_clientinfo(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.ClientConfigFileTable.ClientInfo)
  return clientinfo_.Mutable(index);
}
inline ::qiuwanli::ClientConfigFile* ClientConfigFileTable::add_clientinfo() {
  // @@protoc_insertion_point(field_add:qiuwanli.ClientConfigFileTable.ClientInfo)
  return clientinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::ClientConfigFile >*
ClientConfigFileTable::mutable_clientinfo() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.ClientConfigFileTable.ClientInfo)
  return &clientinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::ClientConfigFile >&
ClientConfigFileTable::clientinfo() const {
  // @@protoc_insertion_point(field_list:qiuwanli.ClientConfigFileTable.ClientInfo)
  return clientinfo_;
}

// -------------------------------------------------------------------

// Heart

// string ID = 1;
inline void Heart::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heart::id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Heart.ID)
  return id_.GetNoArena();
}
inline void Heart::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Heart.ID)
}
#if LANG_CXX11
inline void Heart::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Heart.ID)
}
#endif
inline void Heart::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Heart.ID)
}
inline void Heart::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Heart.ID)
}
inline ::std::string* Heart::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Heart.ID)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heart::release_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.Heart.ID)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heart::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Heart.ID)
}

// string RemainSize = 2;
inline void Heart::clear_remainsize() {
  remainsize_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Heart::remainsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Heart.RemainSize)
  return remainsize_.GetNoArena();
}
inline void Heart::set_remainsize(const ::std::string& value) {
  
  remainsize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Heart.RemainSize)
}
#if LANG_CXX11
inline void Heart::set_remainsize(::std::string&& value) {
  
  remainsize_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Heart.RemainSize)
}
#endif
inline void Heart::set_remainsize(const char* value) {
  
  remainsize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Heart.RemainSize)
}
inline void Heart::set_remainsize(const char* value, size_t size) {
  
  remainsize_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Heart.RemainSize)
}
inline ::std::string* Heart::mutable_remainsize() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Heart.RemainSize)
  return remainsize_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Heart::release_remainsize() {
  // @@protoc_insertion_point(field_release:qiuwanli.Heart.RemainSize)
  
  return remainsize_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Heart::set_allocated_remainsize(::std::string* remainsize) {
  if (remainsize != NULL) {
    
  } else {
    
  }
  remainsize_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), remainsize);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Heart.RemainSize)
}

// -------------------------------------------------------------------

// HeartTable

// repeated .qiuwanli.Heart CilentHeart = 1;
inline int HeartTable::cilentheart_size() const {
  return cilentheart_.size();
}
inline void HeartTable::clear_cilentheart() {
  cilentheart_.Clear();
}
inline const ::qiuwanli::Heart& HeartTable::cilentheart(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.HeartTable.CilentHeart)
  return cilentheart_.Get(index);
}
inline ::qiuwanli::Heart* HeartTable::mutable_cilentheart(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.HeartTable.CilentHeart)
  return cilentheart_.Mutable(index);
}
inline ::qiuwanli::Heart* HeartTable::add_cilentheart() {
  // @@protoc_insertion_point(field_add:qiuwanli.HeartTable.CilentHeart)
  return cilentheart_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::Heart >*
HeartTable::mutable_cilentheart() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.HeartTable.CilentHeart)
  return &cilentheart_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Heart >&
HeartTable::cilentheart() const {
  // @@protoc_insertion_point(field_list:qiuwanli.HeartTable.CilentHeart)
  return cilentheart_;
}

// -------------------------------------------------------------------

// FileInfoList

// string FileSHA512 = 1;
inline void FileInfoList::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfoList::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void FileInfoList::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileSHA512)
}
#if LANG_CXX11
inline void FileInfoList::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.FileSHA512)
}
#endif
inline void FileInfoList::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.FileSHA512)
}
inline void FileInfoList::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.FileSHA512)
}
inline ::std::string* FileInfoList::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfoList::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfoList::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.FileSHA512)
}

// string FileMD5 = 2;
inline void FileInfoList::clear_filemd5() {
  filemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfoList::filemd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileMD5)
  return filemd5_.GetNoArena();
}
inline void FileInfoList::set_filemd5(const ::std::string& value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileMD5)
}
#if LANG_CXX11
inline void FileInfoList::set_filemd5(::std::string&& value) {
  
  filemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.FileMD5)
}
#endif
inline void FileInfoList::set_filemd5(const char* value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.FileMD5)
}
inline void FileInfoList::set_filemd5(const char* value, size_t size) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.FileMD5)
}
inline ::std::string* FileInfoList::mutable_filemd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.FileMD5)
  return filemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfoList::release_filemd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.FileMD5)
  
  return filemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfoList::set_allocated_filemd5(::std::string* filemd5) {
  if (filemd5 != NULL) {
    
  } else {
    
  }
  filemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.FileMD5)
}

// string FileName = 3;
inline void FileInfoList::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfoList::filename() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileName)
  return filename_.GetNoArena();
}
inline void FileInfoList::set_filename(const ::std::string& value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileName)
}
#if LANG_CXX11
inline void FileInfoList::set_filename(::std::string&& value) {
  
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.FileName)
}
#endif
inline void FileInfoList::set_filename(const char* value) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.FileName)
}
inline void FileInfoList::set_filename(const char* value, size_t size) {
  
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.FileName)
}
inline ::std::string* FileInfoList::mutable_filename() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.FileName)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfoList::release_filename() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.FileName)
  
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfoList::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    
  } else {
    
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.FileName)
}

// string FileCreateDate = 4;
inline void FileInfoList::clear_filecreatedate() {
  filecreatedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfoList::filecreatedate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileCreateDate)
  return filecreatedate_.GetNoArena();
}
inline void FileInfoList::set_filecreatedate(const ::std::string& value) {
  
  filecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileCreateDate)
}
#if LANG_CXX11
inline void FileInfoList::set_filecreatedate(::std::string&& value) {
  
  filecreatedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.FileCreateDate)
}
#endif
inline void FileInfoList::set_filecreatedate(const char* value) {
  
  filecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.FileCreateDate)
}
inline void FileInfoList::set_filecreatedate(const char* value, size_t size) {
  
  filecreatedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.FileCreateDate)
}
inline ::std::string* FileInfoList::mutable_filecreatedate() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.FileCreateDate)
  return filecreatedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfoList::release_filecreatedate() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.FileCreateDate)
  
  return filecreatedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfoList::set_allocated_filecreatedate(::std::string* filecreatedate) {
  if (filecreatedate != NULL) {
    
  } else {
    
  }
  filecreatedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filecreatedate);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.FileCreateDate)
}

// string FileChangeDate = 5;
inline void FileInfoList::clear_filechangedate() {
  filechangedate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfoList::filechangedate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileChangeDate)
  return filechangedate_.GetNoArena();
}
inline void FileInfoList::set_filechangedate(const ::std::string& value) {
  
  filechangedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileChangeDate)
}
#if LANG_CXX11
inline void FileInfoList::set_filechangedate(::std::string&& value) {
  
  filechangedate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.FileChangeDate)
}
#endif
inline void FileInfoList::set_filechangedate(const char* value) {
  
  filechangedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.FileChangeDate)
}
inline void FileInfoList::set_filechangedate(const char* value, size_t size) {
  
  filechangedate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.FileChangeDate)
}
inline ::std::string* FileInfoList::mutable_filechangedate() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.FileChangeDate)
  return filechangedate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfoList::release_filechangedate() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.FileChangeDate)
  
  return filechangedate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfoList::set_allocated_filechangedate(::std::string* filechangedate) {
  if (filechangedate != NULL) {
    
  } else {
    
  }
  filechangedate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filechangedate);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.FileChangeDate)
}

// uint64 FileAllBlock = 6;
inline void FileInfoList::clear_fileallblock() {
  fileallblock_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FileInfoList::fileallblock() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileAllBlock)
  return fileallblock_;
}
inline void FileInfoList::set_fileallblock(::google::protobuf::uint64 value) {
  
  fileallblock_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileAllBlock)
}

// uint64 FileTotalSize = 7;
inline void FileInfoList::clear_filetotalsize() {
  filetotalsize_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FileInfoList::filetotalsize() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.FileTotalSize)
  return filetotalsize_;
}
inline void FileInfoList::set_filetotalsize(::google::protobuf::uint64 value) {
  
  filetotalsize_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.FileTotalSize)
}

// string Tag = 8;
inline void FileInfoList::clear_tag() {
  tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileInfoList::tag() const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoList.Tag)
  return tag_.GetNoArena();
}
inline void FileInfoList::set_tag(const ::std::string& value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.FileInfoList.Tag)
}
#if LANG_CXX11
inline void FileInfoList::set_tag(::std::string&& value) {
  
  tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.FileInfoList.Tag)
}
#endif
inline void FileInfoList::set_tag(const char* value) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.FileInfoList.Tag)
}
inline void FileInfoList::set_tag(const char* value, size_t size) {
  
  tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.FileInfoList.Tag)
}
inline ::std::string* FileInfoList::mutable_tag() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoList.Tag)
  return tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileInfoList::release_tag() {
  // @@protoc_insertion_point(field_release:qiuwanli.FileInfoList.Tag)
  
  return tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileInfoList::set_allocated_tag(::std::string* tag) {
  if (tag != NULL) {
    
  } else {
    
  }
  tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.FileInfoList.Tag)
}

// -------------------------------------------------------------------

// FileInfoListTable

// repeated .qiuwanli.FileInfoList FileList = 1;
inline int FileInfoListTable::filelist_size() const {
  return filelist_.size();
}
inline void FileInfoListTable::clear_filelist() {
  filelist_.Clear();
}
inline const ::qiuwanli::FileInfoList& FileInfoListTable::filelist(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.FileInfoListTable.FileList)
  return filelist_.Get(index);
}
inline ::qiuwanli::FileInfoList* FileInfoListTable::mutable_filelist(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.FileInfoListTable.FileList)
  return filelist_.Mutable(index);
}
inline ::qiuwanli::FileInfoList* FileInfoListTable::add_filelist() {
  // @@protoc_insertion_point(field_add:qiuwanli.FileInfoListTable.FileList)
  return filelist_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfoList >*
FileInfoListTable::mutable_filelist() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.FileInfoListTable.FileList)
  return &filelist_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::FileInfoList >&
FileInfoListTable::filelist() const {
  // @@protoc_insertion_point(field_list:qiuwanli.FileInfoListTable.FileList)
  return filelist_;
}

// -------------------------------------------------------------------

// BlockList4Down

// string FileSHA512 = 1;
inline void BlockList4Down::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockList4Down::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockList4Down.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void BlockList4Down::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockList4Down.FileSHA512)
}
#if LANG_CXX11
inline void BlockList4Down::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockList4Down.FileSHA512)
}
#endif
inline void BlockList4Down::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockList4Down.FileSHA512)
}
inline void BlockList4Down::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockList4Down.FileSHA512)
}
inline ::std::string* BlockList4Down::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockList4Down.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockList4Down::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockList4Down.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockList4Down::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockList4Down.FileSHA512)
}

// string BlockNumer = 2;
inline void BlockList4Down::clear_blocknumer() {
  blocknumer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockList4Down::blocknumer() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockList4Down.BlockNumer)
  return blocknumer_.GetNoArena();
}
inline void BlockList4Down::set_blocknumer(const ::std::string& value) {
  
  blocknumer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockList4Down.BlockNumer)
}
#if LANG_CXX11
inline void BlockList4Down::set_blocknumer(::std::string&& value) {
  
  blocknumer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockList4Down.BlockNumer)
}
#endif
inline void BlockList4Down::set_blocknumer(const char* value) {
  
  blocknumer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockList4Down.BlockNumer)
}
inline void BlockList4Down::set_blocknumer(const char* value, size_t size) {
  
  blocknumer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockList4Down.BlockNumer)
}
inline ::std::string* BlockList4Down::mutable_blocknumer() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockList4Down.BlockNumer)
  return blocknumer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockList4Down::release_blocknumer() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockList4Down.BlockNumer)
  
  return blocknumer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockList4Down::set_allocated_blocknumer(::std::string* blocknumer) {
  if (blocknumer != NULL) {
    
  } else {
    
  }
  blocknumer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blocknumer);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockList4Down.BlockNumer)
}

// string SaveServersIP = 3;
inline void BlockList4Down::clear_saveserversip() {
  saveserversip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockList4Down::saveserversip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockList4Down.SaveServersIP)
  return saveserversip_.GetNoArena();
}
inline void BlockList4Down::set_saveserversip(const ::std::string& value) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockList4Down.SaveServersIP)
}
#if LANG_CXX11
inline void BlockList4Down::set_saveserversip(::std::string&& value) {
  
  saveserversip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockList4Down.SaveServersIP)
}
#endif
inline void BlockList4Down::set_saveserversip(const char* value) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockList4Down.SaveServersIP)
}
inline void BlockList4Down::set_saveserversip(const char* value, size_t size) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockList4Down.SaveServersIP)
}
inline ::std::string* BlockList4Down::mutable_saveserversip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockList4Down.SaveServersIP)
  return saveserversip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockList4Down::release_saveserversip() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockList4Down.SaveServersIP)
  
  return saveserversip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockList4Down::set_allocated_saveserversip(::std::string* saveserversip) {
  if (saveserversip != NULL) {
    
  } else {
    
  }
  saveserversip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), saveserversip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockList4Down.SaveServersIP)
}

// -------------------------------------------------------------------

// BlockList4DownTable

// repeated .qiuwanli.BlockList4Down BlockListForDown = 1;
inline int BlockList4DownTable::blocklistfordown_size() const {
  return blocklistfordown_.size();
}
inline void BlockList4DownTable::clear_blocklistfordown() {
  blocklistfordown_.Clear();
}
inline const ::qiuwanli::BlockList4Down& BlockList4DownTable::blocklistfordown(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockList4DownTable.BlockListForDown)
  return blocklistfordown_.Get(index);
}
inline ::qiuwanli::BlockList4Down* BlockList4DownTable::mutable_blocklistfordown(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockList4DownTable.BlockListForDown)
  return blocklistfordown_.Mutable(index);
}
inline ::qiuwanli::BlockList4Down* BlockList4DownTable::add_blocklistfordown() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockList4DownTable.BlockListForDown)
  return blocklistfordown_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockList4Down >*
BlockList4DownTable::mutable_blocklistfordown() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockList4DownTable.BlockListForDown)
  return &blocklistfordown_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockList4Down >&
BlockList4DownTable::blocklistfordown() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockList4DownTable.BlockListForDown)
  return blocklistfordown_;
}

// -------------------------------------------------------------------

// BlockInfo2Server

// string FileSHA512 = 1;
inline void BlockInfo2Server::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockInfo2Server::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo2Server.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void BlockInfo2Server::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo2Server.FileSHA512)
}
#if LANG_CXX11
inline void BlockInfo2Server::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockInfo2Server.FileSHA512)
}
#endif
inline void BlockInfo2Server::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockInfo2Server.FileSHA512)
}
inline void BlockInfo2Server::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockInfo2Server.FileSHA512)
}
inline ::std::string* BlockInfo2Server::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfo2Server.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockInfo2Server::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockInfo2Server.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockInfo2Server::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockInfo2Server.FileSHA512)
}

// repeated uint32 BlockNumer = 2;
inline int BlockInfo2Server::blocknumer_size() const {
  return blocknumer_.size();
}
inline void BlockInfo2Server::clear_blocknumer() {
  blocknumer_.Clear();
}
inline ::google::protobuf::uint32 BlockInfo2Server::blocknumer(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo2Server.BlockNumer)
  return blocknumer_.Get(index);
}
inline void BlockInfo2Server::set_blocknumer(int index, ::google::protobuf::uint32 value) {
  blocknumer_.Set(index, value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo2Server.BlockNumer)
}
inline void BlockInfo2Server::add_blocknumer(::google::protobuf::uint32 value) {
  blocknumer_.Add(value);
  // @@protoc_insertion_point(field_add:qiuwanli.BlockInfo2Server.BlockNumer)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BlockInfo2Server::blocknumer() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockInfo2Server.BlockNumer)
  return blocknumer_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BlockInfo2Server::mutable_blocknumer() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockInfo2Server.BlockNumer)
  return &blocknumer_;
}

// -------------------------------------------------------------------

// BlockInfo2ServerTable

// string ClientIP = 1;
inline void BlockInfo2ServerTable::clear_clientip() {
  clientip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockInfo2ServerTable::clientip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo2ServerTable.ClientIP)
  return clientip_.GetNoArena();
}
inline void BlockInfo2ServerTable::set_clientip(const ::std::string& value) {
  
  clientip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockInfo2ServerTable.ClientIP)
}
#if LANG_CXX11
inline void BlockInfo2ServerTable::set_clientip(::std::string&& value) {
  
  clientip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockInfo2ServerTable.ClientIP)
}
#endif
inline void BlockInfo2ServerTable::set_clientip(const char* value) {
  
  clientip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockInfo2ServerTable.ClientIP)
}
inline void BlockInfo2ServerTable::set_clientip(const char* value, size_t size) {
  
  clientip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockInfo2ServerTable.ClientIP)
}
inline ::std::string* BlockInfo2ServerTable::mutable_clientip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfo2ServerTable.ClientIP)
  return clientip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockInfo2ServerTable::release_clientip() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockInfo2ServerTable.ClientIP)
  
  return clientip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockInfo2ServerTable::set_allocated_clientip(::std::string* clientip) {
  if (clientip != NULL) {
    
  } else {
    
  }
  clientip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clientip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockInfo2ServerTable.ClientIP)
}

// repeated .qiuwanli.BlockInfo2Server BlockInfo = 2;
inline int BlockInfo2ServerTable::blockinfo_size() const {
  return blockinfo_.size();
}
inline void BlockInfo2ServerTable::clear_blockinfo() {
  blockinfo_.Clear();
}
inline const ::qiuwanli::BlockInfo2Server& BlockInfo2ServerTable::blockinfo(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockInfo2ServerTable.BlockInfo)
  return blockinfo_.Get(index);
}
inline ::qiuwanli::BlockInfo2Server* BlockInfo2ServerTable::mutable_blockinfo(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockInfo2ServerTable.BlockInfo)
  return blockinfo_.Mutable(index);
}
inline ::qiuwanli::BlockInfo2Server* BlockInfo2ServerTable::add_blockinfo() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockInfo2ServerTable.BlockInfo)
  return blockinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo2Server >*
BlockInfo2ServerTable::mutable_blockinfo() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockInfo2ServerTable.BlockInfo)
  return &blockinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockInfo2Server >&
BlockInfo2ServerTable::blockinfo() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockInfo2ServerTable.BlockInfo)
  return blockinfo_;
}

// -------------------------------------------------------------------

// UserInfo

// string UserID = 1;
inline void UserInfo::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::userid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.UserInfo.UserID)
  return userid_.GetNoArena();
}
inline void UserInfo::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.UserInfo.UserID)
}
#if LANG_CXX11
inline void UserInfo::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.UserInfo.UserID)
}
#endif
inline void UserInfo::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.UserInfo.UserID)
}
inline void UserInfo::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.UserInfo.UserID)
}
inline ::std::string* UserInfo::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.UserInfo.UserID)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_userid() {
  // @@protoc_insertion_point(field_release:qiuwanli.UserInfo.UserID)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.UserInfo.UserID)
}

// string UserPS = 2;
inline void UserInfo::clear_userps() {
  userps_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UserInfo::userps() const {
  // @@protoc_insertion_point(field_get:qiuwanli.UserInfo.UserPS)
  return userps_.GetNoArena();
}
inline void UserInfo::set_userps(const ::std::string& value) {
  
  userps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.UserInfo.UserPS)
}
#if LANG_CXX11
inline void UserInfo::set_userps(::std::string&& value) {
  
  userps_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.UserInfo.UserPS)
}
#endif
inline void UserInfo::set_userps(const char* value) {
  
  userps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.UserInfo.UserPS)
}
inline void UserInfo::set_userps(const char* value, size_t size) {
  
  userps_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.UserInfo.UserPS)
}
inline ::std::string* UserInfo::mutable_userps() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.UserInfo.UserPS)
  return userps_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UserInfo::release_userps() {
  // @@protoc_insertion_point(field_release:qiuwanli.UserInfo.UserPS)
  
  return userps_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UserInfo::set_allocated_userps(::std::string* userps) {
  if (userps != NULL) {
    
  } else {
    
  }
  userps_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userps);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.UserInfo.UserPS)
}

// repeated string FileSHA512 = 3;
inline int UserInfo::filesha512_size() const {
  return filesha512_.size();
}
inline void UserInfo::clear_filesha512() {
  filesha512_.Clear();
}
inline const ::std::string& UserInfo::filesha512(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.UserInfo.FileSHA512)
  return filesha512_.Get(index);
}
inline ::std::string* UserInfo::mutable_filesha512(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.UserInfo.FileSHA512)
  return filesha512_.Mutable(index);
}
inline void UserInfo::set_filesha512(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:qiuwanli.UserInfo.FileSHA512)
  filesha512_.Mutable(index)->assign(value);
}
inline void UserInfo::set_filesha512(int index, const char* value) {
  filesha512_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:qiuwanli.UserInfo.FileSHA512)
}
inline void UserInfo::set_filesha512(int index, const char* value, size_t size) {
  filesha512_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.UserInfo.FileSHA512)
}
inline ::std::string* UserInfo::add_filesha512() {
  // @@protoc_insertion_point(field_add_mutable:qiuwanli.UserInfo.FileSHA512)
  return filesha512_.Add();
}
inline void UserInfo::add_filesha512(const ::std::string& value) {
  filesha512_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:qiuwanli.UserInfo.FileSHA512)
}
inline void UserInfo::add_filesha512(const char* value) {
  filesha512_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:qiuwanli.UserInfo.FileSHA512)
}
inline void UserInfo::add_filesha512(const char* value, size_t size) {
  filesha512_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:qiuwanli.UserInfo.FileSHA512)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
UserInfo::filesha512() const {
  // @@protoc_insertion_point(field_list:qiuwanli.UserInfo.FileSHA512)
  return filesha512_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
UserInfo::mutable_filesha512() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.UserInfo.FileSHA512)
  return &filesha512_;
}

// -------------------------------------------------------------------

// UserInfoTable

// repeated .qiuwanli.UserInfo User = 1;
inline int UserInfoTable::user_size() const {
  return user_.size();
}
inline void UserInfoTable::clear_user() {
  user_.Clear();
}
inline const ::qiuwanli::UserInfo& UserInfoTable::user(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.UserInfoTable.User)
  return user_.Get(index);
}
inline ::qiuwanli::UserInfo* UserInfoTable::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.UserInfoTable.User)
  return user_.Mutable(index);
}
inline ::qiuwanli::UserInfo* UserInfoTable::add_user() {
  // @@protoc_insertion_point(field_add:qiuwanli.UserInfoTable.User)
  return user_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::UserInfo >*
UserInfoTable::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.UserInfoTable.User)
  return &user_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::UserInfo >&
UserInfoTable::user() const {
  // @@protoc_insertion_point(field_list:qiuwanli.UserInfoTable.User)
  return user_;
}

// -------------------------------------------------------------------

// Shared

// string SharedUrl = 1;
inline void Shared::clear_sharedurl() {
  sharedurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Shared::sharedurl() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Shared.SharedUrl)
  return sharedurl_.GetNoArena();
}
inline void Shared::set_sharedurl(const ::std::string& value) {
  
  sharedurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Shared.SharedUrl)
}
#if LANG_CXX11
inline void Shared::set_sharedurl(::std::string&& value) {
  
  sharedurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Shared.SharedUrl)
}
#endif
inline void Shared::set_sharedurl(const char* value) {
  
  sharedurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Shared.SharedUrl)
}
inline void Shared::set_sharedurl(const char* value, size_t size) {
  
  sharedurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Shared.SharedUrl)
}
inline ::std::string* Shared::mutable_sharedurl() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Shared.SharedUrl)
  return sharedurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Shared::release_sharedurl() {
  // @@protoc_insertion_point(field_release:qiuwanli.Shared.SharedUrl)
  
  return sharedurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Shared::set_allocated_sharedurl(::std::string* sharedurl) {
  if (sharedurl != NULL) {
    
  } else {
    
  }
  sharedurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sharedurl);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Shared.SharedUrl)
}

// string FileSHA512 = 2;
inline void Shared::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Shared::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Shared.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void Shared::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Shared.FileSHA512)
}
#if LANG_CXX11
inline void Shared::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Shared.FileSHA512)
}
#endif
inline void Shared::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Shared.FileSHA512)
}
inline void Shared::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Shared.FileSHA512)
}
inline ::std::string* Shared::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Shared.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Shared::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.Shared.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Shared::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Shared.FileSHA512)
}

// string VerificationCode = 3;
inline void Shared::clear_verificationcode() {
  verificationcode_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Shared::verificationcode() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Shared.VerificationCode)
  return verificationcode_.GetNoArena();
}
inline void Shared::set_verificationcode(const ::std::string& value) {
  
  verificationcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Shared.VerificationCode)
}
#if LANG_CXX11
inline void Shared::set_verificationcode(::std::string&& value) {
  
  verificationcode_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Shared.VerificationCode)
}
#endif
inline void Shared::set_verificationcode(const char* value) {
  
  verificationcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Shared.VerificationCode)
}
inline void Shared::set_verificationcode(const char* value, size_t size) {
  
  verificationcode_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Shared.VerificationCode)
}
inline ::std::string* Shared::mutable_verificationcode() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Shared.VerificationCode)
  return verificationcode_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Shared::release_verificationcode() {
  // @@protoc_insertion_point(field_release:qiuwanli.Shared.VerificationCode)
  
  return verificationcode_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Shared::set_allocated_verificationcode(::std::string* verificationcode) {
  if (verificationcode != NULL) {
    
  } else {
    
  }
  verificationcode_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verificationcode);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Shared.VerificationCode)
}

// string UserID = 4;
inline void Shared::clear_userid() {
  userid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Shared::userid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Shared.UserID)
  return userid_.GetNoArena();
}
inline void Shared::set_userid(const ::std::string& value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Shared.UserID)
}
#if LANG_CXX11
inline void Shared::set_userid(::std::string&& value) {
  
  userid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Shared.UserID)
}
#endif
inline void Shared::set_userid(const char* value) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Shared.UserID)
}
inline void Shared::set_userid(const char* value, size_t size) {
  
  userid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Shared.UserID)
}
inline ::std::string* Shared::mutable_userid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Shared.UserID)
  return userid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Shared::release_userid() {
  // @@protoc_insertion_point(field_release:qiuwanli.Shared.UserID)
  
  return userid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Shared::set_allocated_userid(::std::string* userid) {
  if (userid != NULL) {
    
  } else {
    
  }
  userid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), userid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Shared.UserID)
}

// -------------------------------------------------------------------

// SharedTable

// repeated .qiuwanli.Shared SharedInfo = 1;
inline int SharedTable::sharedinfo_size() const {
  return sharedinfo_.size();
}
inline void SharedTable::clear_sharedinfo() {
  sharedinfo_.Clear();
}
inline const ::qiuwanli::Shared& SharedTable::sharedinfo(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.SharedTable.SharedInfo)
  return sharedinfo_.Get(index);
}
inline ::qiuwanli::Shared* SharedTable::mutable_sharedinfo(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.SharedTable.SharedInfo)
  return sharedinfo_.Mutable(index);
}
inline ::qiuwanli::Shared* SharedTable::add_sharedinfo() {
  // @@protoc_insertion_point(field_add:qiuwanli.SharedTable.SharedInfo)
  return sharedinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::Shared >*
SharedTable::mutable_sharedinfo() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.SharedTable.SharedInfo)
  return &sharedinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Shared >&
SharedTable::sharedinfo() const {
  // @@protoc_insertion_point(field_list:qiuwanli.SharedTable.SharedInfo)
  return sharedinfo_;
}

// -------------------------------------------------------------------

// Logs

// string user_id = 1;
inline void Logs::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::user_id() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.user_id)
  return user_id_.GetNoArena();
}
inline void Logs::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.user_id)
}
#if LANG_CXX11
inline void Logs::set_user_id(::std::string&& value) {
  
  user_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.user_id)
}
#endif
inline void Logs::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.user_id)
}
inline void Logs::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.user_id)
}
inline ::std::string* Logs::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_user_id() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.user_id)
}

// uint64 log_date = 2;
inline void Logs::clear_log_date() {
  log_date_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Logs::log_date() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_date)
  return log_date_;
}
inline void Logs::set_log_date(::google::protobuf::uint64 value) {
  
  log_date_ = value;
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_date)
}

// string log_info = 3;
inline void Logs::clear_log_info() {
  log_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::log_info() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_info)
  return log_info_.GetNoArena();
}
inline void Logs::set_log_info(const ::std::string& value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_info)
}
#if LANG_CXX11
inline void Logs::set_log_info(::std::string&& value) {
  
  log_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_info)
}
#endif
inline void Logs::set_log_info(const char* value) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_info)
}
inline void Logs::set_log_info(const char* value, size_t size) {
  
  log_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_info)
}
inline ::std::string* Logs::mutable_log_info() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_info)
  return log_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_log_info() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_info)
  
  return log_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_log_info(::std::string* log_info) {
  if (log_info != NULL) {
    
  } else {
    
  }
  log_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_info);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_info)
}

// bytes log_type = 4;
inline void Logs::clear_log_type() {
  log_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::log_type() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.log_type)
  return log_type_.GetNoArena();
}
inline void Logs::set_log_type(const ::std::string& value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.log_type)
}
#if LANG_CXX11
inline void Logs::set_log_type(::std::string&& value) {
  
  log_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.log_type)
}
#endif
inline void Logs::set_log_type(const char* value) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.log_type)
}
inline void Logs::set_log_type(const void* value, size_t size) {
  
  log_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.log_type)
}
inline ::std::string* Logs::mutable_log_type() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.log_type)
  return log_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_log_type() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.log_type)
  
  return log_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_log_type(::std::string* log_type) {
  if (log_type != NULL) {
    
  } else {
    
  }
  log_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), log_type);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.log_type)
}

// string user_client_UUID = 5;
inline void Logs::clear_user_client_uuid() {
  user_client_uuid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Logs::user_client_uuid() const {
  // @@protoc_insertion_point(field_get:qiuwanli.Logs.user_client_UUID)
  return user_client_uuid_.GetNoArena();
}
inline void Logs::set_user_client_uuid(const ::std::string& value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.Logs.user_client_UUID)
}
#if LANG_CXX11
inline void Logs::set_user_client_uuid(::std::string&& value) {
  
  user_client_uuid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.Logs.user_client_UUID)
}
#endif
inline void Logs::set_user_client_uuid(const char* value) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.Logs.user_client_UUID)
}
inline void Logs::set_user_client_uuid(const char* value, size_t size) {
  
  user_client_uuid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.Logs.user_client_UUID)
}
inline ::std::string* Logs::mutable_user_client_uuid() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.Logs.user_client_UUID)
  return user_client_uuid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Logs::release_user_client_uuid() {
  // @@protoc_insertion_point(field_release:qiuwanli.Logs.user_client_UUID)
  
  return user_client_uuid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Logs::set_allocated_user_client_uuid(::std::string* user_client_uuid) {
  if (user_client_uuid != NULL) {
    
  } else {
    
  }
  user_client_uuid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_client_uuid);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.Logs.user_client_UUID)
}

// -------------------------------------------------------------------

// LogTable

// string logdate = 1;
inline void LogTable::clear_logdate() {
  logdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogTable::logdate() const {
  // @@protoc_insertion_point(field_get:qiuwanli.LogTable.logdate)
  return logdate_.GetNoArena();
}
inline void LogTable::set_logdate(const ::std::string& value) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.LogTable.logdate)
}
#if LANG_CXX11
inline void LogTable::set_logdate(::std::string&& value) {
  
  logdate_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.LogTable.logdate)
}
#endif
inline void LogTable::set_logdate(const char* value) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.LogTable.logdate)
}
inline void LogTable::set_logdate(const char* value, size_t size) {
  
  logdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.LogTable.logdate)
}
inline ::std::string* LogTable::mutable_logdate() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.LogTable.logdate)
  return logdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogTable::release_logdate() {
  // @@protoc_insertion_point(field_release:qiuwanli.LogTable.logdate)
  
  return logdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogTable::set_allocated_logdate(::std::string* logdate) {
  if (logdate != NULL) {
    
  } else {
    
  }
  logdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logdate);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.LogTable.logdate)
}

// repeated .qiuwanli.Logs log = 2;
inline int LogTable::log_size() const {
  return log_.size();
}
inline void LogTable::clear_log() {
  log_.Clear();
}
inline const ::qiuwanli::Logs& LogTable::log(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.LogTable.log)
  return log_.Get(index);
}
inline ::qiuwanli::Logs* LogTable::mutable_log(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.LogTable.log)
  return log_.Mutable(index);
}
inline ::qiuwanli::Logs* LogTable::add_log() {
  // @@protoc_insertion_point(field_add:qiuwanli.LogTable.log)
  return log_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >*
LogTable::mutable_log() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.LogTable.log)
  return &log_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::Logs >&
LogTable::log() const {
  // @@protoc_insertion_point(field_list:qiuwanli.LogTable.log)
  return log_;
}

// -------------------------------------------------------------------

// BlockDown

// string BlockNumer = 1;
inline void BlockDown::clear_blocknumer() {
  blocknumer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockDown::blocknumer() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockDown.BlockNumer)
  return blocknumer_.GetNoArena();
}
inline void BlockDown::set_blocknumer(const ::std::string& value) {
  
  blocknumer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockDown.BlockNumer)
}
#if LANG_CXX11
inline void BlockDown::set_blocknumer(::std::string&& value) {
  
  blocknumer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockDown.BlockNumer)
}
#endif
inline void BlockDown::set_blocknumer(const char* value) {
  
  blocknumer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockDown.BlockNumer)
}
inline void BlockDown::set_blocknumer(const char* value, size_t size) {
  
  blocknumer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockDown.BlockNumer)
}
inline ::std::string* BlockDown::mutable_blocknumer() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockDown.BlockNumer)
  return blocknumer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockDown::release_blocknumer() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockDown.BlockNumer)
  
  return blocknumer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockDown::set_allocated_blocknumer(::std::string* blocknumer) {
  if (blocknumer != NULL) {
    
  } else {
    
  }
  blocknumer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blocknumer);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockDown.BlockNumer)
}

// string SaveServersIP = 2;
inline void BlockDown::clear_saveserversip() {
  saveserversip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockDown::saveserversip() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockDown.SaveServersIP)
  return saveserversip_.GetNoArena();
}
inline void BlockDown::set_saveserversip(const ::std::string& value) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockDown.SaveServersIP)
}
#if LANG_CXX11
inline void BlockDown::set_saveserversip(::std::string&& value) {
  
  saveserversip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockDown.SaveServersIP)
}
#endif
inline void BlockDown::set_saveserversip(const char* value) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockDown.SaveServersIP)
}
inline void BlockDown::set_saveserversip(const char* value, size_t size) {
  
  saveserversip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockDown.SaveServersIP)
}
inline ::std::string* BlockDown::mutable_saveserversip() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockDown.SaveServersIP)
  return saveserversip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockDown::release_saveserversip() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockDown.SaveServersIP)
  
  return saveserversip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockDown::set_allocated_saveserversip(::std::string* saveserversip) {
  if (saveserversip != NULL) {
    
  } else {
    
  }
  saveserversip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), saveserversip);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockDown.SaveServersIP)
}

// -------------------------------------------------------------------

// BlockListDownTable

// string FileSHA512 = 1;
inline void BlockListDownTable::clear_filesha512() {
  filesha512_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockListDownTable::filesha512() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListDownTable.FileSHA512)
  return filesha512_.GetNoArena();
}
inline void BlockListDownTable::set_filesha512(const ::std::string& value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockListDownTable.FileSHA512)
}
#if LANG_CXX11
inline void BlockListDownTable::set_filesha512(::std::string&& value) {
  
  filesha512_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockListDownTable.FileSHA512)
}
#endif
inline void BlockListDownTable::set_filesha512(const char* value) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockListDownTable.FileSHA512)
}
inline void BlockListDownTable::set_filesha512(const char* value, size_t size) {
  
  filesha512_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockListDownTable.FileSHA512)
}
inline ::std::string* BlockListDownTable::mutable_filesha512() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListDownTable.FileSHA512)
  return filesha512_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockListDownTable::release_filesha512() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockListDownTable.FileSHA512)
  
  return filesha512_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockListDownTable::set_allocated_filesha512(::std::string* filesha512) {
  if (filesha512 != NULL) {
    
  } else {
    
  }
  filesha512_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filesha512);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockListDownTable.FileSHA512)
}

// string FileMD5 = 2;
inline void BlockListDownTable::clear_filemd5() {
  filemd5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockListDownTable::filemd5() const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListDownTable.FileMD5)
  return filemd5_.GetNoArena();
}
inline void BlockListDownTable::set_filemd5(const ::std::string& value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:qiuwanli.BlockListDownTable.FileMD5)
}
#if LANG_CXX11
inline void BlockListDownTable::set_filemd5(::std::string&& value) {
  
  filemd5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:qiuwanli.BlockListDownTable.FileMD5)
}
#endif
inline void BlockListDownTable::set_filemd5(const char* value) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:qiuwanli.BlockListDownTable.FileMD5)
}
inline void BlockListDownTable::set_filemd5(const char* value, size_t size) {
  
  filemd5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:qiuwanli.BlockListDownTable.FileMD5)
}
inline ::std::string* BlockListDownTable::mutable_filemd5() {
  
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListDownTable.FileMD5)
  return filemd5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockListDownTable::release_filemd5() {
  // @@protoc_insertion_point(field_release:qiuwanli.BlockListDownTable.FileMD5)
  
  return filemd5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockListDownTable::set_allocated_filemd5(::std::string* filemd5) {
  if (filemd5 != NULL) {
    
  } else {
    
  }
  filemd5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filemd5);
  // @@protoc_insertion_point(field_set_allocated:qiuwanli.BlockListDownTable.FileMD5)
}

// repeated .qiuwanli.BlockDown BlockListForDown = 3;
inline int BlockListDownTable::blocklistfordown_size() const {
  return blocklistfordown_.size();
}
inline void BlockListDownTable::clear_blocklistfordown() {
  blocklistfordown_.Clear();
}
inline const ::qiuwanli::BlockDown& BlockListDownTable::blocklistfordown(int index) const {
  // @@protoc_insertion_point(field_get:qiuwanli.BlockListDownTable.BlockListForDown)
  return blocklistfordown_.Get(index);
}
inline ::qiuwanli::BlockDown* BlockListDownTable::mutable_blocklistfordown(int index) {
  // @@protoc_insertion_point(field_mutable:qiuwanli.BlockListDownTable.BlockListForDown)
  return blocklistfordown_.Mutable(index);
}
inline ::qiuwanli::BlockDown* BlockListDownTable::add_blocklistfordown() {
  // @@protoc_insertion_point(field_add:qiuwanli.BlockListDownTable.BlockListForDown)
  return blocklistfordown_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockDown >*
BlockListDownTable::mutable_blocklistfordown() {
  // @@protoc_insertion_point(field_mutable_list:qiuwanli.BlockListDownTable.BlockListForDown)
  return &blocklistfordown_;
}
inline const ::google::protobuf::RepeatedPtrField< ::qiuwanli::BlockDown >&
BlockListDownTable::blocklistfordown() const {
  // @@protoc_insertion_point(field_list:qiuwanli.BlockListDownTable.BlockListForDown)
  return blocklistfordown_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace qiuwanli

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_DataStruct_2eproto__INCLUDED
